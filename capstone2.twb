<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.24.0112.1233                               -->
<workbook original-version='18.1' source-build='2023.3.2 (20233.24.0112.1233)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
    <color-palette custom='true' name='basketball' type='regular'>
      <color>#000000</color>
      <color>#1d1d1b</color>
      <color>#d6562b</color>
      <color>#e74802</color>
      <color>#ef6705</color>
      <color>#ef8b46</color>
      <color>#f3ac71</color>
      <color>#f6e8d7</color>
    </color-palette>
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='nba_college_draft' inline='true' name='federated.1699iq40rx5wde11ykfjy117zi51' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='nba_college_draft' name='textscan.1sd68vt04a7lkt147ibk809hyoxk'>
            <connection class='textscan' directory='D:/NSS (Data Analyst)/Capstone/Capstone/data' filename='nba_college_draft.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1sd68vt04a7lkt147ibk809hyoxk' name='nba_college_draft.csv' table='[nba_college_draft#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='player_id' ordinal='1' />
            <column datatype='string' name='player' ordinal='2' />
            <column datatype='integer' name='debut' ordinal='3' />
            <column datatype='integer' name='final' ordinal='4' />
            <column datatype='string' name='pos' ordinal='5' />
            <column datatype='integer' name='ht' ordinal='6' />
            <column datatype='integer' name='wt' ordinal='7' />
            <column datatype='date' name='birth date' ordinal='8' />
            <column datatype='string' name='colleges' ordinal='9' />
            <column datatype='string' name='first' ordinal='10' />
            <column datatype='string' name='last' ordinal='11' />
            <column datatype='integer' name='g' ordinal='12' />
            <column datatype='integer' name='gs' ordinal='13' />
            <column datatype='real' name='mp' ordinal='14' />
            <column datatype='real' name='fg' ordinal='15' />
            <column datatype='real' name='fga' ordinal='16' />
            <column datatype='real' name='fg%' ordinal='17' />
            <column datatype='real' name='3p' ordinal='18' />
            <column datatype='real' name='3pa' ordinal='19' />
            <column datatype='real' name='3p%' ordinal='20' />
            <column datatype='real' name='2p' ordinal='21' />
            <column datatype='real' name='2pa' ordinal='22' />
            <column datatype='real' name='2p%' ordinal='23' />
            <column datatype='real' name='efg%' ordinal='24' />
            <column datatype='real' name='ft' ordinal='25' />
            <column datatype='real' name='fta' ordinal='26' />
            <column datatype='real' name='ft%' ordinal='27' />
            <column datatype='real' name='orb' ordinal='28' />
            <column datatype='real' name='drb' ordinal='29' />
            <column datatype='real' name='trb' ordinal='30' />
            <column datatype='real' name='ast' ordinal='31' />
            <column datatype='real' name='stl' ordinal='32' />
            <column datatype='real' name='blk' ordinal='33' />
            <column datatype='real' name='tov' ordinal='34' />
            <column datatype='real' name='pf' ordinal='35' />
            <column datatype='real' name='pts' ordinal='36' />
            <column datatype='real' name='per' ordinal='37' />
            <column datatype='real' name='ws' ordinal='38' />
            <column datatype='integer' name='c_g' ordinal='39' />
            <column datatype='integer' name='c_gs' ordinal='40' />
            <column datatype='real' name='c_mp' ordinal='41' />
            <column datatype='real' name='c_fg' ordinal='42' />
            <column datatype='real' name='c_fga' ordinal='43' />
            <column datatype='real' name='c_fg%' ordinal='44' />
            <column datatype='real' name='c_2p' ordinal='45' />
            <column datatype='real' name='c_2pa' ordinal='46' />
            <column datatype='real' name='c_2p%' ordinal='47' />
            <column datatype='real' name='c_3p' ordinal='48' />
            <column datatype='real' name='c_3pa' ordinal='49' />
            <column datatype='real' name='c_3p%' ordinal='50' />
            <column datatype='real' name='c_ft' ordinal='51' />
            <column datatype='real' name='c_fta' ordinal='52' />
            <column datatype='real' name='c_ft%' ordinal='53' />
            <column datatype='real' name='c_orb' ordinal='54' />
            <column datatype='real' name='c_drb' ordinal='55' />
            <column datatype='real' name='c_trb' ordinal='56' />
            <column datatype='real' name='c_ast' ordinal='57' />
            <column datatype='real' name='c_stl' ordinal='58' />
            <column datatype='real' name='c_blk' ordinal='59' />
            <column datatype='real' name='c_tov' ordinal='60' />
            <column datatype='real' name='c_pf' ordinal='61' />
            <column datatype='real' name='c_pts' ordinal='62' />
            <column datatype='real' name='c_efg%' ordinal='63' />
            <column datatype='real' name='c_per' ordinal='64' />
            <column datatype='real' name='c_ws' ordinal='65' />
            <column datatype='real' name='c_sos' ordinal='66' />
            <column datatype='integer' name='pk' ordinal='67' />
            <column datatype='string' name='round' ordinal='68' />
            <column datatype='real' name='nba_ws_game' ordinal='69' />
            <column datatype='real' name='college_ws_game' ordinal='70' />
            <column datatype='string' name='draft_team' ordinal='71' />
            <column datatype='string' name='player 1' ordinal='72' />
            <column datatype='string' name='college_drafted' ordinal='73' />
            <column datatype='integer' name='draft_year' ordinal='74' />
            <column datatype='string' name='last_college_attended' ordinal='75' />
            <column datatype='string' name='blue_blood' ordinal='76' />
            <column datatype='string' name='last_college_full' ordinal='77' />
            <column datatype='real' name='lat' ordinal='78' />
            <column datatype='real' name='lon' ordinal='79' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1sd68vt04a7lkt147ibk809hyoxk' name='nba_college_draft.csv' table='[nba_college_draft#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='player_id' ordinal='1' />
            <column datatype='string' name='player' ordinal='2' />
            <column datatype='integer' name='debut' ordinal='3' />
            <column datatype='integer' name='final' ordinal='4' />
            <column datatype='string' name='pos' ordinal='5' />
            <column datatype='integer' name='ht' ordinal='6' />
            <column datatype='integer' name='wt' ordinal='7' />
            <column datatype='date' name='birth date' ordinal='8' />
            <column datatype='string' name='colleges' ordinal='9' />
            <column datatype='string' name='first' ordinal='10' />
            <column datatype='string' name='last' ordinal='11' />
            <column datatype='integer' name='g' ordinal='12' />
            <column datatype='integer' name='gs' ordinal='13' />
            <column datatype='real' name='mp' ordinal='14' />
            <column datatype='real' name='fg' ordinal='15' />
            <column datatype='real' name='fga' ordinal='16' />
            <column datatype='real' name='fg%' ordinal='17' />
            <column datatype='real' name='3p' ordinal='18' />
            <column datatype='real' name='3pa' ordinal='19' />
            <column datatype='real' name='3p%' ordinal='20' />
            <column datatype='real' name='2p' ordinal='21' />
            <column datatype='real' name='2pa' ordinal='22' />
            <column datatype='real' name='2p%' ordinal='23' />
            <column datatype='real' name='efg%' ordinal='24' />
            <column datatype='real' name='ft' ordinal='25' />
            <column datatype='real' name='fta' ordinal='26' />
            <column datatype='real' name='ft%' ordinal='27' />
            <column datatype='real' name='orb' ordinal='28' />
            <column datatype='real' name='drb' ordinal='29' />
            <column datatype='real' name='trb' ordinal='30' />
            <column datatype='real' name='ast' ordinal='31' />
            <column datatype='real' name='stl' ordinal='32' />
            <column datatype='real' name='blk' ordinal='33' />
            <column datatype='real' name='tov' ordinal='34' />
            <column datatype='real' name='pf' ordinal='35' />
            <column datatype='real' name='pts' ordinal='36' />
            <column datatype='real' name='per' ordinal='37' />
            <column datatype='real' name='ws' ordinal='38' />
            <column datatype='integer' name='c_g' ordinal='39' />
            <column datatype='integer' name='c_gs' ordinal='40' />
            <column datatype='real' name='c_mp' ordinal='41' />
            <column datatype='real' name='c_fg' ordinal='42' />
            <column datatype='real' name='c_fga' ordinal='43' />
            <column datatype='real' name='c_fg%' ordinal='44' />
            <column datatype='real' name='c_2p' ordinal='45' />
            <column datatype='real' name='c_2pa' ordinal='46' />
            <column datatype='real' name='c_2p%' ordinal='47' />
            <column datatype='real' name='c_3p' ordinal='48' />
            <column datatype='real' name='c_3pa' ordinal='49' />
            <column datatype='real' name='c_3p%' ordinal='50' />
            <column datatype='real' name='c_ft' ordinal='51' />
            <column datatype='real' name='c_fta' ordinal='52' />
            <column datatype='real' name='c_ft%' ordinal='53' />
            <column datatype='real' name='c_orb' ordinal='54' />
            <column datatype='real' name='c_drb' ordinal='55' />
            <column datatype='real' name='c_trb' ordinal='56' />
            <column datatype='real' name='c_ast' ordinal='57' />
            <column datatype='real' name='c_stl' ordinal='58' />
            <column datatype='real' name='c_blk' ordinal='59' />
            <column datatype='real' name='c_tov' ordinal='60' />
            <column datatype='real' name='c_pf' ordinal='61' />
            <column datatype='real' name='c_pts' ordinal='62' />
            <column datatype='real' name='c_efg%' ordinal='63' />
            <column datatype='real' name='c_per' ordinal='64' />
            <column datatype='real' name='c_ws' ordinal='65' />
            <column datatype='real' name='c_sos' ordinal='66' />
            <column datatype='integer' name='pk' ordinal='67' />
            <column datatype='string' name='round' ordinal='68' />
            <column datatype='real' name='nba_ws_game' ordinal='69' />
            <column datatype='real' name='college_ws_game' ordinal='70' />
            <column datatype='string' name='draft_team' ordinal='71' />
            <column datatype='string' name='player 1' ordinal='72' />
            <column datatype='string' name='college_drafted' ordinal='73' />
            <column datatype='integer' name='draft_year' ordinal='74' />
            <column datatype='string' name='last_college_attended' ordinal='75' />
            <column datatype='string' name='blue_blood' ordinal='76' />
            <column datatype='string' name='last_college_full' ordinal='77' />
            <column datatype='real' name='lat' ordinal='78' />
            <column datatype='real' name='lon' ordinal='79' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player_id]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>player_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>player</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>debut</remote-name>
            <remote-type>20</remote-type>
            <local-name>[debut]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>debut</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>final</remote-name>
            <remote-type>20</remote-type>
            <local-name>[final]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>final</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pos</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pos]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>pos</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ht</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ht]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>ht</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wt</remote-name>
            <remote-type>20</remote-type>
            <local-name>[wt]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>wt</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>birth date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[birth date]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>birth date</remote-alias>
            <ordinal>8</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>colleges</remote-name>
            <remote-type>129</remote-type>
            <local-name>[colleges]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>colleges</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>first</remote-name>
            <remote-type>129</remote-type>
            <local-name>[first]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>first</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last</remote-name>
            <remote-type>129</remote-type>
            <local-name>[last]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>last</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>g</remote-name>
            <remote-type>20</remote-type>
            <local-name>[g]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>g</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gs]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>gs</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mp]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>mp</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fg]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>fg</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fga</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fga]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>fga</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fg%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fg%]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>fg%</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3p</remote-name>
            <remote-type>5</remote-type>
            <local-name>[3p]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>3p</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3pa</remote-name>
            <remote-type>5</remote-type>
            <local-name>[3pa]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>3pa</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3p%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[3p%]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>3p%</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2p</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2p]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>2p</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2pa</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2pa]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>2pa</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2p%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2p%]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>2p%</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>efg%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[efg%]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>efg%</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ft</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ft]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>ft</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fta</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fta]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>fta</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ft%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ft%]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>ft%</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>orb</remote-name>
            <remote-type>5</remote-type>
            <local-name>[orb]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>orb</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>drb</remote-name>
            <remote-type>5</remote-type>
            <local-name>[drb]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>drb</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trb</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trb]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>trb</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ast</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ast]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>ast</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stl</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stl]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>stl</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>blk</remote-name>
            <remote-type>5</remote-type>
            <local-name>[blk]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>blk</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tov</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tov]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>tov</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pf</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pf]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>pf</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pts</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pts]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>pts</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>per</remote-name>
            <remote-type>5</remote-type>
            <local-name>[per]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>per</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ws</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ws]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>ws</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_g</remote-name>
            <remote-type>20</remote-type>
            <local-name>[c_g]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_g</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_gs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[c_gs]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_gs</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_mp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_mp]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_mp</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_fg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_fg]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_fg</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_fga</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_fga]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_fga</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_fg%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_fg%]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_fg%</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_2p</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_2p]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_2p</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_2pa</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_2pa]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_2pa</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_2p%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_2p%]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_2p%</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_3p</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_3p]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_3p</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_3pa</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_3pa]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_3pa</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_3p%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_3p%]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_3p%</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_ft</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_ft]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_ft</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_fta</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_fta]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_fta</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_ft%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_ft%]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_ft%</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_orb</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_orb]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_orb</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_drb</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_drb]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_drb</remote-alias>
            <ordinal>55</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_trb</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_trb]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_trb</remote-alias>
            <ordinal>56</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_ast</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_ast]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_ast</remote-alias>
            <ordinal>57</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_stl</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_stl]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_stl</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_blk</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_blk]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_blk</remote-alias>
            <ordinal>59</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_tov</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_tov]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_tov</remote-alias>
            <ordinal>60</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_pf</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_pf]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_pf</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_pts</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_pts]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_pts</remote-alias>
            <ordinal>62</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_efg%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_efg%]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_efg%</remote-alias>
            <ordinal>63</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_per</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_per]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_per</remote-alias>
            <ordinal>64</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_ws</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_ws]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_ws</remote-alias>
            <ordinal>65</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_sos</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_sos]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_sos</remote-alias>
            <ordinal>66</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pk</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pk]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>pk</remote-alias>
            <ordinal>67</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>round</remote-name>
            <remote-type>129</remote-type>
            <local-name>[round]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>round</remote-alias>
            <ordinal>68</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nba_ws_game</remote-name>
            <remote-type>5</remote-type>
            <local-name>[nba_ws_game]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>nba_ws_game</remote-alias>
            <ordinal>69</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>college_ws_game</remote-name>
            <remote-type>5</remote-type>
            <local-name>[college_ws_game]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>college_ws_game</remote-alias>
            <ordinal>70</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>draft_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[draft_team]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>draft_team</remote-alias>
            <ordinal>71</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player 1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player 1]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>player 1</remote-alias>
            <ordinal>72</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>college_drafted</remote-name>
            <remote-type>129</remote-type>
            <local-name>[college_drafted]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>college_drafted</remote-alias>
            <ordinal>73</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>draft_year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[draft_year]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>draft_year</remote-alias>
            <ordinal>74</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_college_attended</remote-name>
            <remote-type>129</remote-type>
            <local-name>[last_college_attended]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>last_college_attended</remote-alias>
            <ordinal>75</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>blue_blood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[blue_blood]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>blue_blood</remote-alias>
            <ordinal>76</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_college_full</remote-name>
            <remote-type>129</remote-type>
            <local-name>[last_college_full]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>last_college_full</remote-alias>
            <ordinal>77</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>78</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lon</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lon]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>lon</remote-alias>
            <ordinal>79</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='TO Per Minute (C)' datatype='real' name='[2P Per Minute (C)  (copy)_166633194503729186]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([c_tov])/AVG([c_mp])' />
      </column>
      <column caption='2P%' datatype='real' name='[2p%]' role='measure' type='quantitative' />
      <column caption='2P' datatype='real' name='[2p]' role='measure' type='quantitative' />
      <column caption='2Pa' datatype='real' name='[2pa]' role='measure' type='quantitative' />
      <column caption='3P%' datatype='real' name='[3p%]' role='measure' type='quantitative' />
      <column caption='3P' datatype='real' name='[3p]' role='measure' type='quantitative' />
      <column caption='3Pa' datatype='real' name='[3pa]' role='measure' type='quantitative' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (2P\%)  (copy)_166633194427719689:qk:2]&quot;' value='NBA 3P%' />
          <alias key='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_2P\%)  (copy)_166633194427224071:qk:2]&quot;' value='NBA 2P%' />
          <alias key='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_2P\%)  (copy)_166633194427600904:qk:2]&quot;' value='College 3P%' />
          <alias key='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_FG\%) (copy)_166633194426679300:qk:2]&quot;' value='NBA FG%' />
          <alias key='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_FT\%)  (copy)_166633194428145675:qk:2]&quot;' value='NBA FT%' />
          <alias key='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (FG\%)  (copy)_166633194426802181:qk:2]&quot;' value='College 2P%' />
          <alias key='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (FG\%)  (copy)_166633194427838474:qk:2]&quot;' value='College FT%' />
          <alias key='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220057976834:qk]&quot;' value='College PPM' />
          <alias key='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_166633194426298371:qk:2]&quot;' value='College FG%' />
          <alias key='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Points Per Minute (C) (copy)_1054968220058722309:qk]&quot;' value='NBA PPM' />
          <alias key='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Points Per Minute (copy)_1054968220058288131:qk]&quot;' value='College' />
          <alias key='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Reb Per Minute (C) (copy)_1054968220058873862:qk]&quot;' value='NBA' />
        </aliases>
      </column>
      <column caption='Ast Per Minute (NBA)' datatype='real' name='[Ast Per Minute (C)  (copy)_1054968220059107335]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([ast])/AVG([mp])' />
      </column>
      <column caption='Blocks Per Minute (C)  ' datatype='real' name='[Ast Per Minute (C)  (copy)_166633194469158927]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([c_blk])/AVG([c_mp])' />
      </column>
      <column caption='2p  Per Minute (NBA) ' datatype='real' name='[Ast Per Minute (NBA) (copy)_166633194469085198]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([2p])/AVG([mp])' />
      </column>
      <column caption='FT Per Minute (C) ' datatype='real' name='[Blocks Per Minute (C)   (copy)_166633194487799825]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([c_ft])/AVG([c_mp])' />
      </column>
      <column caption='3P Per Minute (C) ' datatype='real' name='[Blocks Per Minute (C)   (copy)_166633194488463379]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([c_3p])/AVG([c_mp])' />
      </column>
      <column caption='2P Per Minute (C) ' datatype='real' name='[Blocks Per Minute (C)   (copy)_166633194488737813]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([c_2p])/AVG([c_mp])' />
      </column>
      <column caption='FT Per Minute (NBA) ' datatype='real' name='[Blocks Per Minute (NBA)  (copy)_166633194487799826]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([ft])/AVG([mp])' />
      </column>
      <column caption='3P Per Minute (NBA)' datatype='real' name='[Blocks Per Minute (NBA)  (copy)_166633194488463380]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([3p])/AVG([mp])' />
      </column>
      <column caption='Blocks Per Minute (NBA)' datatype='real' name='[Blocks Per Minute (NBA)  (copy)_166633194488737814]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([2p])/AVG([mp])' />
      </column>
      <column caption='Calc (3P%) ' datatype='real' name='[Calc (2P%)  (copy)_166633194427719689]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([3p%])-WINDOW_MIN(SUM([3p%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([3p%]))-WINDOW_MIN(SUM([3p%])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Calc (2P%) ' datatype='real' name='[Calc (C_2P%)  (copy)_166633194427224071]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([2p%])-WINDOW_MIN(SUM([2p%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([2p%]))-WINDOW_MIN(SUM([2p%])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Calc (C_3P%)  ' datatype='real' name='[Calc (C_2P%)  (copy)_166633194427600904]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([c_3p%])-WINDOW_MIN(SUM([c_3p%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([c_3p%]))-WINDOW_MIN(SUM([c_3p%])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Calc (FG%) ' datatype='real' name='[Calc (C_FG%) (copy)_166633194426679300]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([fg%])-WINDOW_MIN(SUM([fg%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([fg%]))-WINDOW_MIN(SUM([fg%])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Calc (FT%)  ' datatype='real' name='[Calc (C_FT%)  (copy)_166633194428145675]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([ft%])-WINDOW_MIN(SUM([ft%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([ft%]))-WINDOW_MIN(SUM([ft%])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Calc (C_2P%) ' datatype='real' name='[Calc (FG%)  (copy)_166633194426802181]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([c_2p%])-WINDOW_MIN(SUM([c_2p%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([c_2p%]))-WINDOW_MIN(SUM([c_2p%])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Calc (C_FT%) ' datatype='real' name='[Calc (FG%)  (copy)_166633194427838474]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([c_ft%])-WINDOW_MIN(SUM([c_ft%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([c_ft%]))-WINDOW_MIN(SUM([c_ft%])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Percent Change (Points)' datatype='real' name='[Calculation_1054968220053663744]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Points Per Minute (C) (copy)_1054968220058722309]-[Calculation_1054968220057976834])/[Calculation_1054968220057976834]*100' />
      </column>
      <column caption='Points Per Minute (C)' datatype='real' name='[Calculation_1054968220057976834]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([c_pts])/AVG([c_mp])' />
      </column>
      <column caption='Calc (C_FG%)' datatype='real' name='[Calculation_166633194426298371]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([c_fg%])-WINDOW_MIN(SUM([c_fg%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([c_fg%]))-WINDOW_MIN(SUM([c_fg%])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Corr: Points -&gt; WS' datatype='real' name='[Calculation_635007556229230606]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CORR(([c_pts]/[c_mp]), [nba_ws_game])' />
      </column>
      <column caption='WS Mag' datatype='real' name='[Calculation_788974368287076352]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='POWER([nba_ws_game], 3)' />
      </column>
      <column caption='PER Mag' datatype='real' name='[Calculation_788974368289239041]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='POWER([per], 3)' />
      </column>
      <column caption='Corr. 2P  -&gt; PER' datatype='real' name='[Corr. 2P  -&gt; WS  (copy)_635007556233175077]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CORR(([c_2p]/[c_mp]), [per])' />
      </column>
      <column caption='Corr. 3P -&gt; PER' datatype='real' name='[Corr. 3P -&gt; WS (copy)_635007556233175076]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CORR(([c_3p]/[c_mp]), [per])' />
      </column>
      <column caption='Corr. Ast -&gt; PER' datatype='real' name='[Corr. Ast -&gt; WS (copy)_635007556233175074]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CORR(([c_ast]/[c_mp]), [per])' />
      </column>
      <column caption='Corr. DRB -&gt; PER' datatype='real' name='[Corr. DRB -&gt; WS (copy)_635007556233175079]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CORR(([c_drb]/[c_mp]), [per])' />
      </column>
      <column caption='Corr. ORB -&gt; PER' datatype='real' name='[Corr. ORB -&gt; WS  (copy)_635007556233175078]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CORR(([c_orb]/[c_mp]), [per])' />
      </column>
      <column caption='Corr. Ast -&gt; WS' datatype='real' name='[Corr. Reb -&gt; WS (copy)_635007556230066192]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CORR(([c_ast]/[c_mp]), [nba_ws_game])' />
      </column>
      <column caption='Corr. eFG% -&gt; WS ' datatype='real' name='[Corr. Reb -&gt; WS (copy)_635007556230254609]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CORR([c_efg%], [nba_ws_game])' />
      </column>
      <column caption='Corr. 3P -&gt; WS' datatype='real' name='[Corr. Reb -&gt; WS (copy)_635007556230537234]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CORR(([c_3p]/[c_mp]), [nba_ws_game])' />
      </column>
      <column caption='Corr. 2P  -&gt; WS ' datatype='real' name='[Corr. Reb -&gt; WS (copy)_635007556230701075]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CORR(([c_2p]/[c_mp]), [nba_ws_game])' />
      </column>
      <column caption='Corr. ORB -&gt; WS ' datatype='real' name='[Corr. Reb -&gt; WS (copy)_635007556231208980]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CORR(([c_orb]/[c_mp]), [nba_ws_game])' />
      </column>
      <column caption='Corr. DRB -&gt; WS' datatype='real' name='[Corr. Reb -&gt; WS (copy)_635007556231323669]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CORR(([c_drb]/[c_mp]), [nba_ws_game])' />
      </column>
      <column caption='Corr. STL -&gt; WS' datatype='real' name='[Corr. Reb -&gt; WS (copy)_635007556231503894]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CORR(([c_stl]/[c_mp]), [nba_ws_game])' />
      </column>
      <column caption='Corr. Reb -&gt; PER' datatype='real' name='[Corr. Reb -&gt; WS (copy)_635007556233175082]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CORR(([c_trb]/[c_mp]), [per])' />
      </column>
      <column caption='Corr. TO -&gt; WS ' datatype='real' name='[Corr. STL -&gt; WS (copy)_635007556231614487]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CORR(([c_tov]/[c_mp]), [nba_ws_game])' />
      </column>
      <column caption='Corr. STL -&gt; PER' datatype='real' name='[Corr. STL -&gt; WS (copy)_635007556233175080]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CORR(([c_stl]/[c_mp]), [per])' />
      </column>
      <column caption='Corr. TO -&gt; PER' datatype='real' name='[Corr. TO -&gt; WS  (copy)_635007556233175081]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CORR(([c_tov]/[c_mp]), [per])' />
      </column>
      <column caption='Corr. WS -&gt; WS ' datatype='real' name='[Corr. TO -&gt; WS  (copy)_841610189327761408]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CORR([college_ws_game], [nba_ws_game])' />
      </column>
      <column caption='Corr. PER -&gt; PER' datatype='real' name='[Corr. WS -&gt; WS  (copy)_841610189328797697]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CORR([c_per], [per])' />
      </column>
      <column caption='Corr. eFG% -&gt; PER' datatype='real' name='[Corr. eFG% -&gt; WS  (copy)_635007556233175075]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CORR([c_efg%], [per])' />
      </column>
      <column caption='Corr: Points -&gt; PER' datatype='real' name='[Corr: Points -&gt; WS (copy)_635007556233175073]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CORR(([c_pts]/[c_mp]), [per])' />
      </column>
      <column caption='index' datatype='integer' name='[F1]' role='measure' type='quantitative' />
      <column caption='AVG Percent Change (2P) ' datatype='real' name='[Percent Change (2P)  (copy)_635007556121145349]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG((([2p]/[mp])-([c_2p]/[c_mp]))/([c_2p]/[c_mp]))' />
      </column>
      <column caption='AVG Percent Change (3P) ' datatype='real' name='[Percent Change (3P) (copy)_635007556121538566]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG((([3p]/[mp])-([c_3p]/[c_mp]))/([c_3p]/[c_mp]))' />
      </column>
      <column caption='Blk % Change ' datatype='real' name='[Percent Change (Ast) (copy)_166633194469371920]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Blocks Per Minute (NBA)  (copy)_166633194488737814]-[Ast Per Minute (C)  (copy)_166633194469158927])/[Ast Per Minute (C)  (copy)_166633194469158927]*100' />
      </column>
      <column caption='AVG Percent Change (Ast) ' datatype='real' name='[Percent Change (Ast) (copy)_635007556121739271]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG((([ast]/[mp])-([c_ast]/[c_mp]))/([c_ast]/[c_mp]))' />
      </column>
      <column caption='Percent Change (ORB)' datatype='real' name='[Percent Change (DRB) (copy)_166633194496200733]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(([orb]/[mp])-[c_orb]/[c_mp])/([c_orb]/[c_mp])*100' />
      </column>
      <column caption='AVG Percent Change (DRB) ' datatype='real' name='[Percent Change (DRB) (copy)_635007556121919496]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG((([drb]/[mp])-[c_drb]/[c_mp])/([c_drb]/[c_mp])*100)' />
      </column>
      <column caption='AVG Percent Change (FT) ' datatype='real' name='[Percent Change (FT) (copy)_635007556121989129]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG((([ft]/[mp])-([c_ft]/[c_mp]))/([c_ft]/[c_mp]))' />
      </column>
      <column caption='Percent Change (Stl)' datatype='real' name='[Percent Change (ORB) (copy)_166633194500960289]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(([stl]/[mp])-[c_stl]/[c_mp])/([c_stl]/[c_mp])*100' />
      </column>
      <column caption='Percent Change (Reb)' datatype='real' name='[Percent Change (Points) (copy)_166633194292793345]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Reb Per Minute (C) (copy)_1054968220058873862]-[Points Per Minute (copy)_1054968220058288131])/[Points Per Minute (copy)_1054968220058288131]*100' />
      </column>
      <column caption='AVG Percent Change (Points) ' datatype='real' name='[Percent Change (Points) (copy)_635007556118589444]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG((([pts]/[mp])-([c_pts]/[c_mp]))/([c_pts]/[c_mp]))' />
      </column>
      <column caption='Percent Change (Ast)' datatype='real' name='[Percent Change (Reb) (copy)_166633194295468034]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Ast Per Minute (C)  (copy)_1054968220059107335]-[Reb Per Minute (C) (copy)_1054968220058558468])/[Reb Per Minute (C) (copy)_1054968220058558468]*100' />
      </column>
      <column caption='Percent Change (FT)' datatype='real' name='[Percent Change (Reb) (copy)_166633194488909847]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Blocks Per Minute (NBA)  (copy)_166633194487799826]-[Blocks Per Minute (C)   (copy)_166633194487799825])/[Blocks Per Minute (C)   (copy)_166633194487799825]*100' />
      </column>
      <column caption='Percent Change (3P)' datatype='real' name='[Percent Change (Reb) (copy)_166633194489098264]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Blocks Per Minute (NBA)  (copy)_166633194488463380]-[Blocks Per Minute (C)   (copy)_166633194488463379])/[Blocks Per Minute (C)   (copy)_166633194488463379]*100' />
      </column>
      <column caption='Percent Change (2P) ' datatype='real' name='[Percent Change (Reb) (copy)_166633194489249817]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Ast Per Minute (NBA) (copy)_166633194469085198]-[Blocks Per Minute (C)   (copy)_166633194488737813])/[Blocks Per Minute (C)   (copy)_166633194488737813]*100' />
      </column>
      <column caption='Percent Change (DRB)' datatype='real' name='[Percent Change (Reb) (copy)_166633194495496218]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(([drb]/[mp])-[c_drb]/[c_mp])/([c_drb]/[c_mp])*100' />
      </column>
      <column caption='AVG Percent Change (Reb) ' datatype='real' name='[Percent Change (Reb) (copy)_635007556122222603]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG((([trb]/[mp])-([c_trb]/[c_mp]))/([c_trb]/[c_mp]))' />
      </column>
      <column caption='Percent Change (TO) ' datatype='real' name='[Percent Change (Stl) (copy)_166633194504069155]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(([tov]/[mp])-[c_tov]/[c_mp])/([c_tov]/[c_mp])*100' />
      </column>
      <column caption='AVG Percent Change (Stl) ' datatype='real' name='[Percent Change (Stl) (copy)_635007556122361868]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG((([stl]/[mp])-[c_stl]/[c_mp])/([c_stl]/[c_mp])*100)' />
      </column>
      <column caption='AVG Percent Change (TO)  ' datatype='real' name='[Percent Change (TO)  (copy)_635007556122480653]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG((([tov]/[mp])-[c_tov]/[c_mp])/([c_tov]/[c_mp])*100)' />
      </column>
      <column caption='Corr. Reb -&gt; WS' datatype='real' name='[Points -&gt; WS (Corr) (copy)_635007556229636111]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CORR(([c_trb]/[c_mp]), [nba_ws_game])' />
      </column>
      <column caption='Points Per Minute (NBA)' datatype='real' name='[Points Per Minute (C) (copy)_1054968220058722309]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([pts])/AVG([mp])' />
      </column>
      <column caption='Points Per Minute (C) (copy)' datatype='real' name='[Points Per Minute (C) (copy)_166633194499317790]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([c_pts])/AVG([c_mp])' />
      </column>
      <column caption='Reb Per Minute (C)' datatype='real' name='[Points Per Minute (copy)_1054968220058288131]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([c_trb])/AVG([c_mp])' />
      </column>
      <column caption='Ast Per Minute (C) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058558468]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([c_ast])/AVG([c_mp])' />
      </column>
      <column caption='Reb Per Minute (NBA) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058873862]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([trb])/AVG([mp])' />
      </column>
      <column caption='Stl Per Minute (C)' datatype='real' name='[Reb Per Minute (C) (copy)_166633194500448287]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([c_stl])/AVG([c_mp])' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='nba_college_draft.csv' datatype='table' name='[__tableau_internal_object_id__].[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]' role='measure' type='quantitative' />
      <column caption='Ast' datatype='real' name='[ast]' role='measure' type='quantitative' />
      <column caption='Birth Date' datatype='date' name='[birth date]' role='dimension' type='ordinal' />
      <column caption='Blk' datatype='real' name='[blk]' role='measure' type='quantitative' />
      <column datatype='string' name='[blue_blood]' role='dimension' type='nominal' />
      <column caption='C 2P%' datatype='real' name='[c_2p%]' role='measure' type='quantitative' />
      <column caption='C 2P' datatype='real' name='[c_2p]' role='measure' type='quantitative' />
      <column caption='C 2Pa' datatype='real' name='[c_2pa]' role='measure' type='quantitative' />
      <column caption='C 3P%' datatype='real' name='[c_3p%]' role='measure' type='quantitative' />
      <column caption='C 3P' datatype='real' name='[c_3p]' role='measure' type='quantitative' />
      <column caption='C 3Pa' datatype='real' name='[c_3pa]' role='measure' type='quantitative' />
      <column caption='C Ast' datatype='real' name='[c_ast]' role='measure' type='quantitative' />
      <column caption='C Blk' datatype='real' name='[c_blk]' role='measure' type='quantitative' />
      <column caption='C Drb' datatype='real' name='[c_drb]' role='measure' type='quantitative' />
      <column caption='C Efg%' datatype='real' name='[c_efg%]' role='measure' type='quantitative' />
      <column caption='C Fg%' datatype='real' name='[c_fg%]' role='measure' type='quantitative' />
      <column caption='C Fg' datatype='real' name='[c_fg]' role='measure' type='quantitative' />
      <column caption='C Fga' datatype='real' name='[c_fga]' role='measure' type='quantitative' />
      <column caption='C Ft%' datatype='real' name='[c_ft%]' role='measure' type='quantitative' />
      <column caption='C Ft' datatype='real' name='[c_ft]' role='measure' type='quantitative' />
      <column caption='C Fta' datatype='real' name='[c_fta]' role='measure' type='quantitative' />
      <column caption='C G' datatype='integer' name='[c_g]' role='measure' type='quantitative' />
      <column caption='C Gs' datatype='integer' name='[c_gs]' role='measure' type='quantitative' />
      <column caption='C Mp' datatype='real' name='[c_mp]' role='measure' type='quantitative' />
      <column caption='C Orb' datatype='real' name='[c_orb]' role='measure' type='quantitative' />
      <column caption='C Per' datatype='real' name='[c_per]' role='measure' type='quantitative' />
      <column caption='C Pf' datatype='real' name='[c_pf]' role='measure' type='quantitative' />
      <column caption='C Pts' datatype='real' name='[c_pts]' role='measure' type='quantitative' />
      <column caption='C Sos' datatype='real' name='[c_sos]' role='measure' type='quantitative' />
      <column caption='C Stl' datatype='real' name='[c_stl]' role='measure' type='quantitative' />
      <column caption='C Tov' datatype='real' name='[c_tov]' role='measure' type='quantitative' />
      <column caption='C Trb' datatype='real' name='[c_trb]' role='measure' type='quantitative' />
      <column caption='C Ws' datatype='real' name='[c_ws]' role='measure' type='quantitative' />
      <column caption='College Drafted' datatype='string' name='[college_drafted]' role='dimension' type='nominal' />
      <column datatype='real' name='[college_ws_game]' role='measure' type='quantitative' />
      <column caption='Colleges' datatype='string' name='[colleges]' role='dimension' type='nominal' />
      <column caption='Debut' datatype='integer' name='[debut]' role='measure' type='quantitative' />
      <column caption='Draft Team' datatype='string' name='[draft_team]' role='dimension' type='nominal' />
      <column caption='Draft Year' datatype='integer' name='[draft_year]' role='dimension' type='quantitative' />
      <column caption='Drb' datatype='real' name='[drb]' role='measure' type='quantitative' />
      <column caption='Efg%' datatype='real' name='[efg%]' role='measure' type='quantitative' />
      <column caption='Fg%' datatype='real' name='[fg%]' role='measure' type='quantitative' />
      <column caption='Fg' datatype='real' name='[fg]' role='measure' type='quantitative' />
      <column caption='Fga' datatype='real' name='[fga]' role='measure' type='quantitative' />
      <column caption='Final' datatype='integer' name='[final]' role='measure' type='quantitative' />
      <column caption='First' datatype='string' name='[first]' role='dimension' type='nominal' />
      <column caption='Ft%' datatype='real' name='[ft%]' role='measure' type='quantitative' />
      <column caption='Ft' datatype='real' name='[ft]' role='measure' type='quantitative' />
      <column caption='Fta' datatype='real' name='[fta]' role='measure' type='quantitative' />
      <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
      <column caption='Gs' datatype='integer' name='[gs]' role='measure' type='quantitative' />
      <column caption='Ht' datatype='integer' name='[ht]' role='measure' type='quantitative' />
      <column caption='Last' datatype='string' name='[last]' role='dimension' type='nominal' />
      <column aggregation='CountD' caption='Last College Attended' datatype='string' name='[last_college_attended]' role='dimension' semantic-role='' type='nominal' />
      <column datatype='string' name='[last_college_full]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[lon]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Mp' datatype='real' name='[mp]' role='measure' type='quantitative' />
      <column datatype='real' name='[nba_ws_game]' role='measure' type='quantitative' />
      <column caption='Orb' datatype='real' name='[orb]' role='measure' type='quantitative' />
      <column caption='Per' datatype='real' name='[per]' role='measure' type='quantitative' />
      <column caption='Pf' datatype='real' name='[pf]' role='measure' type='quantitative' />
      <column caption='Pk' datatype='integer' name='[pk]' role='measure' type='quantitative' />
      <column caption='Player 1' datatype='string' hidden='true' name='[player 1]' role='dimension' type='nominal' />
      <column caption='Player' datatype='string' name='[player]' role='dimension' type='nominal' />
      <column datatype='string' name='[player_id]' role='dimension' type='nominal' />
      <column caption='Pos' datatype='string' name='[pos]' role='dimension' type='nominal' />
      <column caption='Pts' datatype='real' name='[pts]' role='measure' type='quantitative' />
      <column datatype='string' name='[round]' role='dimension' type='nominal' />
      <column caption='Stl' datatype='real' name='[stl]' role='measure' type='quantitative' />
      <column caption='Tov' datatype='real' name='[tov]' role='measure' type='quantitative' />
      <column caption='Trb' datatype='real' name='[trb]' role='measure' type='quantitative' />
      <column caption='Ws' datatype='real' name='[ws]' role='measure' type='quantitative' />
      <column caption='Wt' datatype='integer' name='[wt]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2p%]' derivation='Avg' name='[avg:2p%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[3p%]' derivation='Avg' name='[avg:3p%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_788974368287076352]' derivation='Avg' name='[avg:Calculation_788974368287076352:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_788974368289239041]' derivation='Avg' name='[avg:Calculation_788974368289239041:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ast]' derivation='Avg' name='[avg:ast:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_ast]' derivation='Avg' name='[avg:c_ast:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_pts]' derivation='Avg' name='[avg:c_pts:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_trb]' derivation='Avg' name='[avg:c_trb:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fg%]' derivation='Avg' name='[avg:fg%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ft%]' derivation='Avg' name='[avg:ft%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[nba_ws_game]' derivation='Avg' name='[avg:nba_ws_game:qk]' pivot='key' type='quantitative' />
      <column-instance column='[per]' derivation='Avg' name='[avg:per:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pts]' derivation='Avg' name='[avg:pts:qk]' pivot='key' type='quantitative' />
      <column-instance column='[trb]' derivation='Avg' name='[avg:trb:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ws]' derivation='Avg' name='[avg:ws:qk]' pivot='key' type='quantitative' />
      <column-instance column='[last_college_full]' derivation='Count' name='[cnt:last_college_full:qk]' pivot='key' type='quantitative' />
      <column-instance column='[blue_blood]' derivation='None' name='[none:blue_blood:nk]' pivot='key' type='nominal' />
      <column-instance column='[lat]' derivation='None' name='[none:lat:qk]' pivot='key' type='quantitative' />
      <column-instance column='[lon]' derivation='None' name='[none:lon:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pos]' derivation='None' name='[none:pos:nk]' pivot='key' type='nominal' />
      <column-instance column='[round]' derivation='None' name='[none:round:nk]' pivot='key' type='nominal' />
      <column-instance column='[2p%]' derivation='Sum' name='[sum:2p%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2p]' derivation='Sum' name='[sum:2p:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2pa]' derivation='Sum' name='[sum:2pa:qk]' pivot='key' type='quantitative' />
      <column-instance column='[3p%]' derivation='Sum' name='[sum:3p%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[3p]' derivation='Sum' name='[sum:3p:qk]' pivot='key' type='quantitative' />
      <column-instance column='[3pa]' derivation='Sum' name='[sum:3pa:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_788974368287076352]' derivation='Sum' name='[sum:Calculation_788974368287076352:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_788974368289239041]' derivation='Sum' name='[sum:Calculation_788974368289239041:qk]' pivot='key' type='quantitative' />
      <column-instance column='[F1]' derivation='Sum' name='[sum:F1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Percent Change (DRB) (copy)_166633194496200733]' derivation='Sum' name='[sum:Percent Change (DRB) (copy)_166633194496200733:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Percent Change (Reb) (copy)_166633194495496218]' derivation='Sum' name='[sum:Percent Change (Reb) (copy)_166633194495496218:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ast]' derivation='Sum' name='[sum:ast:qk]' pivot='key' type='quantitative' />
      <column-instance column='[blk]' derivation='Sum' name='[sum:blk:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_2p%]' derivation='Sum' name='[sum:c_2p%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_2p]' derivation='Sum' name='[sum:c_2p:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_2pa]' derivation='Sum' name='[sum:c_2pa:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_3p%]' derivation='Sum' name='[sum:c_3p%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_3p]' derivation='Sum' name='[sum:c_3p:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_3pa]' derivation='Sum' name='[sum:c_3pa:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_ast]' derivation='Sum' name='[sum:c_ast:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_blk]' derivation='Sum' name='[sum:c_blk:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_drb]' derivation='Sum' name='[sum:c_drb:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_efg%]' derivation='Sum' name='[sum:c_efg%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_fg%]' derivation='Sum' name='[sum:c_fg%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_fg]' derivation='Sum' name='[sum:c_fg:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_fga]' derivation='Sum' name='[sum:c_fga:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_ft%]' derivation='Sum' name='[sum:c_ft%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_ft]' derivation='Sum' name='[sum:c_ft:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_fta]' derivation='Sum' name='[sum:c_fta:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_g]' derivation='Sum' name='[sum:c_g:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_gs]' derivation='Sum' name='[sum:c_gs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_mp]' derivation='Sum' name='[sum:c_mp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_orb]' derivation='Sum' name='[sum:c_orb:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_per]' derivation='Sum' name='[sum:c_per:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_pf]' derivation='Sum' name='[sum:c_pf:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_pts]' derivation='Sum' name='[sum:c_pts:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_sos]' derivation='Sum' name='[sum:c_sos:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_stl]' derivation='Sum' name='[sum:c_stl:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_tov]' derivation='Sum' name='[sum:c_tov:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_trb]' derivation='Sum' name='[sum:c_trb:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_ws]' derivation='Sum' name='[sum:c_ws:qk]' pivot='key' type='quantitative' />
      <column-instance column='[college_ws_game]' derivation='Sum' name='[sum:college_ws_game:qk]' pivot='key' type='quantitative' />
      <column-instance column='[debut]' derivation='Sum' name='[sum:debut:qk]' pivot='key' type='quantitative' />
      <column-instance column='[drb]' derivation='Sum' name='[sum:drb:qk]' pivot='key' type='quantitative' />
      <column-instance column='[efg%]' derivation='Sum' name='[sum:efg%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fg%]' derivation='Sum' name='[sum:fg%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fg]' derivation='Sum' name='[sum:fg:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fga]' derivation='Sum' name='[sum:fga:qk]' pivot='key' type='quantitative' />
      <column-instance column='[final]' derivation='Sum' name='[sum:final:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ft%]' derivation='Sum' name='[sum:ft%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ft]' derivation='Sum' name='[sum:ft:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fta]' derivation='Sum' name='[sum:fta:qk]' pivot='key' type='quantitative' />
      <column-instance column='[g]' derivation='Sum' name='[sum:g:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gs]' derivation='Sum' name='[sum:gs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ht]' derivation='Sum' name='[sum:ht:qk]' pivot='key' type='quantitative' />
      <column-instance column='[mp]' derivation='Sum' name='[sum:mp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[nba_ws_game]' derivation='Sum' name='[sum:nba_ws_game:qk]' pivot='key' type='quantitative' />
      <column-instance column='[orb]' derivation='Sum' name='[sum:orb:qk]' pivot='key' type='quantitative' />
      <column-instance column='[per]' derivation='Sum' name='[sum:per:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pf]' derivation='Sum' name='[sum:pf:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pk]' derivation='Sum' name='[sum:pk:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pts]' derivation='Sum' name='[sum:pts:qk]' pivot='key' type='quantitative' />
      <column-instance column='[stl]' derivation='Sum' name='[sum:stl:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tov]' derivation='Sum' name='[sum:tov:qk]' pivot='key' type='quantitative' />
      <column-instance column='[trb]' derivation='Sum' name='[sum:trb:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ws]' derivation='Sum' name='[sum:ws:qk]' pivot='key' type='quantitative' />
      <column-instance column='[wt]' derivation='Sum' name='[sum:wt:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Ast Per Minute (C)  (copy)_1054968220059107335]' derivation='User' name='[usr:Ast Per Minute (C)  (copy)_1054968220059107335:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calc (2P%)  (copy)_166633194427719689]' derivation='User' name='[usr:Calc (2P%)  (copy)_166633194427719689:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1699iq40rx5wde11ykfjy117zi51].[player_id]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calc (2P%)  (copy)_166633194427719689]' derivation='User' name='[usr:Calc (2P%)  (copy)_166633194427719689:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calc (C_2P%)  (copy)_166633194427224071]' derivation='User' name='[usr:Calc (C_2P%)  (copy)_166633194427224071:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1699iq40rx5wde11ykfjy117zi51].[player_id]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calc (C_2P%)  (copy)_166633194427224071]' derivation='User' name='[usr:Calc (C_2P%)  (copy)_166633194427224071:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calc (C_2P%)  (copy)_166633194427600904]' derivation='User' name='[usr:Calc (C_2P%)  (copy)_166633194427600904:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1699iq40rx5wde11ykfjy117zi51].[player_id]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calc (C_2P%)  (copy)_166633194427600904]' derivation='User' name='[usr:Calc (C_2P%)  (copy)_166633194427600904:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calc (C_FG%) (copy)_166633194426679300]' derivation='User' name='[usr:Calc (C_FG%) (copy)_166633194426679300:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1699iq40rx5wde11ykfjy117zi51].[player_id]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calc (C_FG%) (copy)_166633194426679300]' derivation='User' name='[usr:Calc (C_FG%) (copy)_166633194426679300:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calc (C_FT%)  (copy)_166633194428145675]' derivation='User' name='[usr:Calc (C_FT%)  (copy)_166633194428145675:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1699iq40rx5wde11ykfjy117zi51].[player_id]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calc (C_FT%)  (copy)_166633194428145675]' derivation='User' name='[usr:Calc (C_FT%)  (copy)_166633194428145675:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calc (FG%)  (copy)_166633194426802181]' derivation='User' name='[usr:Calc (FG%)  (copy)_166633194426802181:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1699iq40rx5wde11ykfjy117zi51].[player_id]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calc (FG%)  (copy)_166633194426802181]' derivation='User' name='[usr:Calc (FG%)  (copy)_166633194426802181:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calc (FG%)  (copy)_166633194427838474]' derivation='User' name='[usr:Calc (FG%)  (copy)_166633194427838474:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1699iq40rx5wde11ykfjy117zi51].[player_id]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calc (FG%)  (copy)_166633194427838474]' derivation='User' name='[usr:Calc (FG%)  (copy)_166633194427838474:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_1054968220053663744]' derivation='User' name='[usr:Calculation_1054968220053663744:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1054968220057976834]' derivation='User' name='[usr:Calculation_1054968220057976834:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_166633194426298371]' derivation='User' name='[usr:Calculation_166633194426298371:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1699iq40rx5wde11ykfjy117zi51].[player_id]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_166633194426298371]' derivation='User' name='[usr:Calculation_166633194426298371:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Percent Change (Ast) (copy)_166633194469371920]' derivation='User' name='[usr:Percent Change (Ast) (copy)_166633194469371920:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Percent Change (Points) (copy)_166633194292793345]' derivation='User' name='[usr:Percent Change (Points) (copy)_166633194292793345:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Percent Change (Points) (copy)_635007556118589444]' derivation='User' name='[usr:Percent Change (Points) (copy)_635007556118589444:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Percent Change (Reb) (copy)_166633194295468034]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Percent Change (Reb) (copy)_166633194488909847]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194488909847:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Percent Change (Reb) (copy)_166633194489098264]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194489098264:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Percent Change (Reb) (copy)_166633194489249817]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194489249817:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Points Per Minute (C) (copy)_1054968220058722309]' derivation='User' name='[usr:Points Per Minute (C) (copy)_1054968220058722309:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Points Per Minute (copy)_1054968220058288131]' derivation='User' name='[usr:Points Per Minute (copy)_1054968220058288131:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Reb Per Minute (C) (copy)_1054968220058558468]' derivation='User' name='[usr:Reb Per Minute (C) (copy)_1054968220058558468:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Reb Per Minute (C) (copy)_1054968220058873862]' derivation='User' name='[usr:Reb Per Minute (C) (copy)_1054968220058873862:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (lat,lon)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:lat:qk]' />
          <groupfilter function='level-members' level='[none:lon:qk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (lat,lon)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:lat:qk]' />
          <groupfilter function='level-members' level='[none:lon:qk]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='1' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[:Measure Names]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:2p\%:qk]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_3p\%:qk]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_ft\%:qk]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_stl:qk]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:fg\%:qk]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:stl:qk]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_FG\%) (copy)_166633194426679300:qk:2]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_FG\%) (copy)_166633194426679300:qk]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Reb Per Minute (C) (copy)_1054968220058873862:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[avg:nba_ws_game:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_2p:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_fg:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_per:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:college_ws_game:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:drb:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:g:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:nba_ws_game:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (Reb) (copy)_166633194495496218:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (FG\%)  (copy)_166633194426802181:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194488909847:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489249817:qk]&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:2pa:qk]&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_3pa:qk]&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_fta:qk]&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_tov:qk]&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:fga:qk]&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:tov:qk]&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_FT\%)  (copy)_166633194428145675:qk]&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Points Per Minute (C) (copy)_1054968220058722309:qk]&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[avg:Calculation_788974368289239041:qk]&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[avg:per:qk]&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[none:blue_blood:nk]&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:3p\%:qk]&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_blk:qk]&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_gs:qk]&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_ws:qk]&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Calculation_788974368289239041:qk]&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:ft:qk]&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:per:qk]&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220057976834:qk]&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Reb Per Minute (C) (copy)_1054968220058558468:qk]&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[__tableau_internal_object_id__].[cnt:nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61:qk]&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[avg:Calculation_788974368287076352:qk]&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[avg:ws:qk]&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[cnt:last_college_full:qk]&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:3pa:qk]&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_drb:qk]&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_mp:qk]&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Calculation_788974368287076352:qk]&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:ft\%:qk]&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:ws:qk]&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Ast Per Minute (C)  (copy)_1054968220059107335:qk]&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_2P\%)  (copy)_166633194427224071:qk]&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_2pa:qk]&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_fga:qk]&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_pts:qk]&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:F1:qk]&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:ht:qk]&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:pk:qk]&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_166633194426298371:qk]&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489098264:qk]&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:ast:qk]&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:blk:qk]&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_efg\%:qk]&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_orb:qk]&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:debut:qk]&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:fta:qk]&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:wt:qk]&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (2P\%)  (copy)_166633194427719689:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_2p\%:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_fg\%:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_pf:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:efg\%:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:gs:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (DRB) (copy)_166633194496200733:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:pf:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_2P\%)  (copy)_166633194427600904:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:2p:qk]&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_3p:qk]&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_ft:qk]&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_sos:qk]&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:fg:qk]&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:mp:qk]&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:pts:qk]&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (FG\%)  (copy)_166633194427838474:qk]&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:3p:qk]&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_ast:qk]&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_g:qk]&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_trb:qk]&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:final:qk]&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:orb:qk]&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:trb:qk]&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Points Per Minute (copy)_1054968220058288131:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:blue_blood:nk]' palette='basketball' type='palette'>
            <map to='#000000'>
              <bucket>&quot;Did Not Attend&quot;</bucket>
            </map>
            <map to='#e74802'>
              <bucket>&quot;yes&quot;</bucket>
            </map>
            <map to='#f6e8d7'>
              <bucket>&quot;no&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:pos:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;C&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;F-G&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;F-C&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;G-F&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;F&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;G&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;C-F&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:round:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;first&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;undrafted&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;second&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;lottery&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' palette='basketball' type='palette'>
            <map to='#000000'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[__tableau_internal_object_id__].[cnt:nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61:qk]&quot;</bucket>
            </map>
            <map to='#000000'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[avg:3p\%:qk]&quot;</bucket>
            </map>
            <map to='#000000'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[avg:nba_ws_game:qk]&quot;</bucket>
            </map>
            <map to='#000000'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:2p:qk]&quot;</bucket>
            </map>
            <map to='#000000'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_efg\%:qk]&quot;</bucket>
            </map>
            <map to='#000000'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_ft\%:qk]&quot;</bucket>
            </map>
            <map to='#000000'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_ws:qk]&quot;</bucket>
            </map>
            <map to='#000000'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:final:qk]&quot;</bucket>
            </map>
            <map to='#000000'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:nba_ws_game:qk]&quot;</bucket>
            </map>
            <map to='#000000'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (Reb) (copy)_166633194495496218:qk]&quot;</bucket>
            </map>
            <map to='#000000'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:pk:qk]&quot;</bucket>
            </map>
            <map to='#000000'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (FG\%)  (copy)_166633194426802181:qk]&quot;</bucket>
            </map>
            <map to='#000000'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]&quot;</bucket>
            </map>
            <map to='#1d1d1b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[avg:ft\%:qk]&quot;</bucket>
            </map>
            <map to='#1d1d1b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:2p\%:qk]&quot;</bucket>
            </map>
            <map to='#1d1d1b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_blk:qk]&quot;</bucket>
            </map>
            <map to='#1d1d1b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_fta:qk]&quot;</bucket>
            </map>
            <map to='#1d1d1b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_sos:qk]&quot;</bucket>
            </map>
            <map to='#1d1d1b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:debut:qk]&quot;</bucket>
            </map>
            <map to='#1d1d1b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:ft:qk]&quot;</bucket>
            </map>
            <map to='#1d1d1b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:wt:qk]&quot;</bucket>
            </map>
            <map to='#1d1d1b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_2P\%)  (copy)_166633194427600904:qk]&quot;</bucket>
            </map>
            <map to='#1d1d1b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_635007556118589444:qk]&quot;</bucket>
            </map>
            <map to='#27aab0'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194488909847:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[avg:c_pts:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_pts:qk]&quot;</bucket>
            </map>
            <map to='#57606c'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Ast) (copy)_166633194469371920:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[avg:trb:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:trb:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_trb:qk]:1&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[avg:ast:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:ast:qk]&quot;</bucket>
            </map>
            <map to='#d6562b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[avg:2p\%:qk]&quot;</bucket>
            </map>
            <map to='#d6562b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:2pa:qk]&quot;</bucket>
            </map>
            <map to='#d6562b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_drb:qk]&quot;</bucket>
            </map>
            <map to='#d6562b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_g:qk]&quot;</bucket>
            </map>
            <map to='#d6562b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_stl:qk]&quot;</bucket>
            </map>
            <map to='#d6562b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:drb:qk]&quot;</bucket>
            </map>
            <map to='#d6562b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:ft\%:qk]&quot;</bucket>
            </map>
            <map to='#d6562b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:orb:qk]&quot;</bucket>
            </map>
            <map to='#d6562b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220057976834:qk]&quot;</bucket>
            </map>
            <map to='#d6562b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_166633194426298371:qk]&quot;</bucket>
            </map>
            <map to='#d6562b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Points Per Minute (copy)_1054968220058288131:qk]&quot;</bucket>
            </map>
            <map to='#d6562b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Reb Per Minute (C) (copy)_1054968220058558468:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[avg:c_trb:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_trb:qk]&quot;</bucket>
            </map>
            <map to='#e74802'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[avg:Calculation_788974368289239041:qk]&quot;</bucket>
            </map>
            <map to='#e74802'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[avg:fg\%:qk]&quot;</bucket>
            </map>
            <map to='#e74802'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[avg:per:qk]&quot;</bucket>
            </map>
            <map to='#e74802'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[none:blue_blood:nk]&quot;</bucket>
            </map>
            <map to='#e74802'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:3p:qk]&quot;</bucket>
            </map>
            <map to='#e74802'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_2p\%:qk]&quot;</bucket>
            </map>
            <map to='#e74802'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_gs:qk]&quot;</bucket>
            </map>
            <map to='#e74802'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_tov:qk]&quot;</bucket>
            </map>
            <map to='#e74802'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Calculation_788974368289239041:qk]&quot;</bucket>
            </map>
            <map to='#e74802'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:efg\%:qk]&quot;</bucket>
            </map>
            <map to='#e74802'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:fta:qk]&quot;</bucket>
            </map>
            <map to='#e74802'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:per:qk]&quot;</bucket>
            </map>
            <map to='#e74802'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (DRB) (copy)_166633194496200733:qk]&quot;</bucket>
            </map>
            <map to='#e74802'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (FG\%)  (copy)_166633194427838474:qk]&quot;</bucket>
            </map>
            <map to='#e74802'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]&quot;</bucket>
            </map>
            <map to='#e74802'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489249817:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51]&quot;</bucket>
            </map>
            <map to='#ef6705'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:3p\%:qk]&quot;</bucket>
            </map>
            <map to='#ef6705'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_2pa:qk]&quot;</bucket>
            </map>
            <map to='#ef6705'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_fg:qk]&quot;</bucket>
            </map>
            <map to='#ef6705'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_mp:qk]&quot;</bucket>
            </map>
            <map to='#ef6705'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:F1:qk]&quot;</bucket>
            </map>
            <map to='#ef6705'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:g:qk]&quot;</bucket>
            </map>
            <map to='#ef6705'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:stl:qk]&quot;</bucket>
            </map>
            <map to='#ef6705'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_FG\%) (copy)_166633194426679300:qk:2]&quot;</bucket>
            </map>
            <map to='#ef6705'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_FG\%) (copy)_166633194426679300:qk]&quot;</bucket>
            </map>
            <map to='#ef8b46'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:3pa:qk]&quot;</bucket>
            </map>
            <map to='#ef8b46'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_3p:qk]&quot;</bucket>
            </map>
            <map to='#ef8b46'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_fg\%:qk]&quot;</bucket>
            </map>
            <map to='#ef8b46'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_orb:qk]&quot;</bucket>
            </map>
            <map to='#ef8b46'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:fg:qk]&quot;</bucket>
            </map>
            <map to='#ef8b46'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:gs:qk]&quot;</bucket>
            </map>
            <map to='#ef8b46'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:tov:qk]&quot;</bucket>
            </map>
            <map to='#ef8b46'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_FT\%)  (copy)_166633194428145675:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[avg:pts:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:pts:qk]&quot;</bucket>
            </map>
            <map to='#f3ac71'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[avg:Calculation_788974368287076352:qk]&quot;</bucket>
            </map>
            <map to='#f3ac71'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[avg:ws:qk]&quot;</bucket>
            </map>
            <map to='#f3ac71'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[cnt:last_college_full:qk]&quot;</bucket>
            </map>
            <map to='#f3ac71'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:blk:qk]&quot;</bucket>
            </map>
            <map to='#f3ac71'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_3p\%:qk]&quot;</bucket>
            </map>
            <map to='#f3ac71'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_fga:qk]&quot;</bucket>
            </map>
            <map to='#f3ac71'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_per:qk]&quot;</bucket>
            </map>
            <map to='#f3ac71'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Calculation_788974368287076352:qk]&quot;</bucket>
            </map>
            <map to='#f3ac71'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:fg\%:qk]&quot;</bucket>
            </map>
            <map to='#f3ac71'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:ht:qk]&quot;</bucket>
            </map>
            <map to='#f3ac71'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:ws:qk]&quot;</bucket>
            </map>
            <map to='#f3ac71'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Ast Per Minute (C)  (copy)_1054968220059107335:qk]&quot;</bucket>
            </map>
            <map to='#f3ac71'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_2P\%)  (copy)_166633194427224071:qk]&quot;</bucket>
            </map>
            <map to='#f3ac71'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]&quot;</bucket>
            </map>
            <map to='#f3ac71'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489098264:qk]&quot;</bucket>
            </map>
            <map to='#f3ac71'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Points Per Minute (C) (copy)_1054968220058722309:qk]&quot;</bucket>
            </map>
            <map to='#f3ac71'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Reb Per Minute (C) (copy)_1054968220058873862:qk]&quot;</bucket>
            </map>
            <map to='#f6e8d7'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_2p:qk]&quot;</bucket>
            </map>
            <map to='#f6e8d7'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_3pa:qk]&quot;</bucket>
            </map>
            <map to='#f6e8d7'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_ft:qk]&quot;</bucket>
            </map>
            <map to='#f6e8d7'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_pf:qk]&quot;</bucket>
            </map>
            <map to='#f6e8d7'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:college_ws_game:qk]&quot;</bucket>
            </map>
            <map to='#f6e8d7'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:fga:qk]&quot;</bucket>
            </map>
            <map to='#f6e8d7'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:mp:qk]&quot;</bucket>
            </map>
            <map to='#f6e8d7'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:pf:qk]&quot;</bucket>
            </map>
            <map to='#f6e8d7'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (2P\%)  (copy)_166633194427719689:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[avg:c_ast:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_ast:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='nba_college_draft.csv' id='nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61'>
            <properties context=''>
              <relation connection='textscan.1sd68vt04a7lkt147ibk809hyoxk' name='nba_college_draft.csv' table='[nba_college_draft#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='player_id' ordinal='1' />
                  <column datatype='string' name='player' ordinal='2' />
                  <column datatype='integer' name='debut' ordinal='3' />
                  <column datatype='integer' name='final' ordinal='4' />
                  <column datatype='string' name='pos' ordinal='5' />
                  <column datatype='integer' name='ht' ordinal='6' />
                  <column datatype='integer' name='wt' ordinal='7' />
                  <column datatype='date' name='birth date' ordinal='8' />
                  <column datatype='string' name='colleges' ordinal='9' />
                  <column datatype='string' name='first' ordinal='10' />
                  <column datatype='string' name='last' ordinal='11' />
                  <column datatype='integer' name='g' ordinal='12' />
                  <column datatype='integer' name='gs' ordinal='13' />
                  <column datatype='real' name='mp' ordinal='14' />
                  <column datatype='real' name='fg' ordinal='15' />
                  <column datatype='real' name='fga' ordinal='16' />
                  <column datatype='real' name='fg%' ordinal='17' />
                  <column datatype='real' name='3p' ordinal='18' />
                  <column datatype='real' name='3pa' ordinal='19' />
                  <column datatype='real' name='3p%' ordinal='20' />
                  <column datatype='real' name='2p' ordinal='21' />
                  <column datatype='real' name='2pa' ordinal='22' />
                  <column datatype='real' name='2p%' ordinal='23' />
                  <column datatype='real' name='efg%' ordinal='24' />
                  <column datatype='real' name='ft' ordinal='25' />
                  <column datatype='real' name='fta' ordinal='26' />
                  <column datatype='real' name='ft%' ordinal='27' />
                  <column datatype='real' name='orb' ordinal='28' />
                  <column datatype='real' name='drb' ordinal='29' />
                  <column datatype='real' name='trb' ordinal='30' />
                  <column datatype='real' name='ast' ordinal='31' />
                  <column datatype='real' name='stl' ordinal='32' />
                  <column datatype='real' name='blk' ordinal='33' />
                  <column datatype='real' name='tov' ordinal='34' />
                  <column datatype='real' name='pf' ordinal='35' />
                  <column datatype='real' name='pts' ordinal='36' />
                  <column datatype='real' name='per' ordinal='37' />
                  <column datatype='real' name='ws' ordinal='38' />
                  <column datatype='integer' name='c_g' ordinal='39' />
                  <column datatype='integer' name='c_gs' ordinal='40' />
                  <column datatype='real' name='c_mp' ordinal='41' />
                  <column datatype='real' name='c_fg' ordinal='42' />
                  <column datatype='real' name='c_fga' ordinal='43' />
                  <column datatype='real' name='c_fg%' ordinal='44' />
                  <column datatype='real' name='c_2p' ordinal='45' />
                  <column datatype='real' name='c_2pa' ordinal='46' />
                  <column datatype='real' name='c_2p%' ordinal='47' />
                  <column datatype='real' name='c_3p' ordinal='48' />
                  <column datatype='real' name='c_3pa' ordinal='49' />
                  <column datatype='real' name='c_3p%' ordinal='50' />
                  <column datatype='real' name='c_ft' ordinal='51' />
                  <column datatype='real' name='c_fta' ordinal='52' />
                  <column datatype='real' name='c_ft%' ordinal='53' />
                  <column datatype='real' name='c_orb' ordinal='54' />
                  <column datatype='real' name='c_drb' ordinal='55' />
                  <column datatype='real' name='c_trb' ordinal='56' />
                  <column datatype='real' name='c_ast' ordinal='57' />
                  <column datatype='real' name='c_stl' ordinal='58' />
                  <column datatype='real' name='c_blk' ordinal='59' />
                  <column datatype='real' name='c_tov' ordinal='60' />
                  <column datatype='real' name='c_pf' ordinal='61' />
                  <column datatype='real' name='c_pts' ordinal='62' />
                  <column datatype='real' name='c_efg%' ordinal='63' />
                  <column datatype='real' name='c_per' ordinal='64' />
                  <column datatype='real' name='c_ws' ordinal='65' />
                  <column datatype='real' name='c_sos' ordinal='66' />
                  <column datatype='integer' name='pk' ordinal='67' />
                  <column datatype='string' name='round' ordinal='68' />
                  <column datatype='real' name='nba_ws_game' ordinal='69' />
                  <column datatype='real' name='college_ws_game' ordinal='70' />
                  <column datatype='string' name='draft_team' ordinal='71' />
                  <column datatype='string' name='player 1' ordinal='72' />
                  <column datatype='string' name='college_drafted' ordinal='73' />
                  <column datatype='integer' name='draft_year' ordinal='74' />
                  <column datatype='string' name='last_college_attended' ordinal='75' />
                  <column datatype='string' name='blue_blood' ordinal='76' />
                  <column datatype='string' name='last_college_full' ordinal='77' />
                  <column datatype='real' name='lat' ordinal='78' />
                  <column datatype='real' name='lon' ordinal='79' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_DE2BB72D0E1E40A59DB3D5DA9AF9F57D]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 4' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Dashboard 4' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action2_BDFE840FF15F4441824B050050D2F90F]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='College WS and Percent Change' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='College WS and Percent Change' />
      </command>
    </action>
    <action caption='Highlight 3 (generated)' name='[Action3_D7AB82EA58684600896831C76CDDF6F9]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='College PER and Percent Change (2)' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='College PER and Percent Change (2)' />
      </command>
    </action>
    <action caption='Highlight 4 (generated)' name='[Action4_A813D4D1B6764D8D9AF58FBA8DE93626]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='round' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Highlight 5 (generated)' name='[Action5_F313E7CEA1BD4882BE8E5FD20ED47512]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Performance by Position' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Pos' />
        <param name='target' value='Performance by Position' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='AVG % Change'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='2P' datatype='real' name='[2p]' role='measure' type='quantitative' />
            <column caption='3P' datatype='real' name='[3p]' role='measure' type='quantitative' />
            <column caption='AVG Percent Change (2P) ' datatype='real' name='[Percent Change (2P)  (copy)_635007556121145349]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG((([2p]/[mp])-([c_2p]/[c_mp]))/([c_2p]/[c_mp]))' />
            </column>
            <column caption='AVG Percent Change (3P) ' datatype='real' name='[Percent Change (3P) (copy)_635007556121538566]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG((([3p]/[mp])-([c_3p]/[c_mp]))/([c_3p]/[c_mp]))' />
            </column>
            <column caption='AVG Percent Change (Ast) ' datatype='real' name='[Percent Change (Ast) (copy)_635007556121739271]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG((([ast]/[mp])-([c_ast]/[c_mp]))/([c_ast]/[c_mp]))' />
            </column>
            <column caption='AVG Percent Change (DRB) ' datatype='real' name='[Percent Change (DRB) (copy)_635007556121919496]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG((([drb]/[mp])-[c_drb]/[c_mp])/([c_drb]/[c_mp])*100)' />
            </column>
            <column caption='AVG Percent Change (FT) ' datatype='real' name='[Percent Change (FT) (copy)_635007556121989129]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG((([ft]/[mp])-([c_ft]/[c_mp]))/([c_ft]/[c_mp]))' />
            </column>
            <column caption='AVG Percent Change (Points) ' datatype='real' name='[Percent Change (Points) (copy)_635007556118589444]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG((([pts]/[mp])-([c_pts]/[c_mp]))/([c_pts]/[c_mp]))' />
            </column>
            <column caption='AVG Percent Change (Reb) ' datatype='real' name='[Percent Change (Reb) (copy)_635007556122222603]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG((([trb]/[mp])-([c_trb]/[c_mp]))/([c_trb]/[c_mp]))' />
            </column>
            <column caption='AVG Percent Change (Stl) ' datatype='real' name='[Percent Change (Stl) (copy)_635007556122361868]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG((([stl]/[mp])-[c_stl]/[c_mp])/([c_stl]/[c_mp])*100)' />
            </column>
            <column caption='AVG Percent Change (TO)  ' datatype='real' name='[Percent Change (TO)  (copy)_635007556122480653]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG((([tov]/[mp])-[c_tov]/[c_mp])/([c_tov]/[c_mp])*100)' />
            </column>
            <column caption='Ast' datatype='real' name='[ast]' role='measure' type='quantitative' />
            <column caption='C 2P' datatype='real' name='[c_2p]' role='measure' type='quantitative' />
            <column caption='C 3P' datatype='real' name='[c_3p]' role='measure' type='quantitative' />
            <column caption='C Ast' datatype='real' name='[c_ast]' role='measure' type='quantitative' />
            <column caption='C Drb' datatype='real' name='[c_drb]' role='measure' type='quantitative' />
            <column caption='C Ft' datatype='real' name='[c_ft]' role='measure' type='quantitative' />
            <column caption='C G' datatype='integer' name='[c_g]' role='measure' type='quantitative' />
            <column caption='C Mp' datatype='real' name='[c_mp]' role='measure' type='quantitative' />
            <column caption='C Pts' datatype='real' name='[c_pts]' role='measure' type='quantitative' />
            <column caption='C Stl' datatype='real' name='[c_stl]' role='measure' type='quantitative' />
            <column caption='C Tov' datatype='real' name='[c_tov]' role='measure' type='quantitative' />
            <column caption='C Trb' datatype='real' name='[c_trb]' role='measure' type='quantitative' />
            <column caption='Drb' datatype='real' name='[drb]' role='measure' type='quantitative' />
            <column caption='Ft' datatype='real' name='[ft]' role='measure' type='quantitative' />
            <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
            <column caption='Mp' datatype='real' name='[mp]' role='measure' type='quantitative' />
            <column-instance column='[c_g]' derivation='None' name='[none:c_g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[g]' derivation='None' name='[none:g:qk]' pivot='key' type='quantitative' />
            <column caption='Pts' datatype='real' name='[pts]' role='measure' type='quantitative' />
            <column caption='Stl' datatype='real' name='[stl]' role='measure' type='quantitative' />
            <column caption='Tov' datatype='real' name='[tov]' role='measure' type='quantitative' />
            <column caption='Trb' datatype='real' name='[trb]' role='measure' type='quantitative' />
            <column-instance column='[Percent Change (2P)  (copy)_635007556121145349]' derivation='User' name='[usr:Percent Change (2P)  (copy)_635007556121145349:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (3P) (copy)_635007556121538566]' derivation='User' name='[usr:Percent Change (3P) (copy)_635007556121538566:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Ast) (copy)_635007556121739271]' derivation='User' name='[usr:Percent Change (Ast) (copy)_635007556121739271:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (DRB) (copy)_635007556121919496]' derivation='User' name='[usr:Percent Change (DRB) (copy)_635007556121919496:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (FT) (copy)_635007556121989129]' derivation='User' name='[usr:Percent Change (FT) (copy)_635007556121989129:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Points) (copy)_635007556118589444]' derivation='User' name='[usr:Percent Change (Points) (copy)_635007556118589444:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_635007556122222603]' derivation='User' name='[usr:Percent Change (Reb) (copy)_635007556122222603:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Stl) (copy)_635007556122361868]' derivation='User' name='[usr:Percent Change (Stl) (copy)_635007556122361868:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (TO)  (copy)_635007556122480653]' derivation='User' name='[usr:Percent Change (TO)  (copy)_635007556122480653:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_g:qk]' included-values='in-range'>
            <min>25</min>
            <max>146</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]' included-values='in-range'>
            <min>50</min>
            <max>833</max>
          </filter>
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_g:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (2P)  (copy)_635007556121145349:qk]' />
              <text column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (3P) (copy)_635007556121538566:qk]' />
              <text column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Ast) (copy)_635007556121739271:qk]' />
              <text column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (DRB) (copy)_635007556121919496:qk]' />
              <text column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (FT) (copy)_635007556121989129:qk]' />
              <text column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_635007556118589444:qk]' />
              <text column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_635007556122222603:qk]' />
              <text column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Stl) (copy)_635007556122361868:qk]' />
              <text column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (TO)  (copy)_635007556122480653:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{DE932E98-EF1F-44FC-AE2F-B443D3CCA598}' />
    </worksheet>
    <worksheet name='Average Assists by Position'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='Ast Per Minute (NBA)' datatype='real' name='[Ast Per Minute (C)  (copy)_1054968220059107335]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ast])/AVG([mp])' />
            </column>
            <column caption='Percent Change (Ast)' datatype='real' name='[Percent Change (Reb) (copy)_166633194295468034]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ast Per Minute (C)  (copy)_1054968220059107335]-[Reb Per Minute (C) (copy)_1054968220058558468])/[Reb Per Minute (C) (copy)_1054968220058558468]*100' />
            </column>
            <column caption='Ast Per Minute (C) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058558468]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_ast])/AVG([c_mp])' />
            </column>
            <column caption='Ast' datatype='real' name='[ast]' role='measure' type='quantitative' />
            <column caption='C Ast' datatype='real' name='[c_ast]' role='measure' type='quantitative' />
            <column caption='C Mp' datatype='real' name='[c_mp]' role='measure' type='quantitative' />
            <column caption='Mp' datatype='real' name='[mp]' role='measure' type='quantitative' />
            <column-instance column='[pos]' derivation='None' name='[none:pos:nk]' pivot='key' type='nominal' />
            <column caption='Pos' datatype='string' name='[pos]' role='dimension' type='nominal' />
            <column-instance column='[Ast Per Minute (C)  (copy)_1054968220059107335]' derivation='User' name='[usr:Ast Per Minute (C)  (copy)_1054968220059107335:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194295468034]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Reb Per Minute (C) (copy)_1054968220058558468]' derivation='User' name='[usr:Reb Per Minute (C) (copy)_1054968220058558468:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Reb Per Minute (C) (copy)_1054968220058558468:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Ast Per Minute (C)  (copy)_1054968220059107335:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' scope='rows' value='Assists Per Minute' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' />
              <text column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='12'>&lt;</run>
                <run bold='true' fontsize='12'>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]</run>
                <run bold='true' fontsize='12'>&gt;%</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values] + [federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values])</rows>
        <cols>([federated.1699iq40rx5wde11ykfjy117zi51].[none:pos:nk] / [federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{0AD39F80-5033-461B-9963-3084F655BE2E}' />
    </worksheet>
    <worksheet name='Average Points by Position'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='Percent Change (Points)' datatype='real' name='[Calculation_1054968220053663744]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Points Per Minute (C) (copy)_1054968220058722309]-[Calculation_1054968220057976834])/[Calculation_1054968220057976834]*100' />
            </column>
            <column caption='Points Per Minute (C)' datatype='real' name='[Calculation_1054968220057976834]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_pts])/AVG([c_mp])' />
            </column>
            <column caption='Points Per Minute (NBA)' datatype='real' name='[Points Per Minute (C) (copy)_1054968220058722309]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([pts])/AVG([mp])' />
            </column>
            <column caption='C Mp' datatype='real' name='[c_mp]' role='measure' type='quantitative' />
            <column caption='C Pts' datatype='real' name='[c_pts]' role='measure' type='quantitative' />
            <column caption='Mp' datatype='real' name='[mp]' role='measure' type='quantitative' />
            <column-instance column='[pos]' derivation='None' name='[none:pos:nk]' pivot='key' type='nominal' />
            <column caption='Pos' datatype='string' name='[pos]' role='dimension' type='nominal' />
            <column caption='Pts' datatype='real' name='[pts]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1054968220053663744]' derivation='User' name='[usr:Calculation_1054968220053663744:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1054968220057976834]' derivation='User' name='[usr:Calculation_1054968220057976834:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Points Per Minute (C) (copy)_1054968220058722309]' derivation='User' name='[usr:Points Per Minute (C) (copy)_1054968220058722309:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220057976834:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Points Per Minute (C) (copy)_1054968220058722309:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' scope='rows' value='Points Per Minute' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f6e8d7' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5822099447250366' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' />
              <text column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]</run>
                <run>&gt;%</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='11' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-range-min' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-line-first' value='false' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values] + [federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values])</rows>
        <cols>([federated.1699iq40rx5wde11ykfjy117zi51].[none:pos:nk] / [federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{1C4F3F5D-B1FC-4DDA-9889-E1A940140AD0}' />
    </worksheet>
    <worksheet name='Average Rebounds by Position '>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='Percent Change (Reb)' datatype='real' name='[Percent Change (Points) (copy)_166633194292793345]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Reb Per Minute (C) (copy)_1054968220058873862]-[Points Per Minute (copy)_1054968220058288131])/[Points Per Minute (copy)_1054968220058288131]*100' />
            </column>
            <column caption='Reb Per Minute (C)' datatype='real' name='[Points Per Minute (copy)_1054968220058288131]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_trb])/AVG([c_mp])' />
            </column>
            <column caption='Reb Per Minute (NBA) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058873862]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([trb])/AVG([mp])' />
            </column>
            <column caption='C Mp' datatype='real' name='[c_mp]' role='measure' type='quantitative' />
            <column caption='C Trb' datatype='real' name='[c_trb]' role='measure' type='quantitative' />
            <column caption='Mp' datatype='real' name='[mp]' role='measure' type='quantitative' />
            <column-instance column='[pos]' derivation='None' name='[none:pos:nk]' pivot='key' type='nominal' />
            <column caption='Pos' datatype='string' name='[pos]' role='dimension' type='nominal' />
            <column caption='Trb' datatype='real' name='[trb]' role='measure' type='quantitative' />
            <column-instance column='[Percent Change (Points) (copy)_166633194292793345]' derivation='User' name='[usr:Percent Change (Points) (copy)_166633194292793345:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Points Per Minute (copy)_1054968220058288131]' derivation='User' name='[usr:Points Per Minute (copy)_1054968220058288131:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Reb Per Minute (C) (copy)_1054968220058873862]' derivation='User' name='[usr:Reb Per Minute (C) (copy)_1054968220058873862:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Points Per Minute (copy)_1054968220058288131:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Reb Per Minute (C) (copy)_1054968220058873862:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='1' field='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' scope='rows' value='Rebounds Per Minute' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-weight' data-class='total' scope='rows' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-weight' value='normal' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='12' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' />
              <text column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='12'>&lt;</run>
                <run fontsize='12'>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]</run>
                <run fontsize='12'>&gt;%</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-line-first' value='false' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values] + [federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values])</rows>
        <cols>([federated.1699iq40rx5wde11ykfjy117zi51].[none:pos:nk] / [federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{80A3A0D1-F63C-48BC-83A8-A4C16FFA4D3C}' />
    </worksheet>
    <worksheet name='College Experience and Percent Change in Stats (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='Ast Per Minute (NBA)' datatype='real' name='[Ast Per Minute (C)  (copy)_1054968220059107335]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ast])/AVG([mp])' />
            </column>
            <column caption='Percent Change (Points)' datatype='real' name='[Calculation_1054968220053663744]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Points Per Minute (C) (copy)_1054968220058722309]-[Calculation_1054968220057976834])/[Calculation_1054968220057976834]*100' />
            </column>
            <column caption='Points Per Minute (C)' datatype='real' name='[Calculation_1054968220057976834]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_pts])/AVG([c_mp])' />
            </column>
            <column caption='Percent Change (Reb)' datatype='real' name='[Percent Change (Points) (copy)_166633194292793345]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Reb Per Minute (C) (copy)_1054968220058873862]-[Points Per Minute (copy)_1054968220058288131])/[Points Per Minute (copy)_1054968220058288131]*100' />
            </column>
            <column caption='Percent Change (Ast)' datatype='real' name='[Percent Change (Reb) (copy)_166633194295468034]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ast Per Minute (C)  (copy)_1054968220059107335]-[Reb Per Minute (C) (copy)_1054968220058558468])/[Reb Per Minute (C) (copy)_1054968220058558468]*100' />
            </column>
            <column caption='Points Per Minute (NBA)' datatype='real' name='[Points Per Minute (C) (copy)_1054968220058722309]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([pts])/AVG([mp])' />
            </column>
            <column caption='Reb Per Minute (C)' datatype='real' name='[Points Per Minute (copy)_1054968220058288131]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_trb])/AVG([c_mp])' />
            </column>
            <column caption='Ast Per Minute (C) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058558468]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_ast])/AVG([c_mp])' />
            </column>
            <column caption='Reb Per Minute (NBA) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058873862]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([trb])/AVG([mp])' />
            </column>
            <column caption='Ast' datatype='real' name='[ast]' role='measure' type='quantitative' />
            <column caption='C Ast' datatype='real' name='[c_ast]' role='measure' type='quantitative' />
            <column caption='C G' datatype='integer' name='[c_g]' role='measure' type='quantitative' />
            <column caption='C Mp' datatype='real' name='[c_mp]' role='measure' type='quantitative' />
            <column caption='C Pts' datatype='real' name='[c_pts]' role='measure' type='quantitative' />
            <column caption='C Trb' datatype='real' name='[c_trb]' role='measure' type='quantitative' />
            <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
            <column caption='Mp' datatype='real' name='[mp]' role='measure' type='quantitative' />
            <column-instance column='[g]' derivation='None' name='[none:g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player_id]' derivation='None' name='[none:player_id:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[player_id]' role='dimension' type='nominal' />
            <column caption='Pts' datatype='real' name='[pts]' role='measure' type='quantitative' />
            <column-instance column='[c_g]' derivation='Sum' name='[sum:c_g:qk]' pivot='key' type='quantitative' />
            <column caption='Trb' datatype='real' name='[trb]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1054968220053663744]' derivation='User' name='[usr:Calculation_1054968220053663744:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Points) (copy)_166633194292793345]' derivation='User' name='[usr:Percent Change (Points) (copy)_166633194292793345:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194295468034]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]' included-values='in-range'>
            <min>50</min>
            <max>833</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f6e8d7' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' value='#ffffff' />
            <format attr='stroke-size' value='3' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' />
              <lod column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60370165109634399' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='165' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-color' value='#000000' />
                <format attr='stroke-size' value='4' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]</rows>
        <cols>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_g:qk]</cols>
      </table>
      <simple-id uuid='{0508900B-5B29-4E95-9542-27F1E556AE93}' />
    </worksheet>
    <worksheet name='College PER and Percent Change (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='Ast Per Minute (NBA)' datatype='real' name='[Ast Per Minute (C)  (copy)_1054968220059107335]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ast])/AVG([mp])' />
            </column>
            <column caption='Percent Change (Points)' datatype='real' name='[Calculation_1054968220053663744]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Points Per Minute (C) (copy)_1054968220058722309]-[Calculation_1054968220057976834])/[Calculation_1054968220057976834]*100' />
            </column>
            <column caption='Points Per Minute (C)' datatype='real' name='[Calculation_1054968220057976834]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_pts])/AVG([c_mp])' />
            </column>
            <column caption='Percent Change (Reb)' datatype='real' name='[Percent Change (Points) (copy)_166633194292793345]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Reb Per Minute (C) (copy)_1054968220058873862]-[Points Per Minute (copy)_1054968220058288131])/[Points Per Minute (copy)_1054968220058288131]*100' />
            </column>
            <column caption='Percent Change (Ast)' datatype='real' name='[Percent Change (Reb) (copy)_166633194295468034]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ast Per Minute (C)  (copy)_1054968220059107335]-[Reb Per Minute (C) (copy)_1054968220058558468])/[Reb Per Minute (C) (copy)_1054968220058558468]*100' />
            </column>
            <column caption='Points Per Minute (NBA)' datatype='real' name='[Points Per Minute (C) (copy)_1054968220058722309]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([pts])/AVG([mp])' />
            </column>
            <column caption='Reb Per Minute (C)' datatype='real' name='[Points Per Minute (copy)_1054968220058288131]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_trb])/AVG([c_mp])' />
            </column>
            <column caption='Ast Per Minute (C) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058558468]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_ast])/AVG([c_mp])' />
            </column>
            <column caption='Reb Per Minute (NBA) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058873862]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([trb])/AVG([mp])' />
            </column>
            <column caption='Ast' datatype='real' name='[ast]' role='measure' type='quantitative' />
            <column caption='C Ast' datatype='real' name='[c_ast]' role='measure' type='quantitative' />
            <column caption='C Mp' datatype='real' name='[c_mp]' role='measure' type='quantitative' />
            <column caption='C Pts' datatype='real' name='[c_pts]' role='measure' type='quantitative' />
            <column caption='C Trb' datatype='real' name='[c_trb]' role='measure' type='quantitative' />
            <column datatype='real' name='[college_ws_game]' role='measure' type='quantitative' />
            <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
            <column caption='Mp' datatype='real' name='[mp]' role='measure' type='quantitative' />
            <column-instance column='[g]' derivation='None' name='[none:g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player_id]' derivation='None' name='[none:player_id:nk]' pivot='key' type='nominal' />
            <column caption='Per' datatype='real' name='[per]' role='measure' type='quantitative' />
            <column datatype='string' name='[player_id]' role='dimension' type='nominal' />
            <column caption='Pts' datatype='real' name='[pts]' role='measure' type='quantitative' />
            <column-instance column='[college_ws_game]' derivation='Sum' name='[sum:college_ws_game:qk]' pivot='key' type='quantitative' />
            <column-instance column='[per]' derivation='Sum' name='[sum:per:qk]' pivot='key' type='quantitative' />
            <column caption='Trb' datatype='real' name='[trb]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1054968220053663744]' derivation='User' name='[usr:Calculation_1054968220053663744:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Points) (copy)_166633194292793345]' derivation='User' name='[usr:Percent Change (Points) (copy)_166633194292793345:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194295468034]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]' included-values='in-range'>
            <min>50</min>
            <max>833</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:college_ws_game:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:college_ws_game:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='background-color' id='refline1' value='#ffffff00' />
            <format attr='stroke-size' id='refline1' value='5' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dashed' />
            <format attr='font-family' id='refline1' value='Trebuchet MS' />
            <format attr='font-size' id='refline1' value='20' />
            <format attr='stroke-color' id='refline1' value='#aa0000' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' />
              <lod column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:per:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:per:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.8790607452392578' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='165' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='5' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]</rows>
        <cols>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:per:qk]</cols>
      </table>
      <simple-id uuid='{AE98F093-CC7E-406A-8F30-7FE0E0407BF5}' />
    </worksheet>
    <worksheet name='College PER and Percent Change (3)'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='Ast Per Minute (NBA)' datatype='real' name='[Ast Per Minute (C)  (copy)_1054968220059107335]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ast])/AVG([mp])' />
            </column>
            <column caption='Percent Change (Points)' datatype='real' name='[Calculation_1054968220053663744]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Points Per Minute (C) (copy)_1054968220058722309]-[Calculation_1054968220057976834])/[Calculation_1054968220057976834]*100' />
            </column>
            <column caption='Points Per Minute (C)' datatype='real' name='[Calculation_1054968220057976834]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_pts])/AVG([c_mp])' />
            </column>
            <column caption='Percent Change (Reb)' datatype='real' name='[Percent Change (Points) (copy)_166633194292793345]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Reb Per Minute (C) (copy)_1054968220058873862]-[Points Per Minute (copy)_1054968220058288131])/[Points Per Minute (copy)_1054968220058288131]*100' />
            </column>
            <column caption='Percent Change (Ast)' datatype='real' name='[Percent Change (Reb) (copy)_166633194295468034]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ast Per Minute (C)  (copy)_1054968220059107335]-[Reb Per Minute (C) (copy)_1054968220058558468])/[Reb Per Minute (C) (copy)_1054968220058558468]*100' />
            </column>
            <column caption='Points Per Minute (NBA)' datatype='real' name='[Points Per Minute (C) (copy)_1054968220058722309]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([pts])/AVG([mp])' />
            </column>
            <column caption='Reb Per Minute (C)' datatype='real' name='[Points Per Minute (copy)_1054968220058288131]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_trb])/AVG([c_mp])' />
            </column>
            <column caption='Ast Per Minute (C) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058558468]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_ast])/AVG([c_mp])' />
            </column>
            <column caption='Reb Per Minute (NBA) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058873862]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([trb])/AVG([mp])' />
            </column>
            <column caption='Ast' datatype='real' name='[ast]' role='measure' type='quantitative' />
            <column caption='C Ast' datatype='real' name='[c_ast]' role='measure' type='quantitative' />
            <column caption='C Mp' datatype='real' name='[c_mp]' role='measure' type='quantitative' />
            <column caption='C Pts' datatype='real' name='[c_pts]' role='measure' type='quantitative' />
            <column caption='C Trb' datatype='real' name='[c_trb]' role='measure' type='quantitative' />
            <column datatype='real' name='[college_ws_game]' role='measure' type='quantitative' />
            <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
            <column caption='Mp' datatype='real' name='[mp]' role='measure' type='quantitative' />
            <column-instance column='[g]' derivation='None' name='[none:g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player_id]' derivation='None' name='[none:player_id:nk]' pivot='key' type='nominal' />
            <column caption='Per' datatype='real' name='[per]' role='measure' type='quantitative' />
            <column datatype='string' name='[player_id]' role='dimension' type='nominal' />
            <column caption='Pts' datatype='real' name='[pts]' role='measure' type='quantitative' />
            <column-instance column='[college_ws_game]' derivation='Sum' name='[sum:college_ws_game:qk]' pivot='key' type='quantitative' />
            <column-instance column='[per]' derivation='Sum' name='[sum:per:qk]' pivot='key' type='quantitative' />
            <column caption='Trb' datatype='real' name='[trb]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1054968220053663744]' derivation='User' name='[usr:Calculation_1054968220053663744:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Points) (copy)_166633194292793345]' derivation='User' name='[usr:Percent Change (Points) (copy)_166633194292793345:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194295468034]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]' included-values='in-range'>
            <min>50</min>
            <max>833</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:college_ws_game:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:college_ws_game:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' />
              <lod column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.8790607452392578' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='165' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='5' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]</rows>
        <cols>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:per:qk]</cols>
      </table>
      <simple-id uuid='{FDAC9F3B-9CF7-4E63-B1D9-3A586E868FD5}' />
    </worksheet>
    <worksheet name='College WS and Percent Change'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='Ast Per Minute (NBA)' datatype='real' name='[Ast Per Minute (C)  (copy)_1054968220059107335]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ast])/AVG([mp])' />
            </column>
            <column caption='Percent Change (Points)' datatype='real' name='[Calculation_1054968220053663744]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Points Per Minute (C) (copy)_1054968220058722309]-[Calculation_1054968220057976834])/[Calculation_1054968220057976834]*100' />
            </column>
            <column caption='Points Per Minute (C)' datatype='real' name='[Calculation_1054968220057976834]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_pts])/AVG([c_mp])' />
            </column>
            <column caption='Percent Change (Reb)' datatype='real' name='[Percent Change (Points) (copy)_166633194292793345]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Reb Per Minute (C) (copy)_1054968220058873862]-[Points Per Minute (copy)_1054968220058288131])/[Points Per Minute (copy)_1054968220058288131]*100' />
            </column>
            <column caption='Percent Change (Ast)' datatype='real' name='[Percent Change (Reb) (copy)_166633194295468034]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ast Per Minute (C)  (copy)_1054968220059107335]-[Reb Per Minute (C) (copy)_1054968220058558468])/[Reb Per Minute (C) (copy)_1054968220058558468]*100' />
            </column>
            <column caption='Points Per Minute (NBA)' datatype='real' name='[Points Per Minute (C) (copy)_1054968220058722309]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([pts])/AVG([mp])' />
            </column>
            <column caption='Reb Per Minute (C)' datatype='real' name='[Points Per Minute (copy)_1054968220058288131]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_trb])/AVG([c_mp])' />
            </column>
            <column caption='Ast Per Minute (C) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058558468]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_ast])/AVG([c_mp])' />
            </column>
            <column caption='Reb Per Minute (NBA) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058873862]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([trb])/AVG([mp])' />
            </column>
            <column caption='Ast' datatype='real' name='[ast]' role='measure' type='quantitative' />
            <column caption='C Ast' datatype='real' name='[c_ast]' role='measure' type='quantitative' />
            <column caption='C Mp' datatype='real' name='[c_mp]' role='measure' type='quantitative' />
            <column caption='C Pts' datatype='real' name='[c_pts]' role='measure' type='quantitative' />
            <column caption='C Trb' datatype='real' name='[c_trb]' role='measure' type='quantitative' />
            <column datatype='real' name='[college_ws_game]' role='measure' type='quantitative' />
            <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
            <column caption='Mp' datatype='real' name='[mp]' role='measure' type='quantitative' />
            <column-instance column='[g]' derivation='None' name='[none:g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player_id]' derivation='None' name='[none:player_id:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[player_id]' role='dimension' type='nominal' />
            <column caption='Pts' datatype='real' name='[pts]' role='measure' type='quantitative' />
            <column-instance column='[college_ws_game]' derivation='Sum' name='[sum:college_ws_game:qk]' pivot='key' type='quantitative' />
            <column caption='Trb' datatype='real' name='[trb]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1054968220053663744]' derivation='User' name='[usr:Calculation_1054968220053663744:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Points) (copy)_166633194292793345]' derivation='User' name='[usr:Percent Change (Points) (copy)_166633194292793345:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194295468034]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]' included-values='in-range'>
            <min>50</min>
            <max>833</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:college_ws_game:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:college_ws_game:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='text-format' id='refline0' value='n#,##0.0000;-#,##0.0000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#0d0e1b4b' />
            <format attr='stroke-size' id='refline0' value='5' />
            <format attr='fill-above' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' />
              <lod column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-table' value='-0.14960000000000001' value-column='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' z-order='1' />
            <reference-line axis-column='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' scope='per-table' value='0.21529999999999999' value-column='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.8790607452392578' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='165' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='5' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]</rows>
        <cols>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:college_ws_game:qk]</cols>
      </table>
      <simple-id uuid='{7B4EC229-97EB-429E-8961-A32F6FFAE72D}' />
    </worksheet>
    <worksheet name='Corr PER'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='Corr. 2P  -&gt; PER' datatype='real' name='[Corr. 2P  -&gt; WS  (copy)_635007556233175077]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CORR(([c_2p]/[c_mp]), [per])' />
            </column>
            <column caption='Corr. 3P -&gt; PER' datatype='real' name='[Corr. 3P -&gt; WS (copy)_635007556233175076]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CORR(([c_3p]/[c_mp]), [per])' />
            </column>
            <column caption='Corr. Ast -&gt; PER' datatype='real' name='[Corr. Ast -&gt; WS (copy)_635007556233175074]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CORR(([c_ast]/[c_mp]), [per])' />
            </column>
            <column caption='Corr. DRB -&gt; PER' datatype='real' name='[Corr. DRB -&gt; WS (copy)_635007556233175079]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CORR(([c_drb]/[c_mp]), [per])' />
            </column>
            <column caption='Corr. ORB -&gt; PER' datatype='real' name='[Corr. ORB -&gt; WS  (copy)_635007556233175078]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CORR(([c_orb]/[c_mp]), [per])' />
            </column>
            <column caption='Corr. Reb -&gt; PER' datatype='real' name='[Corr. Reb -&gt; WS (copy)_635007556233175082]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CORR(([c_trb]/[c_mp]), [per])' />
            </column>
            <column caption='Corr. STL -&gt; PER' datatype='real' name='[Corr. STL -&gt; WS (copy)_635007556233175080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CORR(([c_stl]/[c_mp]), [per])' />
            </column>
            <column caption='Corr. TO -&gt; PER' datatype='real' name='[Corr. TO -&gt; WS  (copy)_635007556233175081]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CORR(([c_tov]/[c_mp]), [per])' />
            </column>
            <column caption='Corr. PER -&gt; PER' datatype='real' name='[Corr. WS -&gt; WS  (copy)_841610189328797697]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CORR([c_per], [per])' />
            </column>
            <column caption='Corr. eFG% -&gt; PER' datatype='real' name='[Corr. eFG% -&gt; WS  (copy)_635007556233175075]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CORR([c_efg%], [per])' />
            </column>
            <column caption='Corr: Points -&gt; PER' datatype='real' name='[Corr: Points -&gt; WS (copy)_635007556233175073]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CORR(([c_pts]/[c_mp]), [per])' />
            </column>
            <column caption='C 2P' datatype='real' name='[c_2p]' role='measure' type='quantitative' />
            <column caption='C 3P' datatype='real' name='[c_3p]' role='measure' type='quantitative' />
            <column caption='C Ast' datatype='real' name='[c_ast]' role='measure' type='quantitative' />
            <column caption='C Drb' datatype='real' name='[c_drb]' role='measure' type='quantitative' />
            <column caption='C Efg%' datatype='real' name='[c_efg%]' role='measure' type='quantitative' />
            <column caption='C G' datatype='integer' name='[c_g]' role='measure' type='quantitative' />
            <column caption='C Mp' datatype='real' name='[c_mp]' role='measure' type='quantitative' />
            <column caption='C Orb' datatype='real' name='[c_orb]' role='measure' type='quantitative' />
            <column caption='C Per' datatype='real' name='[c_per]' role='measure' type='quantitative' />
            <column caption='C Pts' datatype='real' name='[c_pts]' role='measure' type='quantitative' />
            <column caption='C Stl' datatype='real' name='[c_stl]' role='measure' type='quantitative' />
            <column caption='C Tov' datatype='real' name='[c_tov]' role='measure' type='quantitative' />
            <column caption='C Trb' datatype='real' name='[c_trb]' role='measure' type='quantitative' />
            <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
            <column-instance column='[c_g]' derivation='None' name='[none:c_g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[g]' derivation='None' name='[none:g:qk]' pivot='key' type='quantitative' />
            <column caption='Per' datatype='real' name='[per]' role='measure' type='quantitative' />
            <column-instance column='[Corr. 2P  -&gt; WS  (copy)_635007556233175077]' derivation='User' name='[usr:Corr. 2P  -&gt; WS  (copy)_635007556233175077:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Corr. 3P -&gt; WS (copy)_635007556233175076]' derivation='User' name='[usr:Corr. 3P -&gt; WS (copy)_635007556233175076:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Corr. Ast -&gt; WS (copy)_635007556233175074]' derivation='User' name='[usr:Corr. Ast -&gt; WS (copy)_635007556233175074:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Corr. DRB -&gt; WS (copy)_635007556233175079]' derivation='User' name='[usr:Corr. DRB -&gt; WS (copy)_635007556233175079:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Corr. ORB -&gt; WS  (copy)_635007556233175078]' derivation='User' name='[usr:Corr. ORB -&gt; WS  (copy)_635007556233175078:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Corr. Reb -&gt; WS (copy)_635007556233175082]' derivation='User' name='[usr:Corr. Reb -&gt; WS (copy)_635007556233175082:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Corr. STL -&gt; WS (copy)_635007556233175080]' derivation='User' name='[usr:Corr. STL -&gt; WS (copy)_635007556233175080:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Corr. TO -&gt; WS  (copy)_635007556233175081]' derivation='User' name='[usr:Corr. TO -&gt; WS  (copy)_635007556233175081:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Corr. WS -&gt; WS  (copy)_841610189328797697]' derivation='User' name='[usr:Corr. WS -&gt; WS  (copy)_841610189328797697:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Corr. eFG% -&gt; WS  (copy)_635007556233175075]' derivation='User' name='[usr:Corr. eFG% -&gt; WS  (copy)_635007556233175075:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Corr: Points -&gt; WS (copy)_635007556233175073]' derivation='User' name='[usr:Corr: Points -&gt; WS (copy)_635007556233175073:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_g:qk]' included-values='in-range'>
            <min>25</min>
            <max>146</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]' included-values='in-range'>
            <min>50</min>
            <max>833</max>
          </filter>
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_g:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Corr: Points -&gt; WS (copy)_635007556233175073:qk]' />
              <text column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Corr. 2P  -&gt; WS  (copy)_635007556233175077:qk]' />
              <text column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Corr. 3P -&gt; WS (copy)_635007556233175076:qk]' />
              <text column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Corr. Ast -&gt; WS (copy)_635007556233175074:qk]' />
              <text column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Corr. DRB -&gt; WS (copy)_635007556233175079:qk]' />
              <text column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Corr. eFG% -&gt; WS  (copy)_635007556233175075:qk]' />
              <text column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Corr. ORB -&gt; WS  (copy)_635007556233175078:qk]' />
              <text column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Corr. Reb -&gt; WS (copy)_635007556233175082:qk]' />
              <text column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Corr. STL -&gt; WS (copy)_635007556233175080:qk]' />
              <text column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Corr. TO -&gt; WS  (copy)_635007556233175081:qk]' />
              <text column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Corr. WS -&gt; WS  (copy)_841610189328797697:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{BB19BEDA-F6F1-4B36-9FC9-228D83C99993}' />
    </worksheet>
    <worksheet name='Corr WS'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='Corr: Points -&gt; WS' datatype='real' name='[Calculation_635007556229230606]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CORR(([c_pts]/[c_mp]), [nba_ws_game])' />
            </column>
            <column caption='Corr. Ast -&gt; WS' datatype='real' name='[Corr. Reb -&gt; WS (copy)_635007556230066192]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CORR(([c_ast]/[c_mp]), [nba_ws_game])' />
            </column>
            <column caption='Corr. eFG% -&gt; WS ' datatype='real' name='[Corr. Reb -&gt; WS (copy)_635007556230254609]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CORR([c_efg%], [nba_ws_game])' />
            </column>
            <column caption='Corr. 3P -&gt; WS' datatype='real' name='[Corr. Reb -&gt; WS (copy)_635007556230537234]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CORR(([c_3p]/[c_mp]), [nba_ws_game])' />
            </column>
            <column caption='Corr. 2P  -&gt; WS ' datatype='real' name='[Corr. Reb -&gt; WS (copy)_635007556230701075]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CORR(([c_2p]/[c_mp]), [nba_ws_game])' />
            </column>
            <column caption='Corr. ORB -&gt; WS ' datatype='real' name='[Corr. Reb -&gt; WS (copy)_635007556231208980]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CORR(([c_orb]/[c_mp]), [nba_ws_game])' />
            </column>
            <column caption='Corr. DRB -&gt; WS' datatype='real' name='[Corr. Reb -&gt; WS (copy)_635007556231323669]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CORR(([c_drb]/[c_mp]), [nba_ws_game])' />
            </column>
            <column caption='Corr. STL -&gt; WS' datatype='real' name='[Corr. Reb -&gt; WS (copy)_635007556231503894]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CORR(([c_stl]/[c_mp]), [nba_ws_game])' />
            </column>
            <column caption='Corr. TO -&gt; WS ' datatype='real' name='[Corr. STL -&gt; WS (copy)_635007556231614487]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CORR(([c_tov]/[c_mp]), [nba_ws_game])' />
            </column>
            <column caption='Corr. WS -&gt; WS ' datatype='real' name='[Corr. TO -&gt; WS  (copy)_841610189327761408]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CORR([college_ws_game], [nba_ws_game])' />
            </column>
            <column caption='Corr. Reb -&gt; WS' datatype='real' name='[Points -&gt; WS (Corr) (copy)_635007556229636111]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CORR(([c_trb]/[c_mp]), [nba_ws_game])' />
            </column>
            <column caption='C 2P' datatype='real' name='[c_2p]' role='measure' type='quantitative' />
            <column caption='C 3P' datatype='real' name='[c_3p]' role='measure' type='quantitative' />
            <column caption='C Ast' datatype='real' name='[c_ast]' role='measure' type='quantitative' />
            <column caption='C Drb' datatype='real' name='[c_drb]' role='measure' type='quantitative' />
            <column caption='C Efg%' datatype='real' name='[c_efg%]' role='measure' type='quantitative' />
            <column caption='C G' datatype='integer' name='[c_g]' role='measure' type='quantitative' />
            <column caption='C Mp' datatype='real' name='[c_mp]' role='measure' type='quantitative' />
            <column caption='C Orb' datatype='real' name='[c_orb]' role='measure' type='quantitative' />
            <column caption='C Pts' datatype='real' name='[c_pts]' role='measure' type='quantitative' />
            <column caption='C Stl' datatype='real' name='[c_stl]' role='measure' type='quantitative' />
            <column caption='C Tov' datatype='real' name='[c_tov]' role='measure' type='quantitative' />
            <column caption='C Trb' datatype='real' name='[c_trb]' role='measure' type='quantitative' />
            <column datatype='real' name='[college_ws_game]' role='measure' type='quantitative' />
            <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
            <column datatype='real' name='[nba_ws_game]' role='measure' type='quantitative' />
            <column-instance column='[c_g]' derivation='None' name='[none:c_g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[g]' derivation='None' name='[none:g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_635007556229230606]' derivation='User' name='[usr:Calculation_635007556229230606:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Corr. Reb -&gt; WS (copy)_635007556230066192]' derivation='User' name='[usr:Corr. Reb -&gt; WS (copy)_635007556230066192:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Corr. Reb -&gt; WS (copy)_635007556230254609]' derivation='User' name='[usr:Corr. Reb -&gt; WS (copy)_635007556230254609:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Corr. Reb -&gt; WS (copy)_635007556230537234]' derivation='User' name='[usr:Corr. Reb -&gt; WS (copy)_635007556230537234:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Corr. Reb -&gt; WS (copy)_635007556230701075]' derivation='User' name='[usr:Corr. Reb -&gt; WS (copy)_635007556230701075:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Corr. Reb -&gt; WS (copy)_635007556231208980]' derivation='User' name='[usr:Corr. Reb -&gt; WS (copy)_635007556231208980:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Corr. Reb -&gt; WS (copy)_635007556231323669]' derivation='User' name='[usr:Corr. Reb -&gt; WS (copy)_635007556231323669:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Corr. Reb -&gt; WS (copy)_635007556231503894]' derivation='User' name='[usr:Corr. Reb -&gt; WS (copy)_635007556231503894:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Corr. STL -&gt; WS (copy)_635007556231614487]' derivation='User' name='[usr:Corr. STL -&gt; WS (copy)_635007556231614487:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Corr. TO -&gt; WS  (copy)_841610189327761408]' derivation='User' name='[usr:Corr. TO -&gt; WS  (copy)_841610189327761408:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Points -&gt; WS (Corr) (copy)_635007556229636111]' derivation='User' name='[usr:Points -&gt; WS (Corr) (copy)_635007556229636111:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_g:qk]' included-values='in-range'>
            <min>25</min>
            <max>164</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]' included-values='in-range'>
            <min>50</min>
            <max>833</max>
          </filter>
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_635007556229230606:qk]' />
              <text column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Corr. Reb -&gt; WS (copy)_635007556230701075:qk]' />
              <text column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Corr. Reb -&gt; WS (copy)_635007556230537234:qk]' />
              <text column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Corr. Reb -&gt; WS (copy)_635007556230066192:qk]' />
              <text column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Corr. Reb -&gt; WS (copy)_635007556231323669:qk]' />
              <text column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Corr. Reb -&gt; WS (copy)_635007556230254609:qk]' />
              <text column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Corr. Reb -&gt; WS (copy)_635007556231208980:qk]' />
              <text column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Points -&gt; WS (Corr) (copy)_635007556229636111:qk]' />
              <text column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Corr. Reb -&gt; WS (copy)_635007556231503894:qk]' />
              <text column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Corr. STL -&gt; WS (copy)_635007556231614487:qk]' />
              <text column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Corr. TO -&gt; WS  (copy)_841610189327761408:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0255709A-9CE2-4F6F-8F11-3CF55FA0D42B}' />
    </worksheet>
    <worksheet name='PER Geo'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='PER Mag' datatype='real' name='[Calculation_788974368289239041]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='POWER([per], 3)' />
            </column>
            <column-instance column='[last_college_attended]' derivation='Attribute' name='[attr:last_college_attended:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_788974368289239041]' derivation='Avg' name='[avg:Calculation_788974368289239041:qk]' pivot='key' type='quantitative' />
            <column-instance column='[per]' derivation='Avg' name='[avg:per:qk]' pivot='key' type='quantitative' />
            <column-instance column='[last_college_full]' derivation='Count' name='[cnt:last_college_full:qk]' pivot='key' type='quantitative' />
            <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Last College Attended' datatype='string' name='[last_college_attended]' role='dimension' semantic-role='' type='nominal' />
            <column datatype='string' name='[last_college_full]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[lon]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[g]' derivation='None' name='[none:g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lat]' derivation='None' name='[none:lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lon]' derivation='None' name='[none:lon:qk]' pivot='key' type='quantitative' />
            <column caption='Per' datatype='real' name='[per]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1699iq40rx5wde11ykfjy117zi51].[Exclusions (lat,lon)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:lat:qk]' />
                <groupfilter function='level-members' level='[none:lon:qk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:lat:qk]' member='36.987817874000029' />
                <groupfilter function='member' level='[none:lon:qk]' member='-86.453940892999981' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]' included-values='in-range'>
            <min>50</min>
            <max>833</max>
          </filter>
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[Exclusions (lat,lon)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1699iq40rx5wde11ykfjy117zi51].[none:lon:qk]' field-type='quantitative' max='-7617686.1735760318' min='-14081273.492706683' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1699iq40rx5wde11ykfjy117zi51].[none:lat:qk]' field-type='quantitative' max='6361889.4137376919' min='2686832.364397984' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1699iq40rx5wde11ykfjy117zi51].[avg:Calculation_788974368289239041:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1699iq40rx5wde11ykfjy117zi51].[none:lon:qk]' value='false' />
            <format attr='break-on-special' field='[federated.1699iq40rx5wde11ykfjy117zi51].[none:lon:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1699iq40rx5wde11ykfjy117zi51].[none:lon:qk]' value='false' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
            <format attr='enabled' id='background' value='false' />
            <format attr='enabled' id='barrier_line-land-polygon' value='false' />
            <format attr='enabled' id='barrier_line-land-line' value='false' />
            <format attr='enabled' id='national_park' value='false' />
            <format attr='enabled' id='pitch' value='false' />
            <format attr='enabled' id='industrial' value='false' />
            <format attr='enabled' id='built-up-area' value='false' />
            <format attr='enabled' id='water' value='false' />
            <format attr='enabled' id='waterway-river-canal' value='false' />
            <format attr='enabled' id='aeroway-polygon' value='false' />
            <format attr='enabled' id='aeroway-runway' value='false' />
            <format attr='enabled' id='aeroway-taxiway' value='false' />
            <format attr='enabled' id='parks' value='false' />
            <format attr='enabled' id='landcover_wood' value='false' />
            <format attr='enabled' id='landcover_scrub' value='false' />
            <format attr='enabled' id='landcover_grass' value='false' />
            <format attr='enabled' id='landcover_crop' value='false' />
            <format attr='enabled' id='Coastline' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[avg:Calculation_788974368289239041:qk]' />
              <size column='[federated.1699iq40rx5wde11ykfjy117zi51].[cnt:last_college_full:qk]' />
              <tooltip column='[federated.1699iq40rx5wde11ykfjy117zi51].[attr:last_college_attended:nk]' />
              <tooltip column='[federated.1699iq40rx5wde11ykfjy117zi51].[avg:per:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='9.5312213897705078' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-transparency' value='183' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1699iq40rx5wde11ykfjy117zi51].[none:lat:qk]</rows>
        <cols>[federated.1699iq40rx5wde11ykfjy117zi51].[none:lon:qk]</cols>
      </table>
      <simple-id uuid='{AD3D146C-381A-43F3-AF38-4FF5575AFA96}' />
    </worksheet>
    <worksheet name='PER by Pick'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
            <column-instance column='[g]' derivation='None' name='[none:g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player]' derivation='None' name='[none:player:nk]' pivot='key' type='nominal' />
            <column caption='Per' datatype='real' name='[per]' role='measure' type='quantitative' />
            <column caption='Pk' datatype='integer' name='[pk]' role='measure' type='quantitative' />
            <column caption='Player' datatype='string' name='[player]' role='dimension' type='nominal' />
            <column-instance column='[per]' derivation='Sum' name='[sum:per:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pk]' derivation='Sum' name='[sum:pk:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]' included-values='in-range'>
            <min>50</min>
            <max>833</max>
          </filter>
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:player:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:per:qk]</rows>
        <cols>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:pk:qk]</cols>
      </table>
      <simple-id uuid='{C4607A96-E117-4846-AAD5-3FB5E11343F0}' />
    </worksheet>
    <worksheet name='PER by School Bubble '>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='WS Mag' datatype='real' name='[Calculation_788974368287076352]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='POWER([nba_ws_game], 3)' />
            </column>
            <column caption='PER Mag' datatype='real' name='[Calculation_788974368289239041]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='POWER([per], 3)' />
            </column>
            <column-instance column='[player]' derivation='Attribute' name='[attr:player:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_788974368287076352]' derivation='Avg' name='[avg:Calculation_788974368287076352:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_788974368289239041]' derivation='Avg' name='[avg:Calculation_788974368289239041:qk]' pivot='key' type='quantitative' />
            <column-instance column='[per]' derivation='Avg' name='[avg:per:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[blue_blood]' role='dimension' type='nominal' />
            <column-instance column='[last_college_full]' derivation='Count' name='[cnt:last_college_full:qk]' pivot='key' type='quantitative' />
            <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Last College Attended' datatype='string' name='[last_college_attended]' role='dimension' semantic-role='' type='nominal' />
            <column datatype='string' name='[last_college_full]' role='dimension' type='nominal' />
            <column datatype='real' name='[nba_ws_game]' role='measure' type='quantitative' />
            <column-instance column='[blue_blood]' derivation='None' name='[none:blue_blood:nk]' pivot='key' type='nominal' />
            <column-instance column='[g]' derivation='None' name='[none:g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[last_college_attended]' derivation='None' name='[none:last_college_attended:nk]' pivot='key' type='nominal' />
            <column caption='Per' datatype='real' name='[per]' role='measure' type='quantitative' />
            <column caption='Player' datatype='string' name='[player]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[avg:Calculation_788974368287076352:qk]' included-values='in-range-or-null'>
            <min>2.2250738585072014e-308</min>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]' included-values='in-range'>
            <min>50</min>
            <max>833</max>
          </filter>
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[avg:Calculation_788974368287076352:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:blue_blood:nk]' />
              <size column='[federated.1699iq40rx5wde11ykfjy117zi51].[avg:Calculation_788974368289239041:qk]' />
              <lod column='[federated.1699iq40rx5wde11ykfjy117zi51].[avg:per:qk]' />
              <tooltip column='[federated.1699iq40rx5wde11ykfjy117zi51].[cnt:last_college_full:qk]' />
              <tooltip column='[federated.1699iq40rx5wde11ykfjy117zi51].[attr:player:nk]' />
              <text column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:last_college_attended:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{71B2C32E-8861-49EC-8F2F-A34F08FABA51}' />
    </worksheet>
    <worksheet name='Performance by Draft Round'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='2P%' datatype='real' name='[2p%]' role='measure' type='quantitative' />
            <column caption='3P%' datatype='real' name='[3p%]' role='measure' type='quantitative' />
            <column caption='3Pa' datatype='real' name='[3pa]' role='measure' type='quantitative' />
            <column caption='Calc (3P%) ' datatype='real' name='[Calc (2P%)  (copy)_166633194427719689]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([3p%])-WINDOW_MIN(SUM([3p%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([3p%]))-WINDOW_MIN(SUM([3p%])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Calc (2P%) ' datatype='real' name='[Calc (C_2P%)  (copy)_166633194427224071]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([2p%])-WINDOW_MIN(SUM([2p%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([2p%]))-WINDOW_MIN(SUM([2p%])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Calc (C_3P%)  ' datatype='real' name='[Calc (C_2P%)  (copy)_166633194427600904]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([c_3p%])-WINDOW_MIN(SUM([c_3p%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([c_3p%]))-WINDOW_MIN(SUM([c_3p%])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Calc (FG%) ' datatype='real' name='[Calc (C_FG%) (copy)_166633194426679300]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([fg%])-WINDOW_MIN(SUM([fg%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([fg%]))-WINDOW_MIN(SUM([fg%])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Calc (FT%)  ' datatype='real' name='[Calc (C_FT%)  (copy)_166633194428145675]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([ft%])-WINDOW_MIN(SUM([ft%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([ft%]))-WINDOW_MIN(SUM([ft%])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Calc (C_2P%) ' datatype='real' name='[Calc (FG%)  (copy)_166633194426802181]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([c_2p%])-WINDOW_MIN(SUM([c_2p%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([c_2p%]))-WINDOW_MIN(SUM([c_2p%])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Calc (C_FT%) ' datatype='real' name='[Calc (FG%)  (copy)_166633194427838474]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([c_ft%])-WINDOW_MIN(SUM([c_ft%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([c_ft%]))-WINDOW_MIN(SUM([c_ft%])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Calc (C_FG%)' datatype='real' name='[Calculation_166633194426298371]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([c_fg%])-WINDOW_MIN(SUM([c_fg%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([c_fg%]))-WINDOW_MIN(SUM([c_fg%])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='C 2P%' datatype='real' name='[c_2p%]' role='measure' type='quantitative' />
            <column caption='C 3P%' datatype='real' name='[c_3p%]' role='measure' type='quantitative' />
            <column caption='C 3Pa' datatype='real' name='[c_3pa]' role='measure' type='quantitative' />
            <column caption='C Fg%' datatype='real' name='[c_fg%]' role='measure' type='quantitative' />
            <column caption='C Ft%' datatype='real' name='[c_ft%]' role='measure' type='quantitative' />
            <column caption='C G' datatype='integer' name='[c_g]' role='measure' type='quantitative' />
            <column caption='Fg%' datatype='real' name='[fg%]' role='measure' type='quantitative' />
            <column caption='Ft%' datatype='real' name='[ft%]' role='measure' type='quantitative' />
            <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
            <column-instance column='[3pa]' derivation='None' name='[none:3pa:qk]' pivot='key' type='quantitative' />
            <column-instance column='[c_3pa]' derivation='None' name='[none:c_3pa:qk]' pivot='key' type='quantitative' />
            <column-instance column='[c_g]' derivation='None' name='[none:c_g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[g]' derivation='None' name='[none:g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player_id]' derivation='None' name='[none:player_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[round]' derivation='None' name='[none:round:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[player_id]' role='dimension' type='nominal' />
            <column datatype='string' name='[round]' role='dimension' type='nominal' />
            <column-instance column='[Calc (2P%)  (copy)_166633194427719689]' derivation='User' name='[usr:Calc (2P%)  (copy)_166633194427719689:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1699iq40rx5wde11ykfjy117zi51].[player_id]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calc (C_2P%)  (copy)_166633194427224071]' derivation='User' name='[usr:Calc (C_2P%)  (copy)_166633194427224071:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1699iq40rx5wde11ykfjy117zi51].[player_id]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calc (C_2P%)  (copy)_166633194427600904]' derivation='User' name='[usr:Calc (C_2P%)  (copy)_166633194427600904:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1699iq40rx5wde11ykfjy117zi51].[player_id]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calc (C_FG%) (copy)_166633194426679300]' derivation='User' name='[usr:Calc (C_FG%) (copy)_166633194426679300:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1699iq40rx5wde11ykfjy117zi51].[player_id]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calc (C_FT%)  (copy)_166633194428145675]' derivation='User' name='[usr:Calc (C_FT%)  (copy)_166633194428145675:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1699iq40rx5wde11ykfjy117zi51].[player_id]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calc (FG%)  (copy)_166633194426802181]' derivation='User' name='[usr:Calc (FG%)  (copy)_166633194426802181:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1699iq40rx5wde11ykfjy117zi51].[player_id]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calc (FG%)  (copy)_166633194427838474]' derivation='User' name='[usr:Calc (FG%)  (copy)_166633194427838474:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1699iq40rx5wde11ykfjy117zi51].[player_id]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_166633194426298371]' derivation='User' name='[usr:Calculation_166633194426298371:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1699iq40rx5wde11ykfjy117zi51].[player_id]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_166633194426298371:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (FG\%)  (copy)_166633194426802181:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_2P\%)  (copy)_166633194427600904:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (FG\%)  (copy)_166633194427838474:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_FG\%) (copy)_166633194426679300:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_2P\%)  (copy)_166633194427224071:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (2P\%)  (copy)_166633194427719689:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_FT\%)  (copy)_166633194428145675:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_166633194426298371:qk:2]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (FG\%)  (copy)_166633194426802181:qk:2]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_2P\%)  (copy)_166633194427600904:qk:2]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (FG\%)  (copy)_166633194427838474:qk:2]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_FG\%) (copy)_166633194426679300:qk:2]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_2P\%)  (copy)_166633194427224071:qk:2]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (2P\%)  (copy)_166633194427719689:qk:2]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_FT\%)  (copy)_166633194428145675:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:3pa:qk]' included-values='in-range'>
            <min>1.0</min>
            <max>8.0999999999999996</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_3pa:qk]' included-values='in-range'>
            <min>1.0</min>
            <max>10.300000000000001</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_g:qk]' included-values='in-range'>
            <min>25</min>
            <max>146</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]' included-values='in-range'>
            <min>50</min>
            <max>833</max>
          </filter>
          <manual-sort column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:round:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;lottery&quot;</bucket>
              <bucket>&quot;first&quot;</bucket>
              <bucket>&quot;second&quot;</bucket>
              <bucket>&quot;undrafted&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_3pa:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:3pa:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' field-type='quantitative' max='1.0515137614678898' min='-0.051513761467889906' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='1' field='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:round:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.053977899253368378' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:round:nk]' />
              <lod column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.031988948583602905' />
                <format attr='mark-transparency' value='126' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:round:nk]' />
              <path column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.031988948583602905' />
                <format attr='mark-color' value='#666666' />
                <format attr='mark-transparency' value='132' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values] + [federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values])</rows>
        <cols>[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{A02B14E4-9503-4A8D-8163-4BC0698722B8}' />
    </worksheet>
    <worksheet name='Performance by Position'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='2P%' datatype='real' name='[2p%]' role='measure' type='quantitative' />
            <column caption='3P%' datatype='real' name='[3p%]' role='measure' type='quantitative' />
            <column caption='3Pa' datatype='real' name='[3pa]' role='measure' type='quantitative' />
            <column caption='Calc (3P%) ' datatype='real' name='[Calc (2P%)  (copy)_166633194427719689]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([3p%])-WINDOW_MIN(SUM([3p%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([3p%]))-WINDOW_MIN(SUM([3p%])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Calc (2P%) ' datatype='real' name='[Calc (C_2P%)  (copy)_166633194427224071]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([2p%])-WINDOW_MIN(SUM([2p%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([2p%]))-WINDOW_MIN(SUM([2p%])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Calc (C_3P%)  ' datatype='real' name='[Calc (C_2P%)  (copy)_166633194427600904]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([c_3p%])-WINDOW_MIN(SUM([c_3p%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([c_3p%]))-WINDOW_MIN(SUM([c_3p%])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Calc (FG%) ' datatype='real' name='[Calc (C_FG%) (copy)_166633194426679300]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([fg%])-WINDOW_MIN(SUM([fg%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([fg%]))-WINDOW_MIN(SUM([fg%])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Calc (FT%)  ' datatype='real' name='[Calc (C_FT%)  (copy)_166633194428145675]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([ft%])-WINDOW_MIN(SUM([ft%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([ft%]))-WINDOW_MIN(SUM([ft%])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Calc (C_2P%) ' datatype='real' name='[Calc (FG%)  (copy)_166633194426802181]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([c_2p%])-WINDOW_MIN(SUM([c_2p%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([c_2p%]))-WINDOW_MIN(SUM([c_2p%])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Calc (C_FT%) ' datatype='real' name='[Calc (FG%)  (copy)_166633194427838474]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([c_ft%])-WINDOW_MIN(SUM([c_ft%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([c_ft%]))-WINDOW_MIN(SUM([c_ft%])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Calc (C_FG%)' datatype='real' name='[Calculation_166633194426298371]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([c_fg%])-WINDOW_MIN(SUM([c_fg%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([c_fg%]))-WINDOW_MIN(SUM([c_fg%])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='C 2P%' datatype='real' name='[c_2p%]' role='measure' type='quantitative' />
            <column caption='C 3P%' datatype='real' name='[c_3p%]' role='measure' type='quantitative' />
            <column caption='C 3Pa' datatype='real' name='[c_3pa]' role='measure' type='quantitative' />
            <column caption='C Fg%' datatype='real' name='[c_fg%]' role='measure' type='quantitative' />
            <column caption='C Ft%' datatype='real' name='[c_ft%]' role='measure' type='quantitative' />
            <column caption='C G' datatype='integer' name='[c_g]' role='measure' type='quantitative' />
            <column caption='Fg%' datatype='real' name='[fg%]' role='measure' type='quantitative' />
            <column caption='Ft%' datatype='real' name='[ft%]' role='measure' type='quantitative' />
            <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
            <column-instance column='[3pa]' derivation='None' name='[none:3pa:qk]' pivot='key' type='quantitative' />
            <column-instance column='[c_3pa]' derivation='None' name='[none:c_3pa:qk]' pivot='key' type='quantitative' />
            <column-instance column='[c_g]' derivation='None' name='[none:c_g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[g]' derivation='None' name='[none:g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player_id]' derivation='None' name='[none:player_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[pos]' derivation='None' name='[none:pos:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[player_id]' role='dimension' type='nominal' />
            <column caption='Pos' datatype='string' name='[pos]' role='dimension' type='nominal' />
            <column-instance column='[Calc (2P%)  (copy)_166633194427719689]' derivation='User' name='[usr:Calc (2P%)  (copy)_166633194427719689:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1699iq40rx5wde11ykfjy117zi51].[player_id]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calc (C_2P%)  (copy)_166633194427224071]' derivation='User' name='[usr:Calc (C_2P%)  (copy)_166633194427224071:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1699iq40rx5wde11ykfjy117zi51].[player_id]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calc (C_2P%)  (copy)_166633194427600904]' derivation='User' name='[usr:Calc (C_2P%)  (copy)_166633194427600904:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1699iq40rx5wde11ykfjy117zi51].[player_id]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calc (C_FG%) (copy)_166633194426679300]' derivation='User' name='[usr:Calc (C_FG%) (copy)_166633194426679300:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1699iq40rx5wde11ykfjy117zi51].[player_id]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calc (C_FT%)  (copy)_166633194428145675]' derivation='User' name='[usr:Calc (C_FT%)  (copy)_166633194428145675:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1699iq40rx5wde11ykfjy117zi51].[player_id]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calc (FG%)  (copy)_166633194426802181]' derivation='User' name='[usr:Calc (FG%)  (copy)_166633194426802181:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1699iq40rx5wde11ykfjy117zi51].[player_id]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calc (FG%)  (copy)_166633194427838474]' derivation='User' name='[usr:Calc (FG%)  (copy)_166633194427838474:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1699iq40rx5wde11ykfjy117zi51].[player_id]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_166633194426298371]' derivation='User' name='[usr:Calculation_166633194426298371:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1699iq40rx5wde11ykfjy117zi51].[player_id]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_166633194426298371:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (FG\%)  (copy)_166633194426802181:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_2P\%)  (copy)_166633194427600904:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (FG\%)  (copy)_166633194427838474:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_FG\%) (copy)_166633194426679300:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_2P\%)  (copy)_166633194427224071:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (2P\%)  (copy)_166633194427719689:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_FT\%)  (copy)_166633194428145675:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_166633194426298371:qk:2]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (FG\%)  (copy)_166633194426802181:qk:2]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_2P\%)  (copy)_166633194427600904:qk:2]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (FG\%)  (copy)_166633194427838474:qk:2]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_FG\%) (copy)_166633194426679300:qk:2]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_2P\%)  (copy)_166633194427224071:qk:2]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (2P\%)  (copy)_166633194427719689:qk:2]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_FT\%)  (copy)_166633194428145675:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:3pa:qk]' included-values='in-range'>
            <min>1.0</min>
            <max>8.0999999999999996</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_3pa:qk]' included-values='in-range'>
            <min>1.0</min>
            <max>10.300000000000001</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_g:qk]' included-values='in-range'>
            <min>25</min>
            <max>146</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]' included-values='in-range'>
            <min>50</min>
            <max>833</max>
          </filter>
          <manual-sort column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:pos:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;C&quot;</bucket>
              <bucket>&quot;C-F&quot;</bucket>
              <bucket>&quot;F&quot;</bucket>
              <bucket>&quot;F-C&quot;</bucket>
              <bucket>&quot;F-G&quot;</bucket>
              <bucket>&quot;G&quot;</bucket>
              <bucket>&quot;G-F&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_3pa:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:3pa:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' field-type='quantitative' max='1.0515137614678898' min='-0.051513761467889906' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='1' field='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:pos:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.053977899253368378' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:pos:nk]' />
              <lod column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.031988948583602905' />
                <format attr='mark-transparency' value='126' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:pos:nk]' />
              <path column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.031988948583602905' />
                <format attr='mark-color' value='#666666' />
                <format attr='mark-transparency' value='132' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values] + [federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values])</rows>
        <cols>[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{1AFB11AB-0419-44D8-85BE-A8A797EE022C}' />
    </worksheet>
    <worksheet name='Playmaking (AST)'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='Ast Per Minute (NBA)' datatype='real' name='[Ast Per Minute (C)  (copy)_1054968220059107335]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ast])/AVG([mp])' />
            </column>
            <column caption='Percent Change (ORB)' datatype='real' name='[Percent Change (DRB) (copy)_166633194496200733]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([orb]/[mp])-[c_orb]/[c_mp])/([c_orb]/[c_mp])*100' />
            </column>
            <column caption='Percent Change (Reb)' datatype='real' name='[Percent Change (Points) (copy)_166633194292793345]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Reb Per Minute (C) (copy)_1054968220058873862]-[Points Per Minute (copy)_1054968220058288131])/[Points Per Minute (copy)_1054968220058288131]*100' />
            </column>
            <column caption='Percent Change (Ast)' datatype='real' name='[Percent Change (Reb) (copy)_166633194295468034]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ast Per Minute (C)  (copy)_1054968220059107335]-[Reb Per Minute (C) (copy)_1054968220058558468])/[Reb Per Minute (C) (copy)_1054968220058558468]*100' />
            </column>
            <column caption='Percent Change (DRB)' datatype='real' name='[Percent Change (Reb) (copy)_166633194495496218]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([drb]/[mp])-[c_drb]/[c_mp])/([c_drb]/[c_mp])*100' />
            </column>
            <column caption='Reb Per Minute (C)' datatype='real' name='[Points Per Minute (copy)_1054968220058288131]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_trb])/AVG([c_mp])' />
            </column>
            <column caption='Ast Per Minute (C) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058558468]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_ast])/AVG([c_mp])' />
            </column>
            <column caption='Reb Per Minute (NBA) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058873862]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([trb])/AVG([mp])' />
            </column>
            <column caption='Ast' datatype='real' name='[ast]' role='measure' type='quantitative' />
            <column caption='C Ast' datatype='real' name='[c_ast]' role='measure' type='quantitative' />
            <column caption='C Drb' datatype='real' name='[c_drb]' role='measure' type='quantitative' />
            <column caption='C Mp' datatype='real' name='[c_mp]' role='measure' type='quantitative' />
            <column caption='C Orb' datatype='real' name='[c_orb]' role='measure' type='quantitative' />
            <column caption='C Trb' datatype='real' name='[c_trb]' role='measure' type='quantitative' />
            <column caption='Drb' datatype='real' name='[drb]' role='measure' type='quantitative' />
            <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
            <column caption='Mp' datatype='real' name='[mp]' role='measure' type='quantitative' />
            <column-instance column='[g]' derivation='None' name='[none:g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player_id]' derivation='None' name='[none:player_id:nk]' pivot='key' type='nominal' />
            <column caption='Orb' datatype='real' name='[orb]' role='measure' type='quantitative' />
            <column datatype='string' name='[player_id]' role='dimension' type='nominal' />
            <column-instance column='[Percent Change (DRB) (copy)_166633194496200733]' derivation='Sum' name='[sum:Percent Change (DRB) (copy)_166633194496200733:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194495496218]' derivation='Sum' name='[sum:Percent Change (Reb) (copy)_166633194495496218:qk]' pivot='key' type='quantitative' />
            <column caption='Trb' datatype='real' name='[trb]' role='measure' type='quantitative' />
            <column-instance column='[Ast Per Minute (C)  (copy)_1054968220059107335]' derivation='User' name='[usr:Ast Per Minute (C)  (copy)_1054968220059107335:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Points) (copy)_166633194292793345]' derivation='User' name='[usr:Percent Change (Points) (copy)_166633194292793345:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194295468034]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Reb Per Minute (C) (copy)_1054968220058558468]' derivation='User' name='[usr:Reb Per Minute (C) (copy)_1054968220058558468:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]' included-values='in-range'>
            <min>50</min>
            <max>833</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (DRB) (copy)_166633194496200733:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (Reb) (copy)_166633194495496218:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (DRB) (copy)_166633194496200733:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (Reb) (copy)_166633194495496218:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' />
              <lod column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]' />
              <tooltip column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Reb Per Minute (C) (copy)_1054968220058558468:qk]' />
              <tooltip column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Ast Per Minute (C)  (copy)_1054968220059107335:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='165' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='5' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]</rows>
        <cols>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Reb Per Minute (C) (copy)_1054968220058558468:qk]</cols>
      </table>
      <simple-id uuid='{916667C3-0E29-49BF-887C-F29C7C3D9C19}' />
    </worksheet>
    <worksheet name='Playmaking (Blocks)'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='2P' datatype='real' name='[2p]' role='measure' type='quantitative' />
            <column caption='Ast Per Minute (NBA)' datatype='real' name='[Ast Per Minute (C)  (copy)_1054968220059107335]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ast])/AVG([mp])' />
            </column>
            <column caption='Blocks Per Minute (C)  ' datatype='real' name='[Ast Per Minute (C)  (copy)_166633194469158927]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_blk])/AVG([c_mp])' />
            </column>
            <column caption='Blocks Per Minute (NBA)' datatype='real' name='[Blocks Per Minute (NBA)  (copy)_166633194488737814]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([2p])/AVG([mp])' />
            </column>
            <column caption='Blk % Change ' datatype='real' name='[Percent Change (Ast) (copy)_166633194469371920]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Blocks Per Minute (NBA)  (copy)_166633194488737814]-[Ast Per Minute (C)  (copy)_166633194469158927])/[Ast Per Minute (C)  (copy)_166633194469158927]*100' />
            </column>
            <column caption='Percent Change (ORB)' datatype='real' name='[Percent Change (DRB) (copy)_166633194496200733]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([orb]/[mp])-[c_orb]/[c_mp])/([c_orb]/[c_mp])*100' />
            </column>
            <column caption='Percent Change (Reb)' datatype='real' name='[Percent Change (Points) (copy)_166633194292793345]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Reb Per Minute (C) (copy)_1054968220058873862]-[Points Per Minute (copy)_1054968220058288131])/[Points Per Minute (copy)_1054968220058288131]*100' />
            </column>
            <column caption='Percent Change (Ast)' datatype='real' name='[Percent Change (Reb) (copy)_166633194295468034]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ast Per Minute (C)  (copy)_1054968220059107335]-[Reb Per Minute (C) (copy)_1054968220058558468])/[Reb Per Minute (C) (copy)_1054968220058558468]*100' />
            </column>
            <column caption='Percent Change (DRB)' datatype='real' name='[Percent Change (Reb) (copy)_166633194495496218]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([drb]/[mp])-[c_drb]/[c_mp])/([c_drb]/[c_mp])*100' />
            </column>
            <column caption='Reb Per Minute (C)' datatype='real' name='[Points Per Minute (copy)_1054968220058288131]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_trb])/AVG([c_mp])' />
            </column>
            <column caption='Ast Per Minute (C) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058558468]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_ast])/AVG([c_mp])' />
            </column>
            <column caption='Reb Per Minute (NBA) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058873862]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([trb])/AVG([mp])' />
            </column>
            <column caption='Ast' datatype='real' name='[ast]' role='measure' type='quantitative' />
            <column caption='C Ast' datatype='real' name='[c_ast]' role='measure' type='quantitative' />
            <column caption='C Blk' datatype='real' name='[c_blk]' role='measure' type='quantitative' />
            <column caption='C Drb' datatype='real' name='[c_drb]' role='measure' type='quantitative' />
            <column caption='C Mp' datatype='real' name='[c_mp]' role='measure' type='quantitative' />
            <column caption='C Orb' datatype='real' name='[c_orb]' role='measure' type='quantitative' />
            <column caption='C Trb' datatype='real' name='[c_trb]' role='measure' type='quantitative' />
            <column caption='Drb' datatype='real' name='[drb]' role='measure' type='quantitative' />
            <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
            <column caption='Mp' datatype='real' name='[mp]' role='measure' type='quantitative' />
            <column-instance column='[g]' derivation='None' name='[none:g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player_id]' derivation='None' name='[none:player_id:nk]' pivot='key' type='nominal' />
            <column caption='Orb' datatype='real' name='[orb]' role='measure' type='quantitative' />
            <column datatype='string' name='[player_id]' role='dimension' type='nominal' />
            <column-instance column='[Percent Change (DRB) (copy)_166633194496200733]' derivation='Sum' name='[sum:Percent Change (DRB) (copy)_166633194496200733:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194495496218]' derivation='Sum' name='[sum:Percent Change (Reb) (copy)_166633194495496218:qk]' pivot='key' type='quantitative' />
            <column caption='Trb' datatype='real' name='[trb]' role='measure' type='quantitative' />
            <column-instance column='[Ast Per Minute (C)  (copy)_166633194469158927]' derivation='User' name='[usr:Ast Per Minute (C)  (copy)_166633194469158927:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Ast) (copy)_166633194469371920]' derivation='User' name='[usr:Percent Change (Ast) (copy)_166633194469371920:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Points) (copy)_166633194292793345]' derivation='User' name='[usr:Percent Change (Points) (copy)_166633194292793345:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194295468034]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]' included-values='in-range'>
            <min>50</min>
            <max>833</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (DRB) (copy)_166633194496200733:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (Reb) (copy)_166633194495496218:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Ast) (copy)_166633194469371920:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (DRB) (copy)_166633194496200733:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (Reb) (copy)_166633194495496218:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Ast) (copy)_166633194469371920:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' palette='red_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Ast) (copy)_166633194469371920:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Ast) (copy)_166633194469371920:qk]' />
              <lod column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='165' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='5' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Ast) (copy)_166633194469371920:qk]</rows>
        <cols>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Ast Per Minute (C)  (copy)_166633194469158927:qk]</cols>
      </table>
      <simple-id uuid='{0989273E-D5E3-484E-BBAA-E2870B75ECCC}' />
    </worksheet>
    <worksheet name='Playmaking (Steals)'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='Ast Per Minute (NBA)' datatype='real' name='[Ast Per Minute (C)  (copy)_1054968220059107335]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ast])/AVG([mp])' />
            </column>
            <column caption='Percent Change (ORB)' datatype='real' name='[Percent Change (DRB) (copy)_166633194496200733]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([orb]/[mp])-[c_orb]/[c_mp])/([c_orb]/[c_mp])*100' />
            </column>
            <column caption='Percent Change (Stl)' datatype='real' name='[Percent Change (ORB) (copy)_166633194500960289]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([stl]/[mp])-[c_stl]/[c_mp])/([c_stl]/[c_mp])*100' />
            </column>
            <column caption='Percent Change (Reb)' datatype='real' name='[Percent Change (Points) (copy)_166633194292793345]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Reb Per Minute (C) (copy)_1054968220058873862]-[Points Per Minute (copy)_1054968220058288131])/[Points Per Minute (copy)_1054968220058288131]*100' />
            </column>
            <column caption='Percent Change (Ast)' datatype='real' name='[Percent Change (Reb) (copy)_166633194295468034]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ast Per Minute (C)  (copy)_1054968220059107335]-[Reb Per Minute (C) (copy)_1054968220058558468])/[Reb Per Minute (C) (copy)_1054968220058558468]*100' />
            </column>
            <column caption='Percent Change (DRB)' datatype='real' name='[Percent Change (Reb) (copy)_166633194495496218]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([drb]/[mp])-[c_drb]/[c_mp])/([c_drb]/[c_mp])*100' />
            </column>
            <column caption='Reb Per Minute (C)' datatype='real' name='[Points Per Minute (copy)_1054968220058288131]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_trb])/AVG([c_mp])' />
            </column>
            <column caption='Ast Per Minute (C) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058558468]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_ast])/AVG([c_mp])' />
            </column>
            <column caption='Reb Per Minute (NBA) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058873862]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([trb])/AVG([mp])' />
            </column>
            <column caption='Stl Per Minute (C)' datatype='real' name='[Reb Per Minute (C) (copy)_166633194500448287]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_stl])/AVG([c_mp])' />
            </column>
            <column caption='Ast' datatype='real' name='[ast]' role='measure' type='quantitative' />
            <column caption='C Ast' datatype='real' name='[c_ast]' role='measure' type='quantitative' />
            <column caption='C Drb' datatype='real' name='[c_drb]' role='measure' type='quantitative' />
            <column caption='C Mp' datatype='real' name='[c_mp]' role='measure' type='quantitative' />
            <column caption='C Orb' datatype='real' name='[c_orb]' role='measure' type='quantitative' />
            <column caption='C Stl' datatype='real' name='[c_stl]' role='measure' type='quantitative' />
            <column caption='C Trb' datatype='real' name='[c_trb]' role='measure' type='quantitative' />
            <column caption='Drb' datatype='real' name='[drb]' role='measure' type='quantitative' />
            <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
            <column caption='Mp' datatype='real' name='[mp]' role='measure' type='quantitative' />
            <column-instance column='[g]' derivation='None' name='[none:g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player_id]' derivation='None' name='[none:player_id:nk]' pivot='key' type='nominal' />
            <column caption='Orb' datatype='real' name='[orb]' role='measure' type='quantitative' />
            <column datatype='string' name='[player_id]' role='dimension' type='nominal' />
            <column caption='Stl' datatype='real' name='[stl]' role='measure' type='quantitative' />
            <column-instance column='[Percent Change (DRB) (copy)_166633194496200733]' derivation='Sum' name='[sum:Percent Change (DRB) (copy)_166633194496200733:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (ORB) (copy)_166633194500960289]' derivation='Sum' name='[sum:Percent Change (ORB) (copy)_166633194500960289:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194495496218]' derivation='Sum' name='[sum:Percent Change (Reb) (copy)_166633194495496218:qk]' pivot='key' type='quantitative' />
            <column caption='Trb' datatype='real' name='[trb]' role='measure' type='quantitative' />
            <column-instance column='[Percent Change (Points) (copy)_166633194292793345]' derivation='User' name='[usr:Percent Change (Points) (copy)_166633194292793345:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194295468034]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Reb Per Minute (C) (copy)_166633194500448287]' derivation='User' name='[usr:Reb Per Minute (C) (copy)_166633194500448287:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]' included-values='in-range'>
            <min>50</min>
            <max>833</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (DRB) (copy)_166633194496200733:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (Reb) (copy)_166633194495496218:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (DRB) (copy)_166633194496200733:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (Reb) (copy)_166633194495496218:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' palette='red_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (ORB) (copy)_166633194500960289:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (ORB) (copy)_166633194500960289:qk]' />
              <lod column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='165' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='5' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (ORB) (copy)_166633194500960289:qk]</rows>
        <cols>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Reb Per Minute (C) (copy)_166633194500448287:qk]</cols>
      </table>
      <simple-id uuid='{3805F291-980D-4B0A-B638-5D3C6F0A5F1E}' />
    </worksheet>
    <worksheet name='Playmaking (TO)'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='TO Per Minute (C)' datatype='real' name='[2P Per Minute (C)  (copy)_166633194503729186]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_tov])/AVG([c_mp])' />
            </column>
            <column caption='2P' datatype='real' name='[2p]' role='measure' type='quantitative' />
            <column caption='Ast Per Minute (NBA)' datatype='real' name='[Ast Per Minute (C)  (copy)_1054968220059107335]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ast])/AVG([mp])' />
            </column>
            <column caption='Blocks Per Minute (C)  ' datatype='real' name='[Ast Per Minute (C)  (copy)_166633194469158927]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_blk])/AVG([c_mp])' />
            </column>
            <column caption='Blocks Per Minute (NBA)' datatype='real' name='[Blocks Per Minute (NBA)  (copy)_166633194488737814]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([2p])/AVG([mp])' />
            </column>
            <column caption='Blk % Change ' datatype='real' name='[Percent Change (Ast) (copy)_166633194469371920]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Blocks Per Minute (NBA)  (copy)_166633194488737814]-[Ast Per Minute (C)  (copy)_166633194469158927])/[Ast Per Minute (C)  (copy)_166633194469158927]*100' />
            </column>
            <column caption='Percent Change (ORB)' datatype='real' name='[Percent Change (DRB) (copy)_166633194496200733]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([orb]/[mp])-[c_orb]/[c_mp])/([c_orb]/[c_mp])*100' />
            </column>
            <column caption='Percent Change (Reb)' datatype='real' name='[Percent Change (Points) (copy)_166633194292793345]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Reb Per Minute (C) (copy)_1054968220058873862]-[Points Per Minute (copy)_1054968220058288131])/[Points Per Minute (copy)_1054968220058288131]*100' />
            </column>
            <column caption='Percent Change (Ast)' datatype='real' name='[Percent Change (Reb) (copy)_166633194295468034]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ast Per Minute (C)  (copy)_1054968220059107335]-[Reb Per Minute (C) (copy)_1054968220058558468])/[Reb Per Minute (C) (copy)_1054968220058558468]*100' />
            </column>
            <column caption='Percent Change (DRB)' datatype='real' name='[Percent Change (Reb) (copy)_166633194495496218]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([drb]/[mp])-[c_drb]/[c_mp])/([c_drb]/[c_mp])*100' />
            </column>
            <column caption='Percent Change (TO) ' datatype='real' name='[Percent Change (Stl) (copy)_166633194504069155]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([tov]/[mp])-[c_tov]/[c_mp])/([c_tov]/[c_mp])*100' />
            </column>
            <column caption='Reb Per Minute (C)' datatype='real' name='[Points Per Minute (copy)_1054968220058288131]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_trb])/AVG([c_mp])' />
            </column>
            <column caption='Ast Per Minute (C) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058558468]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_ast])/AVG([c_mp])' />
            </column>
            <column caption='Reb Per Minute (NBA) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058873862]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([trb])/AVG([mp])' />
            </column>
            <column caption='Ast' datatype='real' name='[ast]' role='measure' type='quantitative' />
            <column caption='C Ast' datatype='real' name='[c_ast]' role='measure' type='quantitative' />
            <column caption='C Blk' datatype='real' name='[c_blk]' role='measure' type='quantitative' />
            <column caption='C Drb' datatype='real' name='[c_drb]' role='measure' type='quantitative' />
            <column caption='C Mp' datatype='real' name='[c_mp]' role='measure' type='quantitative' />
            <column caption='C Orb' datatype='real' name='[c_orb]' role='measure' type='quantitative' />
            <column caption='C Tov' datatype='real' name='[c_tov]' role='measure' type='quantitative' />
            <column caption='C Trb' datatype='real' name='[c_trb]' role='measure' type='quantitative' />
            <column caption='Drb' datatype='real' name='[drb]' role='measure' type='quantitative' />
            <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
            <column caption='Mp' datatype='real' name='[mp]' role='measure' type='quantitative' />
            <column-instance column='[g]' derivation='None' name='[none:g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player_id]' derivation='None' name='[none:player_id:nk]' pivot='key' type='nominal' />
            <column caption='Orb' datatype='real' name='[orb]' role='measure' type='quantitative' />
            <column datatype='string' name='[player_id]' role='dimension' type='nominal' />
            <column-instance column='[Percent Change (DRB) (copy)_166633194496200733]' derivation='Sum' name='[sum:Percent Change (DRB) (copy)_166633194496200733:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194495496218]' derivation='Sum' name='[sum:Percent Change (Reb) (copy)_166633194495496218:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Stl) (copy)_166633194504069155]' derivation='Sum' name='[sum:Percent Change (Stl) (copy)_166633194504069155:qk]' pivot='key' type='quantitative' />
            <column caption='Tov' datatype='real' name='[tov]' role='measure' type='quantitative' />
            <column caption='Trb' datatype='real' name='[trb]' role='measure' type='quantitative' />
            <column-instance column='[2P Per Minute (C)  (copy)_166633194503729186]' derivation='User' name='[usr:2P Per Minute (C)  (copy)_166633194503729186:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Ast) (copy)_166633194469371920]' derivation='User' name='[usr:Percent Change (Ast) (copy)_166633194469371920:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Points) (copy)_166633194292793345]' derivation='User' name='[usr:Percent Change (Points) (copy)_166633194292793345:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194295468034]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]' included-values='in-range'>
            <min>50</min>
            <max>833</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (DRB) (copy)_166633194496200733:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (Reb) (copy)_166633194495496218:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Ast) (copy)_166633194469371920:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (DRB) (copy)_166633194496200733:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (Reb) (copy)_166633194495496218:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Ast) (copy)_166633194469371920:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' palette='red_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Ast) (copy)_166633194469371920:qk]' palette='red_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (Stl) (copy)_166633194504069155:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (Stl) (copy)_166633194504069155:qk]' />
              <lod column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='165' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='5' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (Stl) (copy)_166633194504069155:qk]</rows>
        <cols>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:2P Per Minute (C)  (copy)_166633194503729186:qk]</cols>
      </table>
      <simple-id uuid='{95ACF526-DCA1-4D27-8120-5E62BE7F1CBC}' />
    </worksheet>
    <worksheet name='Rebounding (Reb)'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='Percent Change (ORB)' datatype='real' name='[Percent Change (DRB) (copy)_166633194496200733]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([orb]/[mp])-[c_orb]/[c_mp])/([c_orb]/[c_mp])*100' />
            </column>
            <column caption='Percent Change (Reb)' datatype='real' name='[Percent Change (Points) (copy)_166633194292793345]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Reb Per Minute (C) (copy)_1054968220058873862]-[Points Per Minute (copy)_1054968220058288131])/[Points Per Minute (copy)_1054968220058288131]*100' />
            </column>
            <column caption='Percent Change (DRB)' datatype='real' name='[Percent Change (Reb) (copy)_166633194495496218]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([drb]/[mp])-[c_drb]/[c_mp])/([c_drb]/[c_mp])*100' />
            </column>
            <column caption='Reb Per Minute (C)' datatype='real' name='[Points Per Minute (copy)_1054968220058288131]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_trb])/AVG([c_mp])' />
            </column>
            <column caption='Reb Per Minute (NBA) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058873862]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([trb])/AVG([mp])' />
            </column>
            <column caption='C Drb' datatype='real' name='[c_drb]' role='measure' type='quantitative' />
            <column caption='C Mp' datatype='real' name='[c_mp]' role='measure' type='quantitative' />
            <column caption='C Orb' datatype='real' name='[c_orb]' role='measure' type='quantitative' />
            <column caption='C Trb' datatype='real' name='[c_trb]' role='measure' type='quantitative' />
            <column caption='Drb' datatype='real' name='[drb]' role='measure' type='quantitative' />
            <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
            <column caption='Mp' datatype='real' name='[mp]' role='measure' type='quantitative' />
            <column-instance column='[g]' derivation='None' name='[none:g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player_id]' derivation='None' name='[none:player_id:nk]' pivot='key' type='nominal' />
            <column caption='Orb' datatype='real' name='[orb]' role='measure' type='quantitative' />
            <column datatype='string' name='[player_id]' role='dimension' type='nominal' />
            <column-instance column='[Percent Change (DRB) (copy)_166633194496200733]' derivation='Sum' name='[sum:Percent Change (DRB) (copy)_166633194496200733:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194495496218]' derivation='Sum' name='[sum:Percent Change (Reb) (copy)_166633194495496218:qk]' pivot='key' type='quantitative' />
            <column caption='Trb' datatype='real' name='[trb]' role='measure' type='quantitative' />
            <column-instance column='[Percent Change (Points) (copy)_166633194292793345]' derivation='User' name='[usr:Percent Change (Points) (copy)_166633194292793345:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Points Per Minute (copy)_1054968220058288131]' derivation='User' name='[usr:Points Per Minute (copy)_1054968220058288131:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (Reb) (copy)_166633194495496218:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (DRB) (copy)_166633194496200733:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]' included-values='in-range'>
            <min>50</min>
            <max>833</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (DRB) (copy)_166633194496200733:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (Reb) (copy)_166633194495496218:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (DRB) (copy)_166633194496200733:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (Reb) (copy)_166633194495496218:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' />
              <lod column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='165' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='5' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]</rows>
        <cols>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Points Per Minute (copy)_1054968220058288131:qk]</cols>
      </table>
      <simple-id uuid='{3FA6258C-47B8-491A-B2C5-8E560C8E8C26}' />
    </worksheet>
    <worksheet name='SOS and Percent Change'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='Ast Per Minute (NBA)' datatype='real' name='[Ast Per Minute (C)  (copy)_1054968220059107335]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ast])/AVG([mp])' />
            </column>
            <column caption='Percent Change (Points)' datatype='real' name='[Calculation_1054968220053663744]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Points Per Minute (C) (copy)_1054968220058722309]-[Calculation_1054968220057976834])/[Calculation_1054968220057976834]*100' />
            </column>
            <column caption='Points Per Minute (C)' datatype='real' name='[Calculation_1054968220057976834]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_pts])/AVG([c_mp])' />
            </column>
            <column caption='Percent Change (Reb)' datatype='real' name='[Percent Change (Points) (copy)_166633194292793345]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Reb Per Minute (C) (copy)_1054968220058873862]-[Points Per Minute (copy)_1054968220058288131])/[Points Per Minute (copy)_1054968220058288131]*100' />
            </column>
            <column caption='Percent Change (Ast)' datatype='real' name='[Percent Change (Reb) (copy)_166633194295468034]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ast Per Minute (C)  (copy)_1054968220059107335]-[Reb Per Minute (C) (copy)_1054968220058558468])/[Reb Per Minute (C) (copy)_1054968220058558468]*100' />
            </column>
            <column caption='Points Per Minute (NBA)' datatype='real' name='[Points Per Minute (C) (copy)_1054968220058722309]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([pts])/AVG([mp])' />
            </column>
            <column caption='Reb Per Minute (C)' datatype='real' name='[Points Per Minute (copy)_1054968220058288131]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_trb])/AVG([c_mp])' />
            </column>
            <column caption='Ast Per Minute (C) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058558468]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_ast])/AVG([c_mp])' />
            </column>
            <column caption='Reb Per Minute (NBA) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058873862]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([trb])/AVG([mp])' />
            </column>
            <column caption='Ast' datatype='real' name='[ast]' role='measure' type='quantitative' />
            <column caption='C Ast' datatype='real' name='[c_ast]' role='measure' type='quantitative' />
            <column caption='C Mp' datatype='real' name='[c_mp]' role='measure' type='quantitative' />
            <column caption='C Pts' datatype='real' name='[c_pts]' role='measure' type='quantitative' />
            <column caption='C Sos' datatype='real' name='[c_sos]' role='measure' type='quantitative' />
            <column caption='C Trb' datatype='real' name='[c_trb]' role='measure' type='quantitative' />
            <column datatype='real' name='[college_ws_game]' role='measure' type='quantitative' />
            <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
            <column caption='Mp' datatype='real' name='[mp]' role='measure' type='quantitative' />
            <column-instance column='[g]' derivation='None' name='[none:g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player_id]' derivation='None' name='[none:player_id:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[player_id]' role='dimension' type='nominal' />
            <column caption='Pts' datatype='real' name='[pts]' role='measure' type='quantitative' />
            <column-instance column='[c_sos]' derivation='Sum' name='[sum:c_sos:qk]' pivot='key' type='quantitative' />
            <column-instance column='[college_ws_game]' derivation='Sum' name='[sum:college_ws_game:qk]' pivot='key' type='quantitative' />
            <column caption='Trb' datatype='real' name='[trb]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1054968220053663744]' derivation='User' name='[usr:Calculation_1054968220053663744:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Points) (copy)_166633194292793345]' derivation='User' name='[usr:Percent Change (Points) (copy)_166633194292793345:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194295468034]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]' included-values='in-range'>
            <min>50</min>
            <max>833</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:college_ws_game:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:college_ws_game:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' />
              <lod column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.8790607452392578' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='165' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='5' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]</rows>
        <cols>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_sos:qk]</cols>
      </table>
      <simple-id uuid='{3F276391-6FC5-4FA8-8F35-A3679205648D}' />
    </worksheet>
    <worksheet name='Scoring (3P)'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='2P' datatype='real' name='[2p]' role='measure' type='quantitative' />
            <column caption='3P' datatype='real' name='[3p]' role='measure' type='quantitative' />
            <column caption='Ast Per Minute (NBA)' datatype='real' name='[Ast Per Minute (C)  (copy)_1054968220059107335]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ast])/AVG([mp])' />
            </column>
            <column caption='2p  Per Minute (NBA) ' datatype='real' name='[Ast Per Minute (NBA) (copy)_166633194469085198]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([2p])/AVG([mp])' />
            </column>
            <column caption='FT Per Minute (C) ' datatype='real' name='[Blocks Per Minute (C)   (copy)_166633194487799825]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_ft])/AVG([c_mp])' />
            </column>
            <column caption='3P Per Minute (C) ' datatype='real' name='[Blocks Per Minute (C)   (copy)_166633194488463379]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_3p])/AVG([c_mp])' />
            </column>
            <column caption='2P Per Minute (C) ' datatype='real' name='[Blocks Per Minute (C)   (copy)_166633194488737813]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_2p])/AVG([c_mp])' />
            </column>
            <column caption='FT Per Minute (NBA) ' datatype='real' name='[Blocks Per Minute (NBA)  (copy)_166633194487799826]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ft])/AVG([mp])' />
            </column>
            <column caption='3P Per Minute (NBA)' datatype='real' name='[Blocks Per Minute (NBA)  (copy)_166633194488463380]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([3p])/AVG([mp])' />
            </column>
            <column caption='Percent Change (Points)' datatype='real' name='[Calculation_1054968220053663744]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Points Per Minute (C) (copy)_1054968220058722309]-[Calculation_1054968220057976834])/[Calculation_1054968220057976834]*100' />
            </column>
            <column caption='Points Per Minute (C)' datatype='real' name='[Calculation_1054968220057976834]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_pts])/AVG([c_mp])' />
            </column>
            <column caption='Percent Change (Reb)' datatype='real' name='[Percent Change (Points) (copy)_166633194292793345]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Reb Per Minute (C) (copy)_1054968220058873862]-[Points Per Minute (copy)_1054968220058288131])/[Points Per Minute (copy)_1054968220058288131]*100' />
            </column>
            <column caption='Percent Change (Ast)' datatype='real' name='[Percent Change (Reb) (copy)_166633194295468034]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ast Per Minute (C)  (copy)_1054968220059107335]-[Reb Per Minute (C) (copy)_1054968220058558468])/[Reb Per Minute (C) (copy)_1054968220058558468]*100' />
            </column>
            <column caption='Percent Change (FT)' datatype='real' name='[Percent Change (Reb) (copy)_166633194488909847]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Blocks Per Minute (NBA)  (copy)_166633194487799826]-[Blocks Per Minute (C)   (copy)_166633194487799825])/[Blocks Per Minute (C)   (copy)_166633194487799825]*100' />
            </column>
            <column caption='Percent Change (3P)' datatype='real' name='[Percent Change (Reb) (copy)_166633194489098264]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Blocks Per Minute (NBA)  (copy)_166633194488463380]-[Blocks Per Minute (C)   (copy)_166633194488463379])/[Blocks Per Minute (C)   (copy)_166633194488463379]*100' />
            </column>
            <column caption='Percent Change (2P) ' datatype='real' name='[Percent Change (Reb) (copy)_166633194489249817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ast Per Minute (NBA) (copy)_166633194469085198]-[Blocks Per Minute (C)   (copy)_166633194488737813])/[Blocks Per Minute (C)   (copy)_166633194488737813]*100' />
            </column>
            <column caption='Points Per Minute (NBA)' datatype='real' name='[Points Per Minute (C) (copy)_1054968220058722309]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([pts])/AVG([mp])' />
            </column>
            <column caption='Reb Per Minute (C)' datatype='real' name='[Points Per Minute (copy)_1054968220058288131]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_trb])/AVG([c_mp])' />
            </column>
            <column caption='Ast Per Minute (C) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058558468]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_ast])/AVG([c_mp])' />
            </column>
            <column caption='Reb Per Minute (NBA) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058873862]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([trb])/AVG([mp])' />
            </column>
            <column caption='Ast' datatype='real' name='[ast]' role='measure' type='quantitative' />
            <column caption='C 2P' datatype='real' name='[c_2p]' role='measure' type='quantitative' />
            <column caption='C 3P' datatype='real' name='[c_3p]' role='measure' type='quantitative' />
            <column caption='C 3Pa' datatype='real' name='[c_3pa]' role='measure' type='quantitative' />
            <column caption='C Ast' datatype='real' name='[c_ast]' role='measure' type='quantitative' />
            <column caption='C Ft' datatype='real' name='[c_ft]' role='measure' type='quantitative' />
            <column caption='C Mp' datatype='real' name='[c_mp]' role='measure' type='quantitative' />
            <column caption='C Pts' datatype='real' name='[c_pts]' role='measure' type='quantitative' />
            <column caption='C Trb' datatype='real' name='[c_trb]' role='measure' type='quantitative' />
            <column datatype='real' name='[college_ws_game]' role='measure' type='quantitative' />
            <column caption='Ft' datatype='real' name='[ft]' role='measure' type='quantitative' />
            <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
            <column caption='Mp' datatype='real' name='[mp]' role='measure' type='quantitative' />
            <column-instance column='[c_3pa]' derivation='None' name='[none:c_3pa:qk]' pivot='key' type='quantitative' />
            <column-instance column='[g]' derivation='None' name='[none:g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player_id]' derivation='None' name='[none:player_id:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[player_id]' role='dimension' type='nominal' />
            <column caption='Pts' datatype='real' name='[pts]' role='measure' type='quantitative' />
            <column-instance column='[college_ws_game]' derivation='Sum' name='[sum:college_ws_game:qk]' pivot='key' type='quantitative' />
            <column caption='Trb' datatype='real' name='[trb]' role='measure' type='quantitative' />
            <column-instance column='[Blocks Per Minute (C)   (copy)_166633194488463379]' derivation='User' name='[usr:Blocks Per Minute (C)   (copy)_166633194488463379:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1054968220053663744]' derivation='User' name='[usr:Calculation_1054968220053663744:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Points) (copy)_166633194292793345]' derivation='User' name='[usr:Percent Change (Points) (copy)_166633194292793345:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194295468034]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194488909847]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194488909847:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194489098264]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194489098264:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194489249817]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194489249817:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489249817:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489098264:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194488909847:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489249817:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489098264:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194488909847:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_3pa:qk]' included-values='in-range'>
            <min>1.0</min>
            <max>10.300000000000001</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]' included-values='in-range'>
            <min>50</min>
            <max>833</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:college_ws_game:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194488909847:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489098264:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489249817:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_3pa:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:college_ws_game:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194488909847:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489098264:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489249817:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' />
              <lod column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='165' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='5' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]</rows>
        <cols>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Blocks Per Minute (C)   (copy)_166633194488463379:qk]</cols>
      </table>
      <simple-id uuid='{5C6979BD-63D7-4D62-9F20-2C5A94222FFA}' />
    </worksheet>
    <worksheet name='Scoring (GP)'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='2P' datatype='real' name='[2p]' role='measure' type='quantitative' />
            <column caption='3P' datatype='real' name='[3p]' role='measure' type='quantitative' />
            <column caption='Ast Per Minute (NBA)' datatype='real' name='[Ast Per Minute (C)  (copy)_1054968220059107335]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ast])/AVG([mp])' />
            </column>
            <column caption='2p  Per Minute (NBA) ' datatype='real' name='[Ast Per Minute (NBA) (copy)_166633194469085198]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([2p])/AVG([mp])' />
            </column>
            <column caption='FT Per Minute (C) ' datatype='real' name='[Blocks Per Minute (C)   (copy)_166633194487799825]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_ft])/AVG([c_mp])' />
            </column>
            <column caption='3P Per Minute (C) ' datatype='real' name='[Blocks Per Minute (C)   (copy)_166633194488463379]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_3p])/AVG([c_mp])' />
            </column>
            <column caption='2P Per Minute (C) ' datatype='real' name='[Blocks Per Minute (C)   (copy)_166633194488737813]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_2p])/AVG([c_mp])' />
            </column>
            <column caption='FT Per Minute (NBA) ' datatype='real' name='[Blocks Per Minute (NBA)  (copy)_166633194487799826]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ft])/AVG([mp])' />
            </column>
            <column caption='3P Per Minute (NBA)' datatype='real' name='[Blocks Per Minute (NBA)  (copy)_166633194488463380]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([3p])/AVG([mp])' />
            </column>
            <column caption='Percent Change (Points)' datatype='real' name='[Calculation_1054968220053663744]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Points Per Minute (C) (copy)_1054968220058722309]-[Calculation_1054968220057976834])/[Calculation_1054968220057976834]*100' />
            </column>
            <column caption='Points Per Minute (C)' datatype='real' name='[Calculation_1054968220057976834]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_pts])/AVG([c_mp])' />
            </column>
            <column caption='Percent Change (Reb)' datatype='real' name='[Percent Change (Points) (copy)_166633194292793345]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Reb Per Minute (C) (copy)_1054968220058873862]-[Points Per Minute (copy)_1054968220058288131])/[Points Per Minute (copy)_1054968220058288131]*100' />
            </column>
            <column caption='Percent Change (Ast)' datatype='real' name='[Percent Change (Reb) (copy)_166633194295468034]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ast Per Minute (C)  (copy)_1054968220059107335]-[Reb Per Minute (C) (copy)_1054968220058558468])/[Reb Per Minute (C) (copy)_1054968220058558468]*100' />
            </column>
            <column caption='Percent Change (FT)' datatype='real' name='[Percent Change (Reb) (copy)_166633194488909847]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Blocks Per Minute (NBA)  (copy)_166633194487799826]-[Blocks Per Minute (C)   (copy)_166633194487799825])/[Blocks Per Minute (C)   (copy)_166633194487799825]*100' />
            </column>
            <column caption='Percent Change (3P)' datatype='real' name='[Percent Change (Reb) (copy)_166633194489098264]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Blocks Per Minute (NBA)  (copy)_166633194488463380]-[Blocks Per Minute (C)   (copy)_166633194488463379])/[Blocks Per Minute (C)   (copy)_166633194488463379]*100' />
            </column>
            <column caption='Percent Change (2P) ' datatype='real' name='[Percent Change (Reb) (copy)_166633194489249817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ast Per Minute (NBA) (copy)_166633194469085198]-[Blocks Per Minute (C)   (copy)_166633194488737813])/[Blocks Per Minute (C)   (copy)_166633194488737813]*100' />
            </column>
            <column caption='Points Per Minute (NBA)' datatype='real' name='[Points Per Minute (C) (copy)_1054968220058722309]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([pts])/AVG([mp])' />
            </column>
            <column caption='Reb Per Minute (C)' datatype='real' name='[Points Per Minute (copy)_1054968220058288131]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_trb])/AVG([c_mp])' />
            </column>
            <column caption='Ast Per Minute (C) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058558468]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_ast])/AVG([c_mp])' />
            </column>
            <column caption='Reb Per Minute (NBA) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058873862]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([trb])/AVG([mp])' />
            </column>
            <column caption='Ast' datatype='real' name='[ast]' role='measure' type='quantitative' />
            <column caption='C 2P' datatype='real' name='[c_2p]' role='measure' type='quantitative' />
            <column caption='C 3P' datatype='real' name='[c_3p]' role='measure' type='quantitative' />
            <column caption='C 3Pa' datatype='real' name='[c_3pa]' role='measure' type='quantitative' />
            <column caption='C Ast' datatype='real' name='[c_ast]' role='measure' type='quantitative' />
            <column caption='C Ft' datatype='real' name='[c_ft]' role='measure' type='quantitative' />
            <column caption='C G' datatype='integer' name='[c_g]' role='measure' type='quantitative' />
            <column caption='C Mp' datatype='real' name='[c_mp]' role='measure' type='quantitative' />
            <column caption='C Pts' datatype='real' name='[c_pts]' role='measure' type='quantitative' />
            <column caption='C Trb' datatype='real' name='[c_trb]' role='measure' type='quantitative' />
            <column datatype='real' name='[college_ws_game]' role='measure' type='quantitative' />
            <column caption='Ft' datatype='real' name='[ft]' role='measure' type='quantitative' />
            <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
            <column caption='Mp' datatype='real' name='[mp]' role='measure' type='quantitative' />
            <column-instance column='[c_3pa]' derivation='None' name='[none:c_3pa:qk]' pivot='key' type='quantitative' />
            <column-instance column='[g]' derivation='None' name='[none:g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player_id]' derivation='None' name='[none:player_id:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[player_id]' role='dimension' type='nominal' />
            <column caption='Pts' datatype='real' name='[pts]' role='measure' type='quantitative' />
            <column-instance column='[c_g]' derivation='Sum' name='[sum:c_g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[college_ws_game]' derivation='Sum' name='[sum:college_ws_game:qk]' pivot='key' type='quantitative' />
            <column caption='Trb' datatype='real' name='[trb]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1054968220053663744]' derivation='User' name='[usr:Calculation_1054968220053663744:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Points) (copy)_166633194292793345]' derivation='User' name='[usr:Percent Change (Points) (copy)_166633194292793345:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194295468034]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194488909847]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194488909847:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194489098264]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194489098264:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194489249817]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194489249817:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489249817:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489098264:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194488909847:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489249817:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489098264:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194488909847:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_3pa:qk]' included-values='in-range'>
            <min>1.0</min>
            <max>10.300000000000001</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]' included-values='in-range'>
            <min>50</min>
            <max>833</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:college_ws_game:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194488909847:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489098264:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489249817:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_3pa:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:college_ws_game:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194488909847:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489098264:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489249817:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' />
              <lod column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='165' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='5' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]</rows>
        <cols>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_g:qk]</cols>
      </table>
      <simple-id uuid='{4164FA47-07CF-4B96-9050-FA6FA9935572}' />
    </worksheet>
    <worksheet name='Scoring (MP)'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='2P' datatype='real' name='[2p]' role='measure' type='quantitative' />
            <column caption='3P' datatype='real' name='[3p]' role='measure' type='quantitative' />
            <column caption='Ast Per Minute (NBA)' datatype='real' name='[Ast Per Minute (C)  (copy)_1054968220059107335]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ast])/AVG([mp])' />
            </column>
            <column caption='2p  Per Minute (NBA) ' datatype='real' name='[Ast Per Minute (NBA) (copy)_166633194469085198]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([2p])/AVG([mp])' />
            </column>
            <column caption='FT Per Minute (C) ' datatype='real' name='[Blocks Per Minute (C)   (copy)_166633194487799825]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_ft])/AVG([c_mp])' />
            </column>
            <column caption='3P Per Minute (C) ' datatype='real' name='[Blocks Per Minute (C)   (copy)_166633194488463379]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_3p])/AVG([c_mp])' />
            </column>
            <column caption='2P Per Minute (C) ' datatype='real' name='[Blocks Per Minute (C)   (copy)_166633194488737813]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_2p])/AVG([c_mp])' />
            </column>
            <column caption='FT Per Minute (NBA) ' datatype='real' name='[Blocks Per Minute (NBA)  (copy)_166633194487799826]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ft])/AVG([mp])' />
            </column>
            <column caption='3P Per Minute (NBA)' datatype='real' name='[Blocks Per Minute (NBA)  (copy)_166633194488463380]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([3p])/AVG([mp])' />
            </column>
            <column caption='Percent Change (Points)' datatype='real' name='[Calculation_1054968220053663744]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Points Per Minute (C) (copy)_1054968220058722309]-[Calculation_1054968220057976834])/[Calculation_1054968220057976834]*100' />
            </column>
            <column caption='Points Per Minute (C)' datatype='real' name='[Calculation_1054968220057976834]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_pts])/AVG([c_mp])' />
            </column>
            <column caption='Percent Change (Reb)' datatype='real' name='[Percent Change (Points) (copy)_166633194292793345]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Reb Per Minute (C) (copy)_1054968220058873862]-[Points Per Minute (copy)_1054968220058288131])/[Points Per Minute (copy)_1054968220058288131]*100' />
            </column>
            <column caption='Percent Change (Ast)' datatype='real' name='[Percent Change (Reb) (copy)_166633194295468034]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ast Per Minute (C)  (copy)_1054968220059107335]-[Reb Per Minute (C) (copy)_1054968220058558468])/[Reb Per Minute (C) (copy)_1054968220058558468]*100' />
            </column>
            <column caption='Percent Change (FT)' datatype='real' name='[Percent Change (Reb) (copy)_166633194488909847]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Blocks Per Minute (NBA)  (copy)_166633194487799826]-[Blocks Per Minute (C)   (copy)_166633194487799825])/[Blocks Per Minute (C)   (copy)_166633194487799825]*100' />
            </column>
            <column caption='Percent Change (3P)' datatype='real' name='[Percent Change (Reb) (copy)_166633194489098264]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Blocks Per Minute (NBA)  (copy)_166633194488463380]-[Blocks Per Minute (C)   (copy)_166633194488463379])/[Blocks Per Minute (C)   (copy)_166633194488463379]*100' />
            </column>
            <column caption='Percent Change (2P) ' datatype='real' name='[Percent Change (Reb) (copy)_166633194489249817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ast Per Minute (NBA) (copy)_166633194469085198]-[Blocks Per Minute (C)   (copy)_166633194488737813])/[Blocks Per Minute (C)   (copy)_166633194488737813]*100' />
            </column>
            <column caption='Points Per Minute (NBA)' datatype='real' name='[Points Per Minute (C) (copy)_1054968220058722309]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([pts])/AVG([mp])' />
            </column>
            <column caption='Reb Per Minute (C)' datatype='real' name='[Points Per Minute (copy)_1054968220058288131]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_trb])/AVG([c_mp])' />
            </column>
            <column caption='Ast Per Minute (C) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058558468]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_ast])/AVG([c_mp])' />
            </column>
            <column caption='Reb Per Minute (NBA) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058873862]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([trb])/AVG([mp])' />
            </column>
            <column caption='Ast' datatype='real' name='[ast]' role='measure' type='quantitative' />
            <column caption='C 2P' datatype='real' name='[c_2p]' role='measure' type='quantitative' />
            <column caption='C 3P' datatype='real' name='[c_3p]' role='measure' type='quantitative' />
            <column caption='C 3Pa' datatype='real' name='[c_3pa]' role='measure' type='quantitative' />
            <column caption='C Ast' datatype='real' name='[c_ast]' role='measure' type='quantitative' />
            <column caption='C Ft' datatype='real' name='[c_ft]' role='measure' type='quantitative' />
            <column caption='C Mp' datatype='real' name='[c_mp]' role='measure' type='quantitative' />
            <column caption='C Pts' datatype='real' name='[c_pts]' role='measure' type='quantitative' />
            <column caption='C Trb' datatype='real' name='[c_trb]' role='measure' type='quantitative' />
            <column datatype='real' name='[college_ws_game]' role='measure' type='quantitative' />
            <column caption='Ft' datatype='real' name='[ft]' role='measure' type='quantitative' />
            <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
            <column caption='Mp' datatype='real' name='[mp]' role='measure' type='quantitative' />
            <column-instance column='[c_3pa]' derivation='None' name='[none:c_3pa:qk]' pivot='key' type='quantitative' />
            <column-instance column='[g]' derivation='None' name='[none:g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player_id]' derivation='None' name='[none:player_id:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[player_id]' role='dimension' type='nominal' />
            <column caption='Pts' datatype='real' name='[pts]' role='measure' type='quantitative' />
            <column-instance column='[c_mp]' derivation='Sum' name='[sum:c_mp:qk]' pivot='key' type='quantitative' />
            <column-instance column='[college_ws_game]' derivation='Sum' name='[sum:college_ws_game:qk]' pivot='key' type='quantitative' />
            <column caption='Trb' datatype='real' name='[trb]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1054968220053663744]' derivation='User' name='[usr:Calculation_1054968220053663744:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Points) (copy)_166633194292793345]' derivation='User' name='[usr:Percent Change (Points) (copy)_166633194292793345:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194295468034]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194488909847]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194488909847:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194489098264]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194489098264:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194489249817]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194489249817:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489249817:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489098264:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194488909847:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489249817:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489098264:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194488909847:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_3pa:qk]' included-values='in-range'>
            <min>1.0</min>
            <max>10.300000000000001</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]' included-values='in-range'>
            <min>50</min>
            <max>833</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:college_ws_game:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194488909847:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489098264:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489249817:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_3pa:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:college_ws_game:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194488909847:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489098264:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489249817:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' />
              <lod column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='165' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='5' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]</rows>
        <cols>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_mp:qk]</cols>
      </table>
      <simple-id uuid='{007857F8-B30A-4D6D-9F8D-FB91159470F5}' />
    </worksheet>
    <worksheet name='Scoring (PPG)'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='2P' datatype='real' name='[2p]' role='measure' type='quantitative' />
            <column caption='3P' datatype='real' name='[3p]' role='measure' type='quantitative' />
            <column caption='Ast Per Minute (NBA)' datatype='real' name='[Ast Per Minute (C)  (copy)_1054968220059107335]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ast])/AVG([mp])' />
            </column>
            <column caption='2p  Per Minute (NBA) ' datatype='real' name='[Ast Per Minute (NBA) (copy)_166633194469085198]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([2p])/AVG([mp])' />
            </column>
            <column caption='FT Per Minute (C) ' datatype='real' name='[Blocks Per Minute (C)   (copy)_166633194487799825]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_ft])/AVG([c_mp])' />
            </column>
            <column caption='3P Per Minute (C) ' datatype='real' name='[Blocks Per Minute (C)   (copy)_166633194488463379]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_3p])/AVG([c_mp])' />
            </column>
            <column caption='2P Per Minute (C) ' datatype='real' name='[Blocks Per Minute (C)   (copy)_166633194488737813]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_2p])/AVG([c_mp])' />
            </column>
            <column caption='FT Per Minute (NBA) ' datatype='real' name='[Blocks Per Minute (NBA)  (copy)_166633194487799826]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ft])/AVG([mp])' />
            </column>
            <column caption='3P Per Minute (NBA)' datatype='real' name='[Blocks Per Minute (NBA)  (copy)_166633194488463380]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([3p])/AVG([mp])' />
            </column>
            <column caption='Percent Change (Points)' datatype='real' name='[Calculation_1054968220053663744]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Points Per Minute (C) (copy)_1054968220058722309]-[Calculation_1054968220057976834])/[Calculation_1054968220057976834]*100' />
            </column>
            <column caption='Points Per Minute (C)' datatype='real' name='[Calculation_1054968220057976834]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_pts])/AVG([c_mp])' />
            </column>
            <column caption='Percent Change (Reb)' datatype='real' name='[Percent Change (Points) (copy)_166633194292793345]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Reb Per Minute (C) (copy)_1054968220058873862]-[Points Per Minute (copy)_1054968220058288131])/[Points Per Minute (copy)_1054968220058288131]*100' />
            </column>
            <column caption='AVG Percent Change (Points) ' datatype='real' name='[Percent Change (Points) (copy)_635007556118589444]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG((([pts]/[mp])-([c_pts]/[c_mp]))/([c_pts]/[c_mp]))' />
            </column>
            <column caption='Percent Change (Ast)' datatype='real' name='[Percent Change (Reb) (copy)_166633194295468034]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ast Per Minute (C)  (copy)_1054968220059107335]-[Reb Per Minute (C) (copy)_1054968220058558468])/[Reb Per Minute (C) (copy)_1054968220058558468]*100' />
            </column>
            <column caption='Percent Change (FT)' datatype='real' name='[Percent Change (Reb) (copy)_166633194488909847]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Blocks Per Minute (NBA)  (copy)_166633194487799826]-[Blocks Per Minute (C)   (copy)_166633194487799825])/[Blocks Per Minute (C)   (copy)_166633194487799825]*100' />
            </column>
            <column caption='Percent Change (3P)' datatype='real' name='[Percent Change (Reb) (copy)_166633194489098264]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Blocks Per Minute (NBA)  (copy)_166633194488463380]-[Blocks Per Minute (C)   (copy)_166633194488463379])/[Blocks Per Minute (C)   (copy)_166633194488463379]*100' />
            </column>
            <column caption='Percent Change (2P) ' datatype='real' name='[Percent Change (Reb) (copy)_166633194489249817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ast Per Minute (NBA) (copy)_166633194469085198]-[Blocks Per Minute (C)   (copy)_166633194488737813])/[Blocks Per Minute (C)   (copy)_166633194488737813]*100' />
            </column>
            <column caption='Points Per Minute (NBA)' datatype='real' name='[Points Per Minute (C) (copy)_1054968220058722309]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([pts])/AVG([mp])' />
            </column>
            <column caption='Reb Per Minute (C)' datatype='real' name='[Points Per Minute (copy)_1054968220058288131]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_trb])/AVG([c_mp])' />
            </column>
            <column caption='Ast Per Minute (C) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058558468]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_ast])/AVG([c_mp])' />
            </column>
            <column caption='Reb Per Minute (NBA) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058873862]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([trb])/AVG([mp])' />
            </column>
            <column caption='Ast' datatype='real' name='[ast]' role='measure' type='quantitative' />
            <column caption='C 2P' datatype='real' name='[c_2p]' role='measure' type='quantitative' />
            <column caption='C 3P' datatype='real' name='[c_3p]' role='measure' type='quantitative' />
            <column caption='C 3Pa' datatype='real' name='[c_3pa]' role='measure' type='quantitative' />
            <column caption='C Ast' datatype='real' name='[c_ast]' role='measure' type='quantitative' />
            <column caption='C Ft' datatype='real' name='[c_ft]' role='measure' type='quantitative' />
            <column caption='C Mp' datatype='real' name='[c_mp]' role='measure' type='quantitative' />
            <column caption='C Pts' datatype='real' name='[c_pts]' role='measure' type='quantitative' />
            <column caption='C Trb' datatype='real' name='[c_trb]' role='measure' type='quantitative' />
            <column datatype='real' name='[college_ws_game]' role='measure' type='quantitative' />
            <column caption='Ft' datatype='real' name='[ft]' role='measure' type='quantitative' />
            <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
            <column caption='Mp' datatype='real' name='[mp]' role='measure' type='quantitative' />
            <column-instance column='[c_3pa]' derivation='None' name='[none:c_3pa:qk]' pivot='key' type='quantitative' />
            <column-instance column='[g]' derivation='None' name='[none:g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player_id]' derivation='None' name='[none:player_id:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[player_id]' role='dimension' type='nominal' />
            <column caption='Pts' datatype='real' name='[pts]' role='measure' type='quantitative' />
            <column-instance column='[college_ws_game]' derivation='Sum' name='[sum:college_ws_game:qk]' pivot='key' type='quantitative' />
            <column caption='Trb' datatype='real' name='[trb]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1054968220053663744]' derivation='User' name='[usr:Calculation_1054968220053663744:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1054968220057976834]' derivation='User' name='[usr:Calculation_1054968220057976834:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Points) (copy)_166633194292793345]' derivation='User' name='[usr:Percent Change (Points) (copy)_166633194292793345:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Points) (copy)_635007556118589444]' derivation='User' name='[usr:Percent Change (Points) (copy)_635007556118589444:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194295468034]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194488909847]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194488909847:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194489098264]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194489098264:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194489249817]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194489249817:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489249817:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489098264:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194488909847:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_635007556118589444:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489249817:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489098264:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194488909847:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_3pa:qk]' included-values='in-range'>
            <min>1.0</min>
            <max>10.300000000000001</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]' included-values='in-range'>
            <min>50</min>
            <max>833</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:college_ws_game:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194488909847:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489098264:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489249817:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_3pa:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:college_ws_game:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194488909847:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489098264:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489249817:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
            <format attr='stroke-size' id='refline3' value='5' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' />
              <lod column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220057976834:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220057976834:qk]' z-order='1' />
            <reference-line axis-column='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-table' value-column='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='165' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='5' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]</rows>
        <cols>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220057976834:qk]</cols>
      </table>
      <simple-id uuid='{220C6C6C-116C-439F-90B0-3D54F681D2BE}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='Efg%' datatype='real' name='[efg%]' role='measure' type='quantitative' />
            <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
            <column caption='Ht' datatype='integer' name='[ht]' role='measure' type='quantitative' />
            <column-instance column='[g]' derivation='None' name='[none:g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player]' derivation='None' name='[none:player:nk]' pivot='key' type='nominal' />
            <column caption='Player' datatype='string' name='[player]' role='dimension' type='nominal' />
            <column caption='Pts' datatype='real' name='[pts]' role='measure' type='quantitative' />
            <column-instance column='[efg%]' derivation='Sum' name='[sum:efg%:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ht]' derivation='Sum' name='[sum:ht:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pts]' derivation='Sum' name='[sum:pts:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ws]' derivation='Sum' name='[sum:ws:qk]' pivot='key' type='quantitative' />
            <column caption='Ws' datatype='real' name='[ws]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]' included-values='in-range'>
            <min>50</min>
            <max>833</max>
          </filter>
          <filter class='categorical' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:player:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:player:nk]' />
              <groupfilter function='member' level='[none:player:nk]' member='&quot;Tony Mitchell&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:efg%:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:pts:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:efg%:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:pts:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:player:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:ws:qk]' />
              <tooltip column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:ht:qk]' />
              <text column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:player:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.9060773849487305' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:pts:qk]</rows>
        <cols>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:efg%:qk]</cols>
      </table>
      <simple-id uuid='{B5FAFCF4-FB84-4FFC-820A-6DA32F81E934}' />
    </worksheet>
    <worksheet name='WS Geo'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='WS Mag' datatype='real' name='[Calculation_788974368287076352]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='POWER([nba_ws_game], 3)' />
            </column>
            <column-instance column='[last_college_attended]' derivation='Attribute' name='[attr:last_college_attended:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_788974368287076352]' derivation='Avg' name='[avg:Calculation_788974368287076352:qk]' pivot='key' type='quantitative' />
            <column-instance column='[nba_ws_game]' derivation='Avg' name='[avg:nba_ws_game:qk]' pivot='key' type='quantitative' />
            <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Last College Attended' datatype='string' name='[last_college_attended]' role='dimension' semantic-role='' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[lon]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='real' name='[nba_ws_game]' role='measure' type='quantitative' />
            <column-instance column='[g]' derivation='None' name='[none:g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lat]' derivation='None' name='[none:lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lon]' derivation='None' name='[none:lon:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1699iq40rx5wde11ykfjy117zi51].[Exclusions (lat,lon)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:lat:qk]' />
                <groupfilter function='level-members' level='[none:lon:qk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:lat:qk]' member='36.987817874000029' />
                <groupfilter function='member' level='[none:lon:qk]' member='-86.453940892999981' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]' included-values='in-range'>
            <min>50</min>
            <max>833</max>
          </filter>
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[Exclusions (lat,lon)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1699iq40rx5wde11ykfjy117zi51].[none:lon:qk]' field-type='quantitative' max='-7300901.9279044857' min='-14457656.149377469' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1699iq40rx5wde11ykfjy117zi51].[none:lat:qk]' field-type='quantitative' max='7045361.5567841735' min='3000393.7106587929' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1699iq40rx5wde11ykfjy117zi51].[avg:nba_ws_game:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1699iq40rx5wde11ykfjy117zi51].[none:lon:qk]' value='false' />
            <format attr='break-on-special' field='[federated.1699iq40rx5wde11ykfjy117zi51].[none:lon:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1699iq40rx5wde11ykfjy117zi51].[none:lon:qk]' value='false' />
            <format attr='background-color' value='#f3ac71' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
            <format attr='enabled' id='parks' value='false' />
            <format attr='enabled' id='landcover_wood' value='false' />
            <format attr='enabled' id='landcover_scrub' value='false' />
            <format attr='enabled' id='landcover_grass' value='false' />
            <format attr='enabled' id='landcover_crop' value='false' />
            <format attr='enabled' id='Coastline' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[avg:nba_ws_game:qk]' />
              <size column='[federated.1699iq40rx5wde11ykfjy117zi51].[avg:Calculation_788974368287076352:qk]' />
              <tooltip column='[federated.1699iq40rx5wde11ykfjy117zi51].[attr:last_college_attended:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='4.798032283782959' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1699iq40rx5wde11ykfjy117zi51].[none:lat:qk]</rows>
        <cols>[federated.1699iq40rx5wde11ykfjy117zi51].[none:lon:qk]</cols>
      </table>
      <simple-id uuid='{65F73ABB-0481-42C7-8182-65000ED3A65B}' />
    </worksheet>
    <worksheet name='WS by School Bubble'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='WS Mag' datatype='real' name='[Calculation_788974368287076352]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='POWER([nba_ws_game], 3)' />
            </column>
            <column-instance column='[player]' derivation='Attribute' name='[attr:player:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_788974368287076352]' derivation='Avg' name='[avg:Calculation_788974368287076352:qk]' pivot='key' type='quantitative' />
            <column-instance column='[nba_ws_game]' derivation='Avg' name='[avg:nba_ws_game:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[blue_blood]' role='dimension' type='nominal' />
            <column-instance column='[last_college_full]' derivation='Count' name='[cnt:last_college_full:qk]' pivot='key' type='quantitative' />
            <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Last College Attended' datatype='string' name='[last_college_attended]' role='dimension' semantic-role='' type='nominal' />
            <column datatype='string' name='[last_college_full]' role='dimension' type='nominal' />
            <column datatype='real' name='[nba_ws_game]' role='measure' type='quantitative' />
            <column-instance column='[blue_blood]' derivation='None' name='[none:blue_blood:nk]' pivot='key' type='nominal' />
            <column-instance column='[g]' derivation='None' name='[none:g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[last_college_attended]' derivation='None' name='[none:last_college_attended:nk]' pivot='key' type='nominal' />
            <column caption='Player' datatype='string' name='[player]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[avg:Calculation_788974368287076352:qk]' included-values='in-range-or-null'>
            <min>2.2250738585072014e-308</min>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]' included-values='in-range'>
            <min>50</min>
            <max>833</max>
          </filter>
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[avg:Calculation_788974368287076352:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:blue_blood:nk]' />
              <size column='[federated.1699iq40rx5wde11ykfjy117zi51].[avg:Calculation_788974368287076352:qk]' />
              <tooltip column='[federated.1699iq40rx5wde11ykfjy117zi51].[avg:nba_ws_game:qk]' />
              <tooltip column='[federated.1699iq40rx5wde11ykfjy117zi51].[cnt:last_college_full:qk]' />
              <tooltip column='[federated.1699iq40rx5wde11ykfjy117zi51].[attr:player:nk]' />
              <text column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:last_college_attended:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{45F54A41-48C2-47A3-847D-52D22C6E9066}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='---&gt;'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones />
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='68' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='67' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{377639A4-8936-4ECF-BEE7-BB57D8A62921}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='---&gt; '>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones />
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='68' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='67' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5D6166B6-4948-4698-A9C3-05A9A159C207}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='2000' maxwidth='2000' minheight='2000' minwidth='2000' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='99200' id='7' param='horz' type-v2='layout-flow' w='99200' x='400' y='400'>
            <zone h='99200' id='5' type-v2='layout-basic' w='94800' x='400' y='400' />
            <zone fixed-size='88' h='99200' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='4400' x='95200' y='400'>
              <zone h='5300' id='8' name='Performance by Draft Round' pane-specification-id='2' param='[federated.1699iq40rx5wde11ykfjy117zi51].[none:round:nk]' type-v2='color' w='4400' x='95200' y='400'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='60250' id='3' name='Performance by Draft Round' w='93400' x='1650' y='1650' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='78' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='99200' id='77' param='vert' type-v2='layout-flow' w='99200' x='400' y='400'>
                <zone fixed-size='280' h='60250' id='3' is-fixed='true' name='Performance by Draft Round' w='93400' x='1650' y='1650'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5300' id='8' name='Performance by Draft Round' pane-specification-id='2' param='[federated.1699iq40rx5wde11ykfjy117zi51].[none:round:nk]' type-v2='color' w='4400' x='95200' y='400'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6898C17C-BAEF-4EBC-BE71-FF11FD1826CD}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 4'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='94750' id='3' name='Scoring (PPG)' show-title='false' w='79900' x='1400' y='875' />
        <zone h='12250' id='4' name='Scoring (PPG)' pane-specification-id='7' param='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' type-v2='color' w='16300' x='82300' y='875' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='28' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='27' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='94750' id='3' is-fixed='true' name='Scoring (PPG)' show-title='false' w='79900' x='1400' y='875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12250' id='4' name='Scoring (PPG)' pane-specification-id='7' param='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' type-v2='color' w='16300' x='82300' y='875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{23BC4271-5499-4AE8-8977-F16CF6FC7816}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 5'>
      <style />
      <size maxheight='1200' maxwidth='2000' minheight='1200' minwidth='2000' sizing-mode='fixed' />
      <zones />
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='26' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98666' id='25' param='vert' type-v2='layout-flow' w='99200' x='400' y='667' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{513B512B-3D1B-4484-87B7-809F8626FED4}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Average Points by Position'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C55B94E0-9B0D-4240-997C-A1F28717372F}' />
    </window>
    <window class='worksheet' name='Average Rebounds by Position '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{DF342C73-CAD1-4999-A575-38BDD02D041D}' />
    </window>
    <window class='worksheet' name='Average Assists by Position'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F158EA63-125A-487B-8C1B-B32FCEA00175}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:ws:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{A991C8B3-11EC-4EA2-9815-D7DE1920CA84}' />
    </window>
    <window class='worksheet' name='PER by Pick'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1EC5D8CD-8B71-4E6A-BF04-B89A36D20DF4}' />
    </window>
    <window class='worksheet' name='Performance by Position'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1699iq40rx5wde11ykfjy117zi51].[none:pos:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight field='[federated.1699iq40rx5wde11ykfjy117zi51].[none:pos:nk]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{A9A2B4F0-8908-46FE-AD15-4E75129DF9D6}' />
    </window>
    <window class='worksheet' name='Performance by Draft Round'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1699iq40rx5wde11ykfjy117zi51].[none:round:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{C62970A8-0EF9-47E7-B7B3-65D9DD3C6D7B}' />
    </window>
    <window class='worksheet' name='College Experience and Percent Change in Stats (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{7A09F587-3AE2-4AC7-BBCA-62536454C639}' />
    </window>
    <window class='worksheet' name='Corr WS'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_g:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{238EEF0B-74FE-4299-8452-AC6F4A7D9B18}' />
    </window>
    <window class='worksheet' maximized='true' name='Corr PER'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_g:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{266E663F-77F1-4CED-A2AA-0BB9870A3072}' />
    </window>
    <window class='worksheet' name='AVG % Change'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_g:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{483F9DA3-A717-4969-880D-299F2151C922}' />
    </window>
    <window class='worksheet' name='College WS and Percent Change'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight field='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{08BADE9D-5994-44AB-A238-B22C93A1B6EB}' />
    </window>
    <window class='worksheet' name='College PER and Percent Change (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight field='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{35A167BE-9242-461B-9FE2-91E9A9804765}' />
    </window>
    <window class='worksheet' name='SOS and Percent Change'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{BFAD651D-CB1A-44AC-B1AE-9D361DB44EB7}' />
    </window>
    <window class='worksheet' name='College PER and Percent Change (3)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{6A3CA0FA-39DE-45F0-9BB6-5E6837FDC91D}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Performance by Draft Round'>
          <zoom type='entire-view' />
          <highlight field='[federated.1699iq40rx5wde11ykfjy117zi51].[none:round:nk]'>
            <bucket-selection>
              <bucket>&quot;undrafted&quot;</bucket>
            </bucket-selection>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='6' />
      <simple-id uuid='{7A4C4EE7-19D8-42E5-A634-C838A97E2F05}' />
    </window>
    <window class='worksheet' name='Scoring (PPG)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='7' param='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' type='color' />
          </strip>
          <strip size='160'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight field='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{C9C72C99-4311-4D3D-AA1C-3AFAEA33959A}' />
    </window>
    <window class='worksheet' name='Scoring (3P)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{3970EF49-699C-4969-A2F9-E207CF6E4045}' />
    </window>
    <window class='worksheet' name='Scoring (MP)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{174A8AD7-EB0D-4388-B4FE-B51FE4D113C2}' />
    </window>
    <window class='dashboard' name='---&gt;'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{5B330403-C570-4404-92C5-C36B81976B9D}' />
    </window>
    <window class='worksheet' name='Rebounding (Reb)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{4ECE6375-CD1E-420D-8A94-235649DAB0F0}' />
    </window>
    <window class='dashboard' name='---&gt; '>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{B3CA7DBA-D1BD-46F9-9BD9-3B955AB27C02}' />
    </window>
    <window class='worksheet' name='Playmaking (AST)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{F0EC50F3-D7F7-4386-8A17-F4CD031320C0}' />
    </window>
    <window class='worksheet' name='Playmaking (Steals)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='7' param='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (ORB) (copy)_166633194500960289:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{F9F8F924-3AA0-4272-AFFE-DAC7F5A92620}' />
    </window>
    <window class='worksheet' name='Playmaking (Blocks)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='7' param='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Ast) (copy)_166633194469371920:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{07B3DF10-8FD0-4455-AC7E-B571774318BA}' />
    </window>
    <window class='worksheet' name='Playmaking (TO)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='7' param='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (Stl) (copy)_166633194504069155:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{01DC293D-7562-4C11-9B64-6F55D0E32503}' />
    </window>
    <window class='worksheet' name='Scoring (GP)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{1187461B-C811-4588-B25C-E79E27C403A0}' />
    </window>
    <window class='worksheet' name='WS Geo'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1699iq40rx5wde11ykfjy117zi51].[avg:Calculation_788974368287076352:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1699iq40rx5wde11ykfjy117zi51].[avg:nba_ws_game:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{16C40321-0F23-48B2-9464-D62AA2C012E4}' />
    </window>
    <window class='worksheet' name='PER Geo'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1699iq40rx5wde11ykfjy117zi51].[cnt:last_college_full:qk]' type='size' />
            <card pane-specification-id='1' param='[federated.1699iq40rx5wde11ykfjy117zi51].[avg:Calculation_788974368289239041:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{5FFFC8A1-9DF1-4C5A-82FC-F42494C5FA54}' />
    </window>
    <window class='worksheet' name='WS by School Bubble'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1699iq40rx5wde11ykfjy117zi51].[none:blue_blood:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F6998F9B-DBE0-4A41-ACC7-04780A936BDD}' />
    </window>
    <window class='worksheet' name='PER by School Bubble '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1699iq40rx5wde11ykfjy117zi51].[none:blue_blood:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D8C600B5-40B0-467E-8C7E-56396CE8EE63}' />
    </window>
    <window class='dashboard' name='Dashboard 4'>
      <viewpoints>
        <viewpoint name='Scoring (PPG)'>
          <zoom type='entire-view' />
          <highlight field='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]'>
            <bucket-selection>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489098264:qk]&quot;</bucket>
            </bucket-selection>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{12432900-95D9-4066-AFE2-F432F4DABB77}' />
    </window>
    <window class='dashboard' name='Dashboard 5'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{9899C6A3-EF29-403C-8C27-F5AE0A41ADCE}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='157' name='AVG % Change' width='64'>
      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
    </thumbnail>
    <thumbnail height='192' name='Average Assists by Position' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Average Points by Position' width='192'>
      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
      kKah+f90sbYxjW29wQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Average Rebounds by Position ' width='192'>
      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
      oqr5/y2yMUPT9cV8AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='College Experience and Percent Change in Stats (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='College PER and Percent Change (2)' width='192'>
      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
      EtcE0W7t4f8BIiuYp5CFT6wAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='College PER and Percent Change (3)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAASKUlEQVR4nO3daYwkZ33H8e9T1Xf3zPRcPbuzl9d72esLItbGB2AHgeN1nIVAHCBCIkFA
      wgteIJGIKLwgUl6QF1EQUhRFSJAoCkkIRwADWZAwwsb2OsY2sdlrZo85d3dm5+yeruqqep68
      6J3ZnZ3Zne6pme2Zrv/nlbu3/lXV7fpNHc+/q5QxxiBERFlhZxA2P8aYUPMIWz8/j6jXb4R1
      aER9LOxCtdZYVrgchZ1H2PogCLBtO7L1a3EQ0OjPsNr6mgLgOyX6+vvJtHUx51RoS8G0Y9h/
      +y601qG/wLDzWIv6MDZ7/fx3p5Rq2Do0qr6mANjJDLYKmJicIonPTKyDbNJgWRbGmNB/fZRS
      q55H2HoA3/eJxVa/M9zs9fMbT5i9aKM/w2rra/rElXIRbafZtb0XlcjQmY2hVbzuhQmx0dQU
      mWSmhQMH7gCgvT0PQNf6rZMQt0zoq0BCbGYSABFpEgARaRIAEWkSABFpEgARaTVdBp3vFVHK
      AqqjhgawQowcCrER1BSAwJ3jzTf+j969d3P8jTfYubWDWddw9537gbXpJdmszVTNUr8R1qER
      9bXtAawYudYMg2fOYnQF18TJpq82w0kv0Oaul16gFVjKYMXbuO+tu/BcB6U9ZitIL1CT1Ee5
      F6i2Zrh4it27d1X/O5UCUiQzdS9LiA1HrgKJSJMAiEiTAIhIkwCISJMAiEiTAIhIkwCISKsp
      ANp36e8/h1dxODcwjFOa5tLlqfVeNyHWXW2tEFgEzgRjMx2oisPguE/MaHR7a9O0Qvi+H9n6
      +e8uTDtCoz/Dautruy9QxcHzNeOjQ/ja0JqNU/SkFaJZ6qUVYgXJTAt33fe2umcuxEYnJ8Ei
      0iQAItIkACLSJAAi0iQAItIkACLSJAAi0iQAItLq6AU6i+e5DA5foFyc5qL0AokmUEcv0CTH
      +zRdaYtz4y5ppBeoWeqlF2gFfsXBCzSW0lycKNGaTzPryiOSmqVeeoFWkMy0cNe90gskmo+c
      BItIkwCISJMAiEiTAIhIkwCISJMAiEiTAIhIkwCISKspAEb7nDt7FseZ49zAMOXiFBfHJ9d7
      3YRYdzWNBGs/IJOyOHN2hHKpiG98YsagO9qkF6gJ6qUXaAXe3BT9QxN057OUtUfgVXA86QVq
      lnrpBVpBKt/Dg4d66p65EBudnASLSJMAiEiTAIhIkwCISJMAiEiTAIhIkwCISJMAiEir7a4Q
      7hx9Z89TKPRwaWKG7tYkM45m985t671+QqyrmgJgJ1LkW7KMXriIrRTTToy4MmitpReoCeql
      F2gF7sw4FyZL9HZ3cHl8HFtp6QVqonrpBVpBqq3AW9oKABR6pCdINA85CRaRJgEQkSYBEJEm
      ARCRJgEQkSYBEJEmARCRJgEQkVZTAHx3jhMnfkPR8enr6+PyxRHODAyv97oJse7q6AXKMXVp
      hImZEvFkkrhCeoGapF56gVYw3wu0tdBFJjGDjaHsIb1ATVIvvUAruLYXqKfQXfdChNio5CRY
      RJoEQESaBEBEmgRARJoEQESaBEBEmgRARJoEQERazfcFOt3fR0t+CxMXL9LSmcVxDHfu37Pe
      6yfEuqopAJZtk8110N6aAQrooEI2JfcFapZ66QVageeUKZZL2NOKudIcXZ155irSC9Qs9dIL
      tIJkLs/BA/lF73XUvSghNh45CRaRJgEQkSYBEJEmARCRJgEQkSYBEJEmARCRJgEQkVZHL9Bp
      4sk8xWKRjnyaoms4KL1AYpOroxeoE41me0eOMW2RS2npBWqSeukFWoHnlCmVS2ztKTA+VWRb
      W5oZV54R1iz10gu0gmQuz51XeoHy+XYAWutelBAbj5wEi0iTAIhIkwCISJMAiEiTAIhIkwCI
      SFv9hVchNjBjNJXXn8U7eQy7vYfkIx/Ayiy9eC8BEE3JO/kyztGvA4bg/Jvo2Qkyv/9ZlFKL
      pqspANpzOHVuhM5cguELk7R1ZCk7hoMHpBdIbEzB4AngantMMNIHfgXiyUXT1dYLFE/RlssQ
      6ApGe/jEyKXlvkDNUt+MvUBqy260MXDls8W6dxJgwXXLqLkbdHJygu7ubnJt7RRaMxSlF6hp
      6puxF8i+6xFUeRbvxDGs9h5Sj34IKx5fUqdMyD/fQRCEDoDWOlQAwtTDxvufd6vrmzEAtZLL
      oCLSJAAi0iQAItIkABFljCGYuIA/dBLjuY1enYbQsxMyEBZVlVeO4jz7DdABqms72af/AnL5
      lQubhC4XKf3b38geIIpMxcF98XugAwD02CDem883eK1urWDwOHr6kgQgkq4ZILr63uoHwTYj
      lc2DUrUFwBiD67oYo5mdLRJ4FcpONI8bm4FKpkncfxiuXPe3OrYSv+vhBq/VrWX37iX5wFO1
      DYRVe4FGyadg0lWk7QDH0xzYt5cgCEINoEB1ICbMPMLWhx3M26z1wdggpjSFteV2VDKzpFHs
      VqxDo+trOwm2bJT2cD1F+fIEfkc3yRBf1rWMMaH6eMLWR5ndvQO6dyz0UoUJwGZVWwCMob09
      T2tbntb2Ai3ZJI4PSimUUqH++s5vvKudR9h6aPweqNH18zbyZ/DPv4n78o/Askk+eITY1tvX
      ZPm1dYPGEhQKBQBSyQQAuUTdyxJiVfT0GKXv/D1UHKDa2pz7+Jew0rnQ85arQGLDCy6eX9j4
      AczcDHpidE3mLQNhouGM0Xiv/wzn1MtY+W5S7/ggVq594d+tws7qD1mujFirdAtWx5Y1WbYE
      QDScf/oVnJ/+M5ZS1QGq2Qmyf/A5lKoeoNj5Apkjn8E99gzKjpF86AhWumVNli0BEA3nD52q
      DsxduQoVXDhb/WufSC9ME7/9XuK331vXfI0x4M5BPImyl9/UJQCi4ezevQsbP4Bd2AWx5E0q
      VmYqDuUffxXv7K+xcu2kn/gEsd69S6aTk2DRcPH9h0g+9kfYvfuIH3yIzOFPoUJe1q28/jO8
      Ey+BW0ZfHqF89GuYK71P15I9gGg4ZVkkfus9xO5/Ys3mqWfGF702xalq85+1eLR42ZhNjQ1z
      sm+A+fYoYwyOU70M5TgOvucyV5ZeILFxxQ88ALH4Na/vB3vpj+KX3QMMDfXx3C8G2PWZj5IC
      jO9yfmiUPTsKvPLab9jW04HjGQ7s27Pwo/QwtNarHoafb4UIsw5Rr5///jfzZ7i+3urdS+bp
      z+P1/QqrvYfEwYeWbZtZNgCFwm3s3h+wsLNQNsZ3GRoaIaiUcX3DWrWNSB/PxtCMvUB27x7s
      3pvfvG1JAHQQ4LguRgdczZOhs7OT1nw723feBkbjBmbD9AI1updms9fP28yfYc16gdzSNIMj
      FwiMYv7vgRVL0N3dffNCITahJZFJt3aQjvucPX6WaP1GSETRkj/kpakxdKKT977vNsINRQix
      8S3ZAySzLdhekRefP4Zc6BTNbskewK94bN97N2+5/2Ga65qAEEstCUAq20Iq24hVEeLWk14g
      EWkSABFpNd8XqFx2MNpnanoGv+JSKjsrFwqxwdU0nmV8l4HhUXZs7WJ0YJBYLoX2DPvXoBdo
      vl56gRrbCxRWoz/DautrOwRSFkHFYWZ6ilg2h72G7TvN1n+yWUX1/0ONHQ2Knp4CyWSSeLJC
      S0sWP1i7+wJZliW9QNILtDF6gZZjxeJ0dnYCkLtyKxa5LVBz0bOTBBPD2F07sFraVy5oEtLT
      JggGjzP3nS9j3BIYQ+bJPyV+8GFUiHt1bhYSAIH70g8wTolg+BRmdoLZoVOk3/Mx0r/7Z00f
      AhkHEIDClIuY2YmFd7yTLxFcOte4VbpFJACC5NufQs33v9gxrK5tV/6l+a8MySGQwN5+gNyn
      v4Lzg3/AP/8mKhYnfueD2D27Gr1q606eFM/mfcr5WtXPDyApY64c9ijsnl0oq/bvtN51MG4Z
      57lvEYz0Edt5kNgDTxFLpVcuXKPlz5M9gFigbJvY1pv/iHytOL/4JpVf/QSAYLQfbVnE3vHB
      NZm3MQZ9aQBdLhLr3YNKpG44bU0B0IHHxfEputoyDFyYpJBPM+MYtm3pWpMVFtHjD59a9DoY
      Pr1m83af+xbui98Ho7EKO8n+4edv+CyBmgKgUPiex8Wxy7RahqHpEhkMWncsPF4njLDzWIt6
      3/cjWz//3YXtJ6pnHaze/fijZxdex3r3rcl3YJwSzss/wgTVeekL53B/8wLx+x5btq6mAAR+
      hdGRYXoK3QxPl2jPpyk51RYGY0zocwClVKhzgDD10Phj8EbXz2/4YVoR6l0H+11PY8UTV88B
      Dj2xJt+Btm2UZS26t6hl2zect5wE0/gNsNH1jQjAetY7v/wu7vPfAaOxt9xO9uk/v3qZ9zpy
      EiyaTvLBI8T3H8I4Reye3aj4jTvXJACi6SilsBcG825ORoJFpEkARKRJAESkSQBEpEkARKRJ
      AETTMsag52YwvnfDaeq6DOqUZhi6OEmhI8usY9i2pXvlIiEawLhl5p75x2p7d6aNzOFPENtx
      x5Lp6grA9NQkMxOTqLgifmUEVnqBNn99I3qB1ru+8qufUjn1v9UXbpm5o18n89G/hutGu+sb
      CFMK2zIY36foSS9Qs9Q3WysEgDc3vfjzlGexLVDXLaOuJfb07qSnd+eqV1KIWyV+59up/Ppn
      4FWqrw8+VPtjUoXY7GK9e8l95At4/a9htfcQ339o2bvfyVUg0ZSM1vjn38TvexW/71XM3Myy
      08keQKyJYLQfr/9VrLYuEne/86YdmLeCd/wFnGf/vbpuF86g52bJPv05lApzEizEMvyRPsr/
      +SVUUL3eHoz2k37ikw294W4w0rfotb50DnwP4osf/SiHQCI07/QrGO/qIxW9vleh0tjnR9g7
      7uDa+xrZvXshtnSvJHsAEZrVtnhA1Mq2QWzpFZe1YgKPYKwP4znYnbuwMh1LpokfOIR578fw
      Th7Dbu8h+cgHlt0jyU8i2XjXsG91fdhxAONXKP3P19D9r6KyedKP/wmx7fvrmketn8EYg3f6
      5+jp4eobVpzEwcfR8azcF0g0hoolSD3+cWztgR1H2eu4WXkOeubC1dfaQ08NQ3d9gZtXV+SD
      SpnTZ84zMznO0OjYqhYompdKpNd344fqodV1x/Iqufw9f2qaXT0TDw0OEPgxJmbLWGjpBWqS
      +lvdC2RmxvHfeA4si9g970Rl83XVWzsPEQy+An4F1XEbpmXrqr+DugLQls8zOzRKJd5K4Esv
      ULPU38peIF0uUvzm32Kmq0cQ/qlj5D76RbBufO+eJTp2YPK9YDRYMZRSt+beoPnOHvKdPXUv
      RDQv43sEw6cItMHeeceKh0DBSN/Cxg+gx4cJLg1Az+66llu9cW/4h3fISbBYNRN4zH33y3j9
      rxFcHsFK50i89d2kH/0wVr6wbI3V0lFtSZ4/3LLjWLk84R/UujoSALFqwUg//pnXMbOX0RfP
      YZSiYtmY0jTZD//VotsTzrO6d5B69MO4Lz0DlkXq4fejWrsgCBamMb6HP3QSZdnY2/bddK9i
      tMY78SLecB9m993E9ry1rhFoCYBYvSt9NaZcvOY9RTA+DJ6DiSUx5VlUpmXhWQNKKZJv+x0S
      9/02qOol1GsZ32Pu23+Hf+4NAOJ3PFB9VtkNnlXgvvxD3J//R/Uk+LWfkj78SRJ3PVLT6geT
      g9IKIVbP7t1D/M4HUdk2UAqVL6CSGewtu9HFSYr/8gVm/+mzlP71i+jpxZfNVTyxZOMH8IdO
      Lmz8AN6Jl9DjwzdcB+/4C1dfGIN3/MUl05jARxenMNdc5dLlabz+52UPIFZPWTbpJz9F8oEn
      cftfxwyewGrrJvnw+yn/5OvosUEAggtncZ7/NpnDn6ppnte9s+RnjNey2groSwNXX1937hGM
      DTH3va+gp8ewu3eSed9nsFo6MOUpMIEEQISjLBu7sItExzZiD/7ewvumNL1oOlOcvr50Wfa2
      fcQP3I938higSNz3GFZH7w2nTz/2EebKs5hLA8S27yf50PsW/bvz7DfQl0eAapeq+8v/Jv34
      H6OynWDFJABifSTueRfl0X4wBpRF/J531lSn7Bjppz6Nd8+7sewYqR17lz2Znmflu8l+6C8J
      3DnsVGah39/oAPfYD3Ff+B7Gd7F7bkPFk+jSVLUumSO+71EJgFgf8XvfhWrrIhg9Q2z7fuzt
      B2qqM8bwzf/6FkePHsWyLI4cOcLhw4dvemVHWRbEU1c3fqNxX/w+5R9/FWIxzMQIQeATu+0e
      EtcE0W7t4f8BIiuYp5CFT6wAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='College WS and Percent Change' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='191' name='Corr PER' width='64'>
      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
    </thumbnail>
    <thumbnail height='191' name='Corr WS' width='64'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9ybNl13Xm99vd6W73uuwAggApUZREq2SVBo5wODzzoP5LDzzx0BE1qLAd
      UXZFlCWVCJISQYEdCIJIZP+a25x2dx7sc+9r8mUmQCQIMvFWRAL5Xt7m3HP32nutb33rWyLG
      GLmxG/uGmvy6L+DGbuzrtBsHuLFvtN04wI19o+3GAW7sG203DnBj32i7cYAb+0bbjQPc2Dfa
      bhzgxr7RduMAN/aNthsHuLFvtL3SAYZ6yfvvv8/vHjx9wSMCP/7nf2Ddutd8acl+9+n9F/yL
      41/ef5+PPnnwwufWp495/6c/v/y75THvv/8+nz05+ULX8envXnQdN/anbK90gJNPPqB8+wcc
      //pHPKo9H/3i3zjbdKyWS54+/JTf/Ns/86NfHQOBn3/wr6yanuVqyfHjz3j69IxPPvmIh0+e
      8tOf/gwf4bPf/ppfffwphIEH9+/z4a8+BuDBJx/x6cOnNOsTPvzlx7v3/9UvPuCDD39FGBpO
      1x2u27BqLbDh5AymouYff/why+WKzz79lGaz5Mc//gmdDfwf//E/omXkf//f/ld+/NMPAfjk
      g3/l7R/8ez7+8T+zDnD/t7/ms8cnuHZNPQROT08Z6iX379/n4/uPgMhvfvEz3v/Jz76K+39j
      X7N9rhDo5z/9Mc/qwIOfv485+BY/+eE/8ZMf/n+c9ZLvvnWb977/A371k3/i9nvf44f/+F/5
      6Y/+gWcbz9Nf/hQ/u8U//Jf/zHePJP/tl0/o+p5/+S//iYdnJ/zwgwd0D+7z6e/+jQdtweHe
      lH/4bz/m7rTnJz9/CMDgBd8+lLz/4X3e/6d/5Cc/fB+p9e7a7nz7e/Rnj/mH//qf8brEDh3B
      dfyf//f/y51vvcff/uCvePfPvsff/c1fjc/w/OP/83+xzuYMn/6MJ7bi0S9/zGef/pJPTgZ+
      8pMfcfLJBzxoc+5//Av+7Uf/SHb0bQ73Jq/95t/Y12+fywH+8m/+jv/lP/wHqtjxr//yE6LK
      yKo533vv7QuPOieVqmLG9//s24Dh4GDO/uEhk7Ig+A0ffXLC99+7RTfArVu3yLXBA0IKAB5/
      9gm//OSYaZUubVJNsINFZyV7peDJIJkasXuvJ/c/ojy4y2z/Dt++d8T7P/pX/uL7f0mu1e4x
      wVkG57dXx//wP/3PuPVTBhd3ly2Vou86jo9PgXRtRmu6fiAziqZpv9idvbE/CROvokMP9RJr
      ZkwyCUR+/fOfUe6/xaxQzBcLcC2nLexPc37+sw94+7t/SXAti/mCerkiX8xZn56yPytY9oqz
      Rx+jiykHt24x9B4dLPlizpNPPiLkC/ZLwa8+ecQPfvDXGCX43W9+QUvJ97/7bR7/8n0eZe/x
      t+8dknKAf2F6dI8/e/ctlssVi8WcZnXCJ4+WvHXnkBA8+/v7uL7mw48+42/++i+ol6eY2T7K
      1py20J09RFYHvHVrjw9/9gHTw7vcmef4fIGtl8znMz782Qcsbr3NW3cO/zDfyo39weyVDvDH
      ZB9//DHf+c53vu7LuLE3yP6kHODGbux1200d4Ma+0aZf9YCmafDev+ph11oIgaZpKIri93r+
      jd3YV22vdICqql7xCM8vfvEx3//+n7M8fsxvPzvhcL/EkfHeO28hpWQ2m72my72xG3u99hpC
      IMV8njDydWt593BKJxRN03z5l76xG/uK7ZUnwCstWE6ePUNrzXw+47PHJ9xeFCy9ePVzb+zG
      vmb7ylGg9Xp9EwLd2B+t3aBAN/aNthsHuLFvtN04wI19o+3GAW7sG203DnBj32i7cYAb+0bb
      jQPc2DfaXoMDeH7609Qu+OTB7/jRD3/Crz76Jf/6s5+/4nk3dmNfv335SjCKo6MDAAYXuXO4
      YIVgVkVCCIQQcO6raZi/zk7rDc+Wp8zLKQiJ1hIp3oyqtPOB4Hoerpb89+/9+dd9OV+J+RD4
      4ce/5u/f+TZKa4R8DUv0JfZaqBCb1YqnWnPr7ls8Oz7hu4uKVReQUiKlROuv9kNcNCklt/YP
      OChLIOLRXCx2a5Wu6U/FYoxY5wneogTobJ+HmzW2rSmmc8Qb4tyQPuuD01PuTCecdpY7iwJC
      YiILbRDi9X9vX35lSsP3vv/93Y9v37sDwK1XkUi/YpM6I8aAcgNCGYRUxBjxPuD8+YmklET9
      ETqE9wEXAiJGFB6Tmd1uGIUgMzld21CU1RvjBA/OzrhbFTzEo5RgcJE8yxBA8DZtZEKk7/M1
      feY/3Nb8NZgQEmEKghuI3iF1hr7QLB8j+OAZ7AWHkBKlvh6H2O72EVBSYIQHAVJf7qeoTEYr
      BKUQdF1LUZR/8k7weLXmIM/RRkHTsJhMabsWREFuNFJnAMQYiG4gAkKpLx0i/fFtfV+BSZ0h
      dEZwPfHC7i8EaKXIjCYzGmM0ERis2/3xPnzl1xdCoLcO6zxGKzIFMliEMkidX36sG8gltH2D
      0IZMSfqu50+5s/Wkrqm0Js8yELAaBnKtGZwn0/rSBiWERJocaXKIEGyfvtff8/N/IxwAQAiB
      NAWRSLDX3zBByhG2DpGZtLtcdAjn/WtZbDGCdZ5+cPgQyY3GaEUcv0xpiudi3hiSMwq53RED
      0TkyLej74U/SCdZdhxCCSkkggNT87uyUVd8xqSqatsFodckJtiaURpocoTKit8kZvP1C7/9G
      h0DXmVSGKGNaaFIhlXnp45W6HBL5ELDuvEVUSoGS8nOHICFG3BjmGKUwOj0vOAsxIHT+wteK
      fkCa83BImhwhFX7oMFLQD4I8e33x8VdtrbW01nFU5AiliN7yrGm4NZlw1raUxtC1yRGUlLsT
      8qoJIRDbECl4gu3T75VGyOcff9G+cQ4A4w0zBdE7gu1euuiumpKXk+ZwxSGEEGj1vEM47/Eh
      IoXAaLX79xgC0W8T9Rc7Y3D97ksG0FLivEcrjVQZSNC2ox/4k3AC5z2ndcO9xZxoLUIIooBV
      3zHPCyqTcTSZ8NAHPjs54e7+HiIyfuYXL2oh1W7RB2+J1r00cX7jQqBI2mU/jwmlkTonuiHt
      wL+HSXk5ZNruVIN19IOj7Qb6wSGE2IU5QghiHEOx4FK485KdKgYHyEsh0TTLWQ/jTmcM0UdU
      MUWHjq5r/6jDoRgjj1Zr7i3mBGsRxhCCow8pwQfIlGLwjnvzOUZKVl3PWd/hQ/jceZlUZgyR
      DNEP6X77y6HUG+cAAvA+XtqVX/4EMYYSkmA7YvxySe82JBpfmjzTCJFgzWFMdIN3RNcjtNmh
      Gy+yGOOIYF0+HZSUO0cXQiCUghBR+YRMCYauIYbfT83jq7QIPFguubeYQwjp2oWAEHi02XBv
      NseFwCzPWffJwU2eM5OSg6piYwee1ht8+PzfkxACqcfEWYyJs+2JMbyZIZDRKQQZrNslsq+y
      7dEZXE9EvHJhXrWrEObF981Gh9ju+g4BQoMLCBHQSr047nc94goSdJ1JrfF9j8pzhNIYCV3f
      k2v5hUK8r9oer1YcTabJgfsemafP5uO5M2yGntP2XIt1vyx5ujzjVp5zWE3wIfB4vabKMvbK
      8gu9v5Cpupw2Fvt6ToCHn93HR/BDy/2HT9gsT/jtpy/W7f9DmB6T1/4a9OBlJnWOkBpvu8+1
      g4ZwvrMbrciNvjZGDW4gugFpcrIs34VMWimc95eQpu3OHrxNX9hLFu/FUEcaQ7B2TOxTEWkI
      CVn6oujIV2HHdc00z8mNTqHPyBAI3vJgU3N3OqN3Di0ludZ01jF4NyJ4GWEYgHT63ZvPUQie
      1pvdSfFFLJ0K2Zc/AWL7jI6C+/cfIl3Ng8+ecLw/587tt74WLpAPnhjZvacEmrb73CfBzoTG
      2QEBcA1S5EOqKkuZkl7gegGxGHdJLkLBNY8RpHBpa0M/JCfwFmlyVHRcdIHtPc2lYt11VOb8
      +qJzBCEASbQ9WmV0DoyOeFsjVHb5zf5AthkGog8UucI5R3QOYQw4h3cDrXVoIThpGzIhyaSk
      UIrHqxX3ZnPmWcaz9ZrDC5tLaTTKCkKMPFoumeY5xRek3XxpBxAq5+Txb7h9+4j5wS2endTc
      vXXI7+7f5+6tg6+BC6SIxEvvqbWiH8OhL0SM03pXeRTKEIU8hzC1Js9evjNHN6Qco/hiswW0
      1gmdKqbASIK7uNOP93SqNcdNfemzRqUIw4DKc9CKYHvKIqe3jjyviH4Lt2Z/sLCotZbBe27P
      kzpIGAZEUeze/6RecTSdobXGB8b/Rw6nU5YnxwQBmTbIPEOGgMzOw1Mp0wl6d1Gk0KnrmBcF
      +edcc19+ZWYz/v7f/+3ux7/7+/T3O7fvfemX/n1MAIP1hBCR48wBIQRFZugHi9bqC3F/hJB4
      afBDWjjZ56AdRO+Iwf3esXfY8pfG55pL9I0x14jx2tfeJsTR+0QV0DnR9eQmH3OidFp83jrI
      lzV7Ae6EsZi3TXyB4B3LwfLd2R6DcxitkCLlUIN1HFUTnmw2vDWbsyhKlnXNnjm/N1IKFAl5
      m2Y50yxn2XWs+o79skS/DF3z7s1DgQAyoxLacgUpyDMzkuFejSDEGBOUaR0CQV4UZEWZFo6/
      PqSLMRBsBzBWcr/44t/mHS+CRYUQKCVfinJJrQnOwegkQmVEN+wWFYjd9QXb7SrMr9tCjDwe
      4c7dgrcWeSFkO2lqFuUEJSXHdcPBKMUphUBKQWUMhTY8qWuMlDglifZyPpMKkeDGe7IoCo6q
      Ceu+51ldPweLB2/T9yTeQBgUEtSWZxrnw3NwWWb0bhe9zry/zMvJjd5Vgrd0CmCETM9vbCLc
      2ZREq9/3YB2RiVcgUFu0xIeQCmLXLOBtQgwgpNxVWpMTbH+vEz0kuFQ9fY21gy3ceXd+YfE7
      d2m8VYyRwTvykeqg1eXeDa0UPqRrujWZ8KyumWZ5yieuXKtWigi7GoEQgv2y4qCqOG0aTpqG
      4IYUWgo51l70mweDRsC5sOOO9L1FXMDmt+Z9quBmWiGkwPuwgzDzVyTMQmmQasdKhIhQGeJL
      0qqDHS5Ve19mRiv6wTLN8vG4v8w/F1ISSSGHkHKE/iwEjzGafrBkxiDEljoeU7VZqpSwf0l7
      vFpxazLdAQQJDPA72BPgtKmRQjLLCqz3u5D1omVaQ5cKYPOioB4GvICptYjs8r3acoaEYNfz
      IYVgPzf44DnueozS7Jnz0/WNcwBBqgNsUZ/MaKzzO+bnzkw6Mpt+wIx5gQBCiAzh5aiVEAIp
      GEOMC2/8JSx6B/JytfcljwbSF341Qb5o0hj8NiEmVUaD7RG7GNuSZ2b3mS7TQ7LfuwHleNyp
      L24kwdpLyWuMEecGtM6xztF6x6JImP56GHhW10ghWBQFB5MJTzdr7sxTkWzZtXTCUZrn6Q2Z
      0fSDIzPiPOFXGUZn3Mpg8J6n9YZCG2Z5/uY5wHVmdMoJnPPo8e/bJHJaFVjrLvFzXmXeDUTn
      icqcRw19R0S8cPfchi1SnP99azHGHSXiVRa8J47hm5QSfHgx7UGIXT6wDT2kyXf8p+1JsHUC
      GAlkSo8FQRLP6AvkMquuQyCYFuc7/Y7FeuF1zroOIyVKKrRWODugpSTGyLLrmOc5WimWXUcI
      gbOuo8oyZkWBC57jruMtrVFXTgFixMhA13YURfXcqZwpxa3JlNZanqxW3wwHgMTq7HrLYB1F
      bpAXkszM6M8Fk24hUan086GK0cTgid5eGw7FGAkxEkIkXKFb7Kq91xTtpNw6zkiec+mk2CaT
      mdHY5iWokFKEvgeldgs5IUMdUhfXOgGkgmCMYQyL9OfKa1pr6Qa7gzu3FqzdnUJbc94RY2Si
      L9/zZdfhgue0bdkvS/bHSq/Rim6w9D4l8Sdty4HJqMZTII71FmJE6IyiNPTWUWTPn2IxRrIY
      OaqqN98BnE+QqBBQ5iaRqULk4vo8h0kdWl/XIhkJLlUhX7ZLn9MpBmLgUjIrhECJ52GH4C0i
      uz5xjjHuHMf6QLCWk2HgYV3z3cOwW/TzsmTd9czL669NZtmlEEQIATonuB5pXuwE2466zxMW
      XYU7d5/PucRTumDLrmWqJaedxGjFZhiYjQ7yYLXk9iTVTc66jsWI6c+ynMF5ZiYjzwz7ZcmP
      H3zGO0OPVIJKG6pycmkT2IZDeXYh8fY+nYhGA/ENRYEilyDMzGiM1iNVOeHM1zVY5Jl+Dibd
      IiTXdWe9yKTOUhjxCjpFjCERwl6wuwohUtFLKaSA06Hj9nzGQVnypOt2KE+VZdTXICMXXwch
      LsGdQkiEMgQ3jBTt5ATXPn9sPInOElzPxZnQcA53XkR8dp/R+0vID6Q4fNP3HE3Tgu2dGzvA
      HL33VCbj1nRKjJF139E7d6kmMliHFPDubMIwtByWFRF4tjrl6fqMk/USN3TgBhSOvmsSB6tZ
      jzWWMSyLb2ASHEmV05fF9EpJEFxLltsmzdY5VHQg1eeKza/aeT+y3fUjX42lEzfo1a/dOcty
      s+HuYi85sZRUWca661lojZCSzCgG6y/tdhdNGrMjy+2uUSqIkeATfyg5gXvBayTWbKp1nIdF
      McYR7pw9h+Jcxfwh8f1nWcbp0CeE54LdXy25M53y6bOn+KHjIDectA0rb5llOYbAMLQIb7FO
      cTCZ8kwqntYNd/b2mY6v40NIuQNpEHouRCpiltPn1sRrOAECv/rwZ2w6x2Z5wi8/+i2nzx5/
      bWS4LQr0qoRWSYlWkn54/iRQBIS3OPSXrpRKba7tR95We19lq76jaVpuzxeXPtOiLOkFdN05
      EUwpgXvJQMNdgeyCCaUTRBkSDJng1RejYFsMHVIt5NFqxdFk8hwBMMaY4vEr4WTvHN4OlCPi
      01pLaTQnbYMSEoPEB8eTNp26+9MFQmVsfCBXivUwkFULoiqRyqCkZp4XnDT1+X0YqdOHZcX+
      ePKfOcfTzYaztr2Emn15MtzmMeW9v+D06SNKI6gfP8KZbzETX48w1lUy3KtMikjT9WRaQQxE
      79KiUAZipO36a9vwvrAJnRzADQmTDx6BhJdAridtSyElsyxLBb0xhNne00Wes2ya3WLbNYu8
      pKAVreWashlx6EfCnkCKz/e5T9qBUkR0cDh35XTbNrpc+B5qO5AhOWtr7iz2cc6x6lpmWU4M
      gU3fkWWGeV6mMG+95qAsKfC0zrH0msEn0qGS0HYDU2PYDD3aB86aBL9CCr1iCEhjKJSiMAbr
      AxA53qzHIE68BjJcecDpz/6N23ffxuQGvdhjT/qvTRhLXUOGe+VzdGRoG7LMIIvLBaWo4y5U
      +vLksRQy+G6FzqoXxv4hRp7WGw6qCunccwjK9p5qoA+e6AOVyWicY68oUoHvBcW8qFRCZa7C
      h1oTbItQxUi3CFgfXlgUXHUdWmr2ptWFts6Ra+890ZjnY/+uY57lDN7svh8lFRs7MM1zSm1Q
      WuGIaKWYZ5pN37KoZgjj8SHQdS19CEyyhLSFEIkjELDyjiEE8hiTqtyVU0lr6AfH4XSGHJGj
      L78yVc7f/LtzMtzfLBYAvPWlX/gPY9E7CI68KOmdJ78CJ54XjRzmi7JJr3s/N6CKOQR/bT9y
      7xzLruX2ZHpOGd4+N0bCMBAvhDmLYtwpiSytQ5QjTcKHa/WNtjWIbYX40r/pIkGypkBKiYHE
      Ir3iBI0d6AbLrVmKulOluRh7cDtiEM85bTMMaCGxfqAaNxnrPeu+4529PZ6sNmgRyLMJXf+Y
      VX1GUBmNj6ihZ5rltDFwWFV8tlry7t4+udaE4JmYjDoGphFO2wY9naFe0DecZ9sqeNrQ3jgU
      6POyWVJ3VpeKPaZASEk+1gOuoilCJLUFa/0XasV77j29S4tFiGv7kTd9Tz0M3J7Othe5W6Qx
      BMIwILNsLJydX8d+VbHsOuSY2KcK8UtygQs8oaufU+hsp6ogpcRcaSoavOOsabk1uyahVAZQ
      IM5h462t+55pntNay2Q8fZ7VNQdVRQywsT1GKTZtSyEERTbjsKx4e1qyajc8ODum73us81TG
      sO57+pE9qqKgaVqElBzNF5y2zUv7wrPd9/yGkuHcNc3PF23bnSV0jrwQhmwb14drnAAuwqRf
      vNd2W+29lPhe6Ec+Xp0SY9ixIS8udj8M+LZNO/e4cC/G1kYpVJZhh35syneYK4JSV+26hDhd
      ktzVMmAMt5RMImEh8GS94c5sdm04uK1bqCw1+W+76lpr0SK9zhYJizFS2yHh+94jYmqKz4JH
      ioh0HcPQo3TOu4e3qcqKSV7Q9h0nmzXe9ayaNW3XokXEmIxepQLh7cmUJ5vNS2HhfKSCvHEO
      IACkobcWN1xWR4jbsEOqtPBewKfPMpNaE8PzNzCxSfn8Tffb935Bb2+MkadNw7SaMdGS4AZ8
      n5iZ4cLC15MJMsuQ2djIckWga68ssUBnhx1TFLj2MwBjE/31NAqhdKobjJvIVi7y05NT7s5m
      L+yniBdgTyEVyhTEGDhdL9mvSs6aDXtVKnI9q2sWRcFZ0/Jos+K07di0Ld4PrH1A5iVKaoau
      xQ1dojcPA7fnC75/6x5Pmg7nI58uT1kNLTMjWW7Wo5hu5Ghkj77IhEiI1xvnAJD6gYuiJEpD
      39YE70YJEv9KCRJITpRnBuuuD3m2TRsv22EvWvD2Wl0a6z1PNhsO8wITAgRB9IHoemRm0m6a
      589h6UIpkDLRIi7YW3t7PF0tU5M96Uu2L0HDxAtCIRgFxKLfFfKebjbcns1e6FDR+0uNLlvr
      AxR5SXADZ82GVd/z2WrJo80KO1gKLZDeooXgO7OKg1yz0IpVvcaHtLN7FN72HOWGZ/UGFQMH
      WYE0hj+/fY/GR572AxsXqGPAtw3SW6ZacLxZvfAkkFK+eYWwi2a0Rokc2zcIqTH5F1MQyLMx
      jIg8l1AqlZowEvPwJaoOMYyMRLP9BcF76r6nc45bZTmKvI59xX2PKqf4rkEag3iBUK9QKoVD
      F5wjUxovJX3XkRdFahAR4uWKalLuuseumtSJOHfctExMRpUnOPa6AmJwLoVsweO9YzMMuBB4
      utlwNKk4cZFSShbC44LjVlFwOJkgpORZ03B3tkemFMTUrB6CQwRP8Iku4YJACdhXluN2zbQs
      AJm6xeYLTpqGw/0Jvzs5ZS/PEDEBBLmwrJp1olpEQICQZne/31gH2PXySk1ezYkhMHQNUhuM
      +fySJ+ddVM87QRLFEjuk5Nq42A0gNH4YdozppbUorbg1udwrHMaSf3QOXU3Pq66jvPul99Ya
      NyJCFxfvXlVx2rbcyXO0VkTnsc5fq1a3fR3f9y9ETdYuImzHpJgnYhwgY6TvBoxS+BhYNU2q
      LfQpf1BSMy0qBue5u2fYLyuerVcc7e8lEtsk59l6jdaG43oNUnG7KsCNlBOlOdg7ZLU6oWJK
      LkDFiAsRXUzYy0s2bY0PnpkpeFpvuD2dpYaZImOal2QCNtaOSJNFm4LJDkBwRGffTCoEJJ3N
      6JKiwpaoL6QkLyd4O9C1NSYrP7cM+pYeEa+R5buYOBujkSTKMiEkPrrUSCOROtUAnjU1szyn
      uCJ0FWPc6eRs8fMdnWKU+LvayL4luV1cvEpIyumE082ag9l8t/O3vaUqMiAlqin+H4tmIuC7
      eoz92UFpjbX0g+VovpfEZ1XGZuh3rFY/OApjmBUTsuIypSOEyLLbcG8+9gJHTzdyfpad5XC+
      R3A9T5Zn7BclKh2zO76VUZqgMkQccJ1HGU2W57gQUUJS5CVPNmtuTTNC2/B0veTWbMGzesOz
      tuFOXjDPU63goKpGwV1NoTWLonyNdYA/Mku68WZc/M+bMhlSG2zfYp0iM9m1nUhXbdtTcDWc
      iGOnkyEytF2iWGQGZGJ+bhmhLgSO65qjyeS5JDLGiG8aVFFcH4pcEPTlgh6+1BrXja2ZMS3o
      iRKs+5bgPX3XjDAh+Ojp2wQbbhtvhDzPS8IwjFNY0s/1MHB/XXM4mXDajypqg2VeTXfX733A
      9j2meP5et8NAOWqUttZiZOL27+UFK5fCyqb33F9v+B/vTZLaRvRINapghEChDNb3ZFmWUKWu
      Q5clbqRFlCZjZS3zyYzQNDxbnXJQTfik7+kBOQzookAKwXv7BzzerJlmeYJJvUP54c1zALH7
      z0seIwRZURG8xfYt6Cy1Rr6iyGW0wjnP0A/oCw8VWiO0psjAWoePERnsjjPTWks99NyePo+d
      xxDwXZfQnZeJvl7o2IrBj6xMEErg2xqZ5wgh04wD5znaW/Do7JS7e/sAFAbqtkdL89zJ1zlL
      42xKHo3Bh8hZ2/BnR0eY8ZpijEnS0TtsUDv6RYiRtrfnrY+kBXzWthxNpwzWcbZZJ4x+MiPE
      SJ4ZpBA8qVfcnU4p83TKEdPmoUSkb1omVclxE8hiJIqYrq1pMJMJ1nkOy4rfnp1QaMO8qjhr
      BKvB8a1pxcenp9wupyyy896M25MpjzdrbmUKlCHo6WtwAN/z0w9+zr13/xxpVzx4eMpsvyKS
      8d47f9z1YKkMWZEw72HwCKmeY5Fud/gtD0cCSIkfYbSrZoxOupwqQ5K47wBHk+lzj43eE8YY
      /irS80IbcfodNVtluKa5lrS3V004q2v2xlyjKjKerTagxK7PIEbItWZi8nS6CMGjdsO3ZnvE
      K+2hQkhEtIniMuoPZZMKP+7YZhQc8CFQ5hn5+HPvLUeTPUIIeBEptKazA2dDz71Joj2nxv0c
      39fYtsYcHKSNRmmEjFgfyTTIPMc1DaaqcN4zG2VQDqqK/UnF8WZDFw37kyk2eFbrJfN5YtES
      A/sqcjw4bs8WCOdehzLcCfvv/jXt+jG5Cgy2R4oZ67r5WshwzvuRCnulSikESqRmFyVSk7zc
      dloJjRKO4Hs6ryEE1Ni6SIw72PHS5w6BtnPPOUEMDikVIUY+Oz1lXhaU2jx3D6JLst2EgND6
      hfcoOrdrfNmG595a7DAQSapo3geGutmdIH0/0EpNay2PVkvWfZ9ylwhGSkwU5FmWkKxLN0nx
      6PSUo+mMTF+XH0WQOqkrRImQcnfdMUa6fiCEyNr2HFQVzjmWfYcUAh0FUqYml7zTcLwAACAA
      SURBVJnOWXY1vXXs53n6HNahVEFf19QBzjY1i0VGbh2nNjBTEi9Ip7tSDOs1sizJpEQJyZN1
      asJfFAXHdYNWqT21GXpYLylkuocqnzLxjqenp+xPJq+BDDe9Q/vhh9x++9t4Z6kmSYawKMTX
      Q4ZTkoNJxdHsvDNpu9v5mBiqPkaGEPAxNZRHNyatAqJv0vEoJFJIlBLgrqc/pESw350aSgiE
      tyhTcNrWHE6mSEjErIvXMgwoY8Zik0ca89xJAyRc/QLpa1eBVorgA8roJPxkDOvVEidG0Ssl
      ORk6DsqKv5q+xZPlGXdGjhawa3xRUl3Kf57VNYvJlFKr54hsFy0qhW/WqPxyRbgfHEIGtFaY
      8fmnpzXv7R8QSXBmaBocHhfhoCoxQiC1QsSMYDvqEJN4l5Icr864c3ibs7MTsrzCC4mRo+KF
      Kgl9z/5kwtPNhsNywknbcmc2485izuP1msFZvrW3x4PHDzB7+wl4iI4iRmJZ0nj/OnIAyff+
      6ge7nw4ODr78S35J2+rzX2cSgQgBFSJCSKIAkZ/jwsCoJhDxIh3hSr141vB2B9ZK4mxHGyWr
      9ZpFXrDp+zRRZr1Jw/likjoXWoMPBGdR4+JPm6vayZnA6CwhOa2UkkwrlJB03rGJnrDpkEYj
      hKTQmnlRpufHyEnbUI5h1SwvWLYti7G/9mLTz5YUtuxaFIJpWRCtfWGPMaSKryqnBNehTLm7
      VoC17VmM9ZZV11EpiQ+QZ4p2sBTG0A4dzTBwUJZjA74leo9FEYQkl4LZ7ADbnHL/yUMO9w85
      blvmekBMFol5KjUyy/BtiyTJX85iztN6w63JlDuzGb958oizlePewW0eNw2iVBjrQAmKGFkN
      9s1LgpNdkCcfC0+EsFtY0jxPlb1k5rImqAvpC35Rl1mIkaHr8FKikXz38PDyv3tP13YYQFXj
      ggkBmS2eY2RuERBgFN69kISOp5gWikVeospqxxkCdijJ1WusioKnyzN8nu/GOW0n2fTW4WJg
      sH7XoiiuyKlctPM5ZRIpcoLtkSZnsB5jFNKmMLO3jkebFe9UEzKjCTEl1kZJZibnad1QAkKm
      8CeojOVmzcF0xqPNKk3IrPY4iEuWmw3rvmNvf4++WZOXkyQ+oFOeZZzD2uRczntO24a5CLy7
      mPPzZ6dUWeBQCJ6uNxwuFhTjprMQ7ZtJhZAE2rrFD0OS4RYCmWWo8c9LF/9o286nGDwKt4NB
      ryPKiRhZ2w4fBIssyXhf/BOtpShyQpYTR8QoUYjT7XfuXB5dwCXp9PPrSXlLphSZkim/ijHV
      ArZFtpGMds2H4XA649l6vfvV9vMIKTjdJEnCneOIpC96HVnuYptj6itW2KFDKcFp2yQ9TiU5
      bRsqqTGjaoO1DqRABMdx2zHJM6q8TMW+EOmjoMwygk+aQDaAkZBN5iyM4mi2xydnSwa7lTUU
      I6FRMy0K1m1LdI5KRly9Yj14hMp45/CAT5dnRG24vdhj1XV0zqZ7lpk3zwEicNx2yMzgSLvZ
      51nwLzKpM4Q0RNdjlEDr1HvrXOo4csPAw9NnzE3B3Gi6IXVCySxLo4tigu+k1js2qe0HvFS7
      RS/HgRrZBRnGaz9bjCNRLqBiwHZJmU5m2W7HDqNWvhLyEo9JjmrSq747/52UPFmtubc3x14h
      10mdGlsudpcF75EX5FUAEEm+UJKIdUpK1n1PbjSZiESRPqdSknXXMTEZjeuphEAYjW9rgi7Y
      1CuqsmLVNNydTDhdnqVe6uhQImKCY14UrAfLsreJHm57XLNK1+YcoW+I3nJ0eIcBSRc8EyGZ
      TSqOnSU6x15Rst7UDKTayRvnAJCYkcu+ZTMM1N3wQnrz5zUh05QV33fErsGQWifXTcuTzYq7
      +4fkZYnKMopRijxc4O8LpXZiu8E5HKM2zbjopXz11xC9P389mejPeZHRt90o82FSJ9a4aKcX
      RgxtrSpL+lFmMG67zsoK+YJeiG2leXcNzu2GWmxtcJ48LzhtGvbyHB8CvXN0g+NoOh2RwMiT
      esPdqqD3AS0VRhl81xCVoQmBvSLdX5RKCF6WQ0zKFdlkTi4jIUr2J4kn9fjsDIRCiIjvl2TK
      0QePynJ813JUFZyuNnilyLRmv6o47tIpMStKNn1D799AB0ihAMxNQZkbGj/gvKcb7G6Sy6uc
      ITXL2MthjHOookLmJYhAHwNWBG5Np1gXdyxJIUQaXt32YMwubNrycTIlqcoCJeXnZ5M6Rwwh
      jT+62K0mJUVZYEPcPQZSmKKlxF8R4BJSclBWHDc1jzdr9suSqsiw9nyI30UnuCincp3Cg/dh
      Bw4EqZDRc9zULPICKVKr4lbNet11ZEKxGTrwjnmRg9K4CK6t0VnJutkwLSq8EEzyktO6JgwO
      33cok3Nk4Fln2T+8wzQreNYN9CSB36kxNBGiC0nrtW24O5/wZHnKVAk27YZFrjldn4FrmeuM
      +k3sB4Akjy6lQHi4NZnSeEdtk/7NVlo8LUo3isK65xa7UGrHv5dZlpiZI3ty6QIheBYKTFaM
      StTpNd0wYAeLygxdb1EXBm9vG8UhwbVbVYqX+WMYEr//RYWybbeaQ6ZqsFLYlzSDSGPoux4C
      lGNvgVZjPnCB13Tx8cHa5xQeYkywrNEjxaEo2XioZEJ/FpnGhVQsXPYdE5lqFrXzTLUh2g4X
      JGs7sJ8ZbNvidIYUkk3fc7xec9IPICVSZQglkcZQ6kjTDWhjmEsYhp6ll+hqP7WZun4kE04Q
      SN7aO+BR3YE0ZCpjUpXUzuGjYGHe0BwgxJRIaq1ou4GjyYRpkfOk3tB2PToGdAxI7xm6HusD
      Tshd7C6NeQ6dgfSlP9lsqEzG1GhUVhFstxuNFAbL4CNCpwU/KXP8KNEexvDhEplt1PPpR9jx
      6nv5vk/PeUUOk5o7kmOrokAVBb6uCdY+p/2/6jsmWY4U7CQalRqby0foc6sUd+FinisEWpdU
      pgFsSM5jg8foAu97RExiWzYE6qFPDmJ7qvGIDiqjHzoqoQhC0QZHpSXLdmBeFLxzdEhRFPxu
      uaQPkcFFAoKFjPSuTSxZnVGWc2ZS8ni9QkiNVRqhJMEOICLR9tybTKjrhtOuoTIKrTKslJy1
      b+iAjFXfcdzUiYYQPOt1jQmRu2VJ6yzP+j6hQnlOXhbkeXYJ5bkuZ7De86TecDSZYEQkILE+
      4tAEOyBtR14VVGUSde0HhxvVGbwPeOdSAnnFLu662zDqcrz/+b4iOQ7w3jpB8J4qz2n6Dj/S
      pjdDj3OevemUwzznuG52z98KawEXlOJcoluPCfH2nvhxvKkUYhSyTbo8M5MnZqqQSNL8tLO2
      JRdQGE2QmqZpmJQVQhlaN5DHQFCGzlt0lMhc87CuebBekSmF0oZN39KFgIhpOHhfrzHVnMGn
      XosgJEcmQyvD47ZDaAMibSIyK4h9y53K8Hi1RJiKSVawbFo63lAHmCnFvjYcFAVWCRoCDzY1
      gxAczWYsypLPzs7o3UWeyzkSc9UZ6mFg1XcclhXWOuyQaM6Z0RgpUFKhijIdvzF98Wk+sEjV
      Ue9SvPuCyTS7pnvvE8f/mngfRkZpU3PW99TD85MRt006PiR4NI/Q+YDKMjpr2WwaFlliv0qt
      KWUKN7bXkIS1zmsQRkv6bkBqfSkhdhcYsYN3dC7NKdgW1KZao7OCVbNhmmcQI5139O2GxXyB
      RHBc1+wJgSgKmr5DxYiqUjX3qCwptOZoNqV1Y+4WPM/qM4LMOJhOqds1eV7SNXXabJRhr6rI
      kDypa7xUgMA1a2SeYbTmW7MZv3nymOUwMDWaSfYapkQyrHn/g4+49613Ed0Znz48Yf/WjLYN
      /Lsf/OWXfvkvagIYAliRRm0utGZRpITt6XqDMn3SnS9LzpoWreRlDJxzZ4gxclw3O9KVcwEj
      HHKcExasTY3tYyFKXZkzrJREErFRjrT7gIsxVYWvMRMDNk3p2O1MIQbO2o4QI1pK9suKvTxH
      CsmzukaI1Pmktx1OYzyPUsgQCN7hnONsGDiaz1GC1JwjBKXWnNiBKssSX0eloRtqVKTGe0xu
      LukiDYPd0RzWfUepDYN3FDJtHEPt2K8KkIrOWTLnmOUZtfXkQhCERGiF3Gwgz+iHQDP03J1N
      edikMarPTo9ZqDQA8LuHh5wsTymDoyvnPO1alHeoMDA3GVmek2WGznqc95R5gYkh6RYhmAhB
      GFpUMaOUBfX6IcXQcrsoUFq9BjKc7zm48y1s35ErSSYjTmTMqq9JGc4HMq3wzrEeLGV+njwe
      TkqazlIVhiEEhIhsuo4nmzXvLPZ2IzYTUgTHbc1+VVEUW7Uxiw2C0A1EZ8nylEReLhglhTnX
      1UiVpUbx0UGcD/TOY5x8zgnCMCCNQUmBc57jzQbG4tdiPA1CiHRdn5JPIdjLcyKwbJOTZkoz
      y3MEYENEWIuPkYcnJxzNFwgiPpL6iWNMkGCIPFmvOBqb1ZUUdOPQkHNdoqQUp5XEDQNSCkKA
      pu8JERZ5gZKCZd2QK4UPgdPNmkU55enJE45mC1yzwuqSKZGT9YZDo3ZN/FqmnMCHOjE0heDx
      MjXSny6f4YVBqJy9LGMvz1m3LZ88WbOxT3n39j26riXLK6z3FEqxso65UDTtiocxcFjtIQbL
      Wbvh7fmUddNQK00ZXsOkeFEeUXCfw9sH+CjpvObe0fzrU4YbC0lVWdAPjsEFiuwca5+qlBiX
      RcZkLPXXXc/D9RoXA/tFwV5Vcda1vLW3t2v+iMETUWiZhjzL6SRJr4+pgh4b5XdmDK6tUVm2
      I5ZpDXkW6QaL9YkyvIUYTVmy6jusD0gB+5NJatkbB2mHCEopqsyMOek5ke1QJ6p17xxnY0iz
      KAp8jCzXa751cEgmQF6dSG8Mchio+p6275mOJ2FEEJ1FXxhl6mWgGyxVWRBjpA0+JaVFkXop
      ELTecbvKcUJhQgTvyLKcs80Sk+V4kZQo9osSGQb8ENh4x1vzCZ/WNbcmE07OlkyznEJLXN8i
      VWKL9hGU9WRGsSgK/vY7f8bvHn3KJ8dPMKZkEWF/OmNwHt8FslySzxdUfc/TdkM3DHxr/4BM
      S6JUCX7lNZwAAPfe/tbu7+99+20AblUvevQfzrZN7b31aBV3o5CqIqMee1qlFBileHd/nxAD
      Dzdrnh0/4850xlnXMs8LjJSJeyJNqgeMjrMNBbaQoNs6g1KIGMap8/KStr4QgjLPcM6z3jRY
      7whGIVqX3qtIRbM05TLSuoGquNwKuZ1yc1XFOdeafGy9XPUdjzdrZIAheKqyPJ8ffMFUljGJ
      kRNrqeyWJSrpI5gL7xlGLpSLIEf15UKbHcV8sH5HuT7rOo6qirpZY4j0SmF9QElLLCq0dwx2
      wJspE92zHhxGyqRHGgObrsHNZpwOnnfmGX1ds7EDSueEmKEzg4yR+eKIW92a3mjO+pbWB3Kj
      EEPLRqa5AjIvMMPAwdEt6q4jy+co4dEictb3b2YSfBG/yYxGydQAsi2GOR/ITEpKtzQEoxW1
      tUxNxrt7+0Qie0VJYweers84bjq6K3OutiZG1GT7Oj4E+q7HIYjIJCvu7bkC3NBz2mxog0Vp
      w0zn7BUljHMNtm2XRW6oiuy5Cm2SPOGF6mdpYgrcmcx453CfR2dnHDcNVopEpbj6eKU4KApO
      bKJph77HjPE+nAteZSbRumvvabuOiTYjeuQYomeaZeOwi4xhGGiGHqk0lcqIUrPsW/bzgqHr
      sMLgcEwVrJ1joRSny1NynaGM4fZ0zu39fR41G/JJxYPVEgDbJ25VdI7KZJyhyJ3jdlGQhY5h
      syavJny6qnnaO9Y+cO/oDmVwHEymnKxXlHlBLyR3pm/ohBjvz6dEhpA6lFIlVqUpkHlqyTNK
      0fYD0cCy76gyQz6iNVWVcdzUFFKyrzNUXlA7t0s8C212En8XTQiBigFdFiASquJ8pHORzjWI
      4KlUxtF0hhhhy36w+JAQnG274MXX2zXda70Le4xWiYZwjXjtpu8JIbAoS0SMHBYFM22wIbK2
      A7Lv2Z/Ndu+zVYYotWHTtkzG3uS+63F9j4uQ5+mzaq14dLrhTjlBXZBcWbcDk1yzjlBJTbAN
      BE8fNdiAFZG394/ol6dE4TGmZHA9SxcoTMnGBrTQ1N6Sa0PrIoVIE+KnMfLfvfNtfv3sKbey
      nN4KFrog9E3qn1BAu2FiCoYy46yuMXmGURrnkjTLNM/JbM9RWbJsW067jmqx92Y6wEXwUGtJ
      MbYLDtalHtZu2NGBhRT87uSE29MZuUrit9k4heSorFhvlpxIzaEQTPOc6RhCtNbulMcypVLy
      KcQlunDv3I6PUxrDvqrw1hJFZBjlyKUUVEU+cvPNTsjqIvV6C5MO1qHi+e8EPMfb76yltZb9
      stzlL0IKZIxkSjGdznDOcbJagdaUJjmyNIbKe542DZOxbyAv8iQdP84kE1LSeM8kyzAmww4D
      Os9HQSw4aVoOpvPUrdbXyGKKbTYorRmGgcLnNNYRtcIJlZLWvCIiiXGgyjOCEminmFQ57abm
      oCyph4EZgokx5Foh+5bT6NEmI6+mbGzLRAn6rifPA5O8wPYDrbXsZQUSQd0NrKInuIY9U/Le
      YsFvzo7fPAeIpC/8OnnwbSNIohlHWmtpneM7R0cpPBrcORszBDbLNflkRi4ETzcbyixjMcp/
      lMbsGk4G7zlpG2JMs36lyWAYyLVO4k8kPo8d0mxbJQQiBrzr8SpDaDEKttrdjj44jxSX8wwV
      PM7FHR5v9OWpMHZsBz0oq0tU6jLLGYIn13rcsTUHk0nC54m7U20aIkfzOcdNw9FksnOuKBNq
      Fb3ns5MTvr3Yp8gNTRMgeJa2Z2KylBj7AN2adYi4rma/qPht0zCRhk3v0UWJVtC6lkwJhgC3
      ZhW/On7K0XzGNDc8Xp1xtl6zN5nQtw3WW4QT3J1NWQ6WvckMYx2ZNjjX80lr6ZVAEli3DYv5
      IfdMztPNhja2KK3Zrya4ENBFyVmzIixrhuENzAEEvFTC3OiUZG76HhsCiyxHjAP0gFErJqJF
      YDqfw3hS3Jqm9sbPzs5o+mFXJBusI/hAjIktaUZMHcB6R28tXZvQnawsyMc8QRtDVlQYkTrD
      rPMIoO2TKG1udEpGe8vQdTs4NS8LHGLX5yDEebPMcVOzlxfP9SlPypLWJaU1IVIhS+rUAF8I
      ydFkwn5esImB4/WawXsaaxmspxglGmOMPG5Sg32eG7qmpTCS4D3D0HO2PmWeZwzNmkDEyRxr
      A63UCDewKCcYIlIGvDbU9YqJ0hgZODk9Zl4UeAF5NWfZ9ZzWS3764D6frlcok/Np06ORSV7F
      2TTiqtkQo+JuOSE3GU4qkBl1fUYvAkWZc3t/n3lV8Wh5Rtu1WGs5LEsOphNm5g2dE7yt4r6o
      g2s1dGghmZtUrBqcR0uZdrW6IWpNpiRCaXLFbtD2rCiY5jknbYPwIwsyRpQUzLM89RGPsiLb
      hpWz1RphNEopZioV57aWuq9yhHdJOdokOnFCqCQyBIySBJlhfUDHiBoT7mFsL9xWrU+6hkVW
      kGXPk+ZSUpxkAqSUOJ8mySidIN3oPdE5DmdzgnMMwfPJ2Sl7RcGBmqQYv+tYdR3f2T/EOYsx
      AiECzvYs1zVHswntEFHRYao56yePeWex4NPVKfPcIIcepVJj/IO25dZkRhvhYLbgo/v32ZvN
      MErw8OQZhVa8vX9rnI4J67amHiw/f/KUzBgOqpz7TcM0K1G2Jip40NR8Z/8A2w/IaOk3a565
      wOP1mnlRMK9KrA+0Q8fUaVpnOTSvCQb9Y7LI2NPLWNAC9KhuvJ28sl9WZGPF1I9TUKx12G6g
      qiq6dsMgit2wjJ0ekHXUbiBGdg31B1V6Ldd1YAyRNKNMiTSJZXqwv3OITd9z1jREUhJdmZQD
      qHG8ahwnNpYShv+fu/dakizJriyXssuNOgmWpEhWAQ1pPEDm5+cfZlpGMCCFriySPCKcGL1c
      2TyouWdmV6EbaOR0tYS+hEiIuLmZy1VTPefsvbZzqCzDxURxexKsOedAPKXAJ9XpQ9exLAqK
      zPyrSKRnoK61mCxL7rOn1xnHZ8Gd1BozeT5Zrumcpbczs525a89c5WUyoSAx2hCAFsGyysmD
      Iw5HlJHs2zOl1kwBqszggkRG0GWBDYFoj9TLBccoaQ+PaVMSWSrJd5NlWab0HOVnVJ4hYsn1
      csn90MM08tj2ZCZD+0BeFfjo+Wy1pS4qdJ4x2YgOAy91yd4HGpNxnieGaWD2niMzj+2JTV58
      eBtAkCTKMjqc9widXwrfieM48mq1fL6iPNPephklQJUF0zSQFxWzCyk8W2vOc7rCECO1ySjL
      1BGJMXLftgTv2Vb184kTXBKRPfXctRKgJNsf1CWDtZzmiRADCkmTZUR3AenKRLBLQc8JZOV9
      eG57ep8YPGM/MnpLnWcY+d8PBlRKJUeXEM8tzQT2FUnpGeNzaoyLEYNDRw/O430kVxmzc9x3
      HVdNxRPn4jD0/HK7ZTq3qEyB0LR9S6MNQ0xduEYmuUhwM9/0Ez9b1AwRam14OJ0ojSTaEVtu
      ydXI4zwgpEDrMjnxmoqxH1llillWeDGxzAt+t3+gmHperDZUZcnD8cjLzQZhe4SpCa4jWEFe
      VYjgWa9X7EbLN6cDrxYN5/4nIcMFPv/Nb3j1878ijge++OodNy+uGOf4FwNjOe9RJk85d27i
      MEzYKLhtmkRM5vvgBxUDDvBSoUkPhvWB0Tv6eUYIuKprVkX6U4UQ6Mf5malzXdfYaeIwjyxl
      SRZC0rD/mRbpD9dTER1jZBpHTmOPUBotZTKLuBllFJN1SCee259CfD8rGAn42bNsmmeX17+2
      CRZ5wfkCyYo2FeNZphm7nrzIITjc0OGIBB8IQlBqw/u+JVeadVnQ5CUCwRwd3ZwaCKuqJswz
      OjMIPzPrjG6eKLOcaC2ZlORCYXLDQ9tT60tt4yGbLa2dKbOMV8sFv3vcQYz84/t3vD13vFit
      +Hi5oDQzlRBEJ7BEtlXJYRr51XbDrp8xWvPQdZy9ozidqTJzCfkz5HLm/e4RaRQhKtZliZsL
      tnlGtv0JaoAfpkR+/PFHrE89c9/hRfEX0wJJAeOUWp2tdWip2KpkonbIi64mMPUzUml0pvHe
      c2rPeJUIwqU2bMvy8v79c6EL6c7vL0gRP00oY9gaw+F8JkjJtq7/rKH8R+uixYmANobNpaPk
      Y+SxbYkICAPLzBAxhCC+1+trye7c4QlUQj0be7z/8xj0p2WJuEv4hg+W4C1htnR2RF8MP372
      FE2SVgRrkdJw3w98dnWdwL8xkAtFmWseu0fWWcb7tk3A36xkGM6ARGqDsxPOelSm6Iae3TTz
      y1XB5CN+9jzMyTcgpaIbLd8edlwvF/xys+HF6opaKvZtxzE6osxZ5zmjD3w1tGwyzavVK0xW
      8HhuuVksuGlqvj4e6J1lmkaMyQhuAKm5zddEKXm7e+D1omK0EsJPnBI5zRN5tUKFnvf77i+q
      BSryjPftmVonrr2Skhg82lsQEjs7dJ7ag4euJ/qZOq9Y5vnzQ+R8YJwuCeyX1uoTAzN9c8+X
      4VTqk1+t1/gY2fU9izx/bpP+cMUYE9dfCGRR/NhgTsKAb6rmuYg+TSPetfgAV4sFRZYRgNE7
      bhcLcq3w3qOzjGGa8fH7OUgKyggJB+5dumZ4m0w2USFETrVeEQFrU6FfFalOUHnOfZfsjXMI
      2BhZXIZh02wZvKPJMjZKwGLNGCyP48z704Gr5RqNJAjwShPzgsfTnlVWEJzj5AMrqXgfInnd
      kCn4l/2ev3v9it/s99zUDT/bbPli98BNUTEDpRE8jpZ+GnixaPAR3h9PKGMYneX9uWVTVfgI
      RVWyrEq69oTIck7zTIwOO3qMkrQTjHh81/30KZG31zmw4ur2P/zK/9PLhsDdhRkvL9NK510S
      bUnDMPZ0ziGCojA52yKDmEbw1ib/8FMKTF3mz2aVcHkQnjaIkWmTSB+eCclapKvWeRp56Gau
      ngRmF5/xs73x8n/uz3iUlUqQWwEUl65O8JZ923IaRwbv+fVywTy75OmdZ4RRFBqcm9FGEbxl
      HG0S60mdcopVQblonrs+4snmSVKBzhcDT8wy2q5DaU03DbxeLDnNI03MnpsCv7975JeLBmcn
      8tIgZ8NVJfnyEHE+cudO2NHxq+stu6Gjqio2RZ4w6IcDc1bTznO6rkyWUkp0UeLdPQ/zxC+v
      LIssQ+cFS53x7rgji56Ptle8HQYe+4HbsuJNs0AJyZcP93RuxgjFw7llWxaXuiripeO704GT
      h4UQTEawLqv0hfa/8Ln8X7IiCe392c3m+f+SbMDxdn9I7cyq4qZeJCJxSBSFoLPkgCJFLIUQ
      EReDyNMUNkkPUuEsLzZAoySelND+w+HTIi+os8B911IKQaEN8Snk4lKHPBnG/y3Rq1IZtss1
      dhq4k4JcRqQRtOczZa6Z+h6p03QVQKiMvK5+hGIPo+A8zYm2HAJKesxFIerDpRt2Me+3zrEy
      GSOCTAq2VcV+6FnlJfddSyUk82USPHQ9WbOmnzqWRc0nqyXvj3toSr4+tQQZWGUaFRz7YaQq
      V/R2wgP9+URRNfxse8W/3N3xplkyTy135zNvVhv+cDyQr3Qy3ERPPw38Yr2hKUs+f7jnceh4
      s93yd2/e8LbruKpq9n1HrSJDkBzcgJ0cJwIvtaDIV3gBg0+zhA9yELa+TGudT5SCh66j73te
      rZa8WK0wIgnWEJcuUEhJLlWR0ZT5s+jriXrwFBOaG814sQnO05yM81o/nwj2Ilpz3jPPlnmY
      WCqDF5KHafqRQf5JOPfvyR0WQmDyEq0NKI0Qafo7zA4XQGUFdd0gdEaWZX+SQ7DIc2z0GCnI
      ixx5CfvrhilBd0NKUn9/blnkBftpYpXlzJMl+ES+aOcJGQKNBnSGDg5dNmgFv9vt+asXL0BE
      tLwgG1UCE3g7sZsmdmPyE3x1OpIZw5urLXaesd5zaFs+WjQ8TjNaG3bnJAwc2AAAIABJREFU
      IyXw++++Y5kXVHlO5wP/9PYtwgXeLFb84uoGZs/nhz3nvufhfMBOPW+7icFBYwp+fn1NZi2Z
      ynB+QGuFshY3DR/mCXAYUuGjpWRTlGmK+uT6ihEh0j02ekdZpKjUBKdNPX6pM8oiSzXAbJPW
      XyaFpVGS86llsV4y+YCK8ZnqEEJkGiZyebl/l0lPXwDLy6S20CblVf17P1eMSVg39ng74+YZ
      kxcsdMY4WYyR2GmmKIs0lY5/Ul58//mlTCeA0eD9s783RjgOI252WJEI17kxJFpp5Lpp+M27
      t2y1ommWyOCYZk9dFzwe92TKJLHc3R1SF0BkVZUMdmSb58xojBF8cdgxTBObpiYiQQp+t9vx
      0WLB3flMqQzCR35/PvOr5RoZI1/cf8eqKHndrAilY9+PGBFpp4HXVU09C45+5ptj4gXdVDVX
      RYkPkXYeuWoatDJUWuODQy0WnMcPFI1YSM3CZKyyDC7hbe6iEH1SL5a5ocw0LjxNekXS7+vs
      El49oaR4Hi6FEJmmmbkfqBYN3TAxThbrAkanXAEjIqWWBKn+lAAhBDd1g5KCu7b9NwVuh0sg
      3WxdOl2mjrws0VmOulyntFLIC2bRXbJ8jVF/kg75tIHmacYJeTn5kjCwyEw6kYzCE3ixXnKe
      J16slqAkNkSmcWLXdlwrxckHCCmxRuUV8zzx1eHIR9st0zgSkMwxIJ1D4clNhpSKLx8f2eQZ
      JsK6WVJJyT/c3YH1RClY1w0eyRAC+3liVZT84XTg1y9vEXnFzWqb4BTRsyoysqzktw/3vOvO
      TN6zqVf8H68/5uPNFSfr+P1hx9nPtPPEi6JgmCd0UVEaRZkpXm42H94JILjoerynnS62xYsA
      7oco8AR1Lci4PNyzQyuJlAIvdALU2h6EJEpNsI7SKERW4UjF8WQd3nvO55nMaPIiKUJljP9q
      cF5lMkpt2A09WkpWxffJlU8P6Q/BVEYrYnCEeUIV9fcTW2OeDS5PRIeiKhj6kbIq/myOsSSS
      G43WEqEL5nGiLPNUB0mdjOpFav0WuSFcfBO6yPFSsH+4p2kqRD8zB48KEa003+4eyI2hMRm2
      PaLzgsPQ8XGR0QbFUgW+2resqoquG9jNM5+9fME0dFxJlSgONvDV7oFNteSh76jzkquyIhYF
      v3nYsS1K/unxgZd1w3myRDsQveez9YovDns+WS5BaQ5tn4K3ieADD6cju+7Me5Mm5cXYokyB
      2z+g9AeoBYrAPE4sliV5kXT0VZn/6K4d3IxQWerxXygITwMmHyJlYTDaACbFfg49USW5RFFX
      ZFwoyQ4mH4gyYb3nSytRXVCDs/UYLf8EfSiE4KqqL+27M4ss/5Gp/WmjJt/ulKJDzY/zw4QQ
      CKWZximBbENgshERI8PF9+xD/NFcwE8Ty6rmPKVJaowRbQx+mmiDR5HcXcdxYFNVKPF9Auau
      79gUGQfr+XS75f3xgVeba07DiBASrSVDPzB6z+Bt8gSYnKEfGNxIkRWUUnHnRlZlxePhgA2B
      2+WaL9oThYCqWdLPSRb92WbLaRr5+XrD+2F8Rrp008jP1ksES8Kcwsetc1RZjh17VkWD1Jrb
      uuabvmVlJH91dc3Jeu66A98eT3y8zVmVKfXyw7sCReh8GukbrajLnG6Ynq8S0zSl49+H5wfk
      qSgti4y6zBLA1vqLX9ehquZClSOxNS+cHVPkLBY1ZW7w3jNeDOORyHwR0NmL8Oz57V3sjrN1
      yCjYlhWjTxqjxAm9PPzepXR5aRJn5zJLcRfQ1mwdntSxMlJQ5EkykRd5klqH73GN8D3VWSuF
      e8r6zRJPFCk59wOLIk+bTiT91JMZp+16RPRk9QI3O4SUrDLNfTfQzRNGawwS7ETvPa211Mbw
      XdsTvWNjCgY744Ug15LJzVwViWzRe89kLVLCTV5icsM2L+hCcpl9/viIJHLbNNw2JcdpYpgD
      EZnw8FPHy+WaUz9iVMFhOINwKOGptebYDXip2C5qfnXzilfrNafTni/6jhMfYBcIkQIa355O
      tMNEP87PjqoYI0ZG8qJ87sL8t1eUJySKJDIOE2hzqSglSmoUEect4ge5u5nR5JmhyAzdMD9L
      m7VWzxLnp01onUfJHzOItlVFnWXctWcm5wh2vKRdZs/gW+AS2p0IzE8/q4whOPfM/fcxkiv5
      nCbzzEL9AdowBXqoZwL0wziyNulE7J1N9szLit5z7ltqk3OY0rCv3T/ggubhfMYIyWEc2RiD
      kpEpBG6XK8bg0FrzujI8zI5FXqCD4H3XsSpKzvOM84F33ZmbsmCbV4wCtI+87TpmN5NlBZum
      oR86pqHjplmzXSz4dugYnac7HolRYJShi5HVouTlasPZBrpxIow9UQimeXzWQOE9N5s1S6l4
      132IRXBMKTC3TcNxGgkidWmK3BDdzOjF/xCOmwZWUNbpPjycWyDdu3VRovOSaZrTg3rBC2Ym
      ucmqS/foyXk2W3eJDFLP9/I/p9fJlOamLOmGlr1NgX3BWlSWEWJkmm2ydCr5J7jDp4wAJVMs
      VbjUIUqKNMT7AZP0KcTuaWLeWkt2Cd4zSia8oUodIGsdD7s9mZK4qDgMEz5EtPAYbbhtCnbj
      QKMNtXQcheK6XvD+dMQh+GjRcJ5mghZUUfAwdZRFQXSWh9klOkSE2VnKomLXnvi6PeODp6ka
      XlYFRkRWyxVHF7k7HdlIwzxN9FNHudrSyZyxb3mzXLCzFp1lXFcVp3HmPI6A5HeHA+/2jxzO
      e6YYeex78DMLfooTwE/8w9//PQ+HjvPhgf/7//ovfPX1l/zL53/4D7/0/8wSAlyY6eaZ26ah
      nWaOw4C39pJiLumG+TmF5YfrKb/rKbzCzzPSWcqmxgvJfPlWVVKS5TkWTfSOYJMHNwLWuURm
      vnSHmqpAq9RIVDJJsq3zKZnl8nppSjwRiWwXa1Z5wfv9nllK3EWLlGcmGeHnZJjx8/zM7n+a
      LsuLfAIpEwArRIySzC48b7rZehZFwegsPgTOs8VEiELweDqjo6TtJ4ZhYu46nAhsVxt0bqiL
      DBFmdNlwGHu2JpHVfJjx2nAYBu76njdlSWEM3flAJwxrqdhZy36aUFJSFjlvmobWWXIN62bF
      3fnIwzjSGM0vl0veHw+cnMdkOQbBKje861o8kV8uF3x+OHPftmnqXRS0/cA3D498dzrx4Bwu
      zPxse0OpFFWEcXLooroUxif288TCCET8j4Dzgdi+5Vt3TTy/5+OPP+Krr75KR22MvHnzhvP5
      TH2J6fxfsR7blIJSaMlpnHmxWjPMM4fuzKZaonUKmPMhUmQ/CKS4SBWkMc8JjkL9EA71fZcm
      afjlc3B2ZjR4e0EOphNACPA+OameLItpg6RwjSeJg/eO6C0m/z7aKNqk19n1Az4mBDtAnGdQ
      it+++5Zf3766sC+/V51G7xMWUSnck2MsBizyRzMBpRT7oWd2jlVWIEMgLwvuTydeXOTifhg4
      2Il13aC04d0p5Z4J29EFQS5hnB3uon49O4tRGiMUBR50RhhPhKzm7nRiWVY8tC0/u7lJiPQp
      MOIo8oxdO9AHx+Acf3e94fePjyhT8sl6hYhwdJbROx66nn7qedWsgcjbtuXNasVNvUC6id2c
      pvWVEjR5hrhwiH6/39NNA5nOKIsSoyQf1QXBjT9tSuQ0T6y2t4TxyPEvDMZaNSuqwvLueOC2
      rvjo+pa7tqX2l6ghLRitp5CSTAqC98/vU1yAUH6aUnq7+N79FUkmGutcysLNMqxz5FX93LXJ
      lMSjUOrSYrX+me1jLtyefpxR0SVCdL3AuZReKbxHGYMLkevl4oJnbCl8SOAqle79Os+JzhGm
      1AUSShG0hnFmjh6lNP5i0smMIcRUjD95pXtr2RRV+gxKcp5GrtcrVAjpdaXAZDl5UV7MMwKN
      A63xNqYhVARjErxWCsWqahjbI61UNHZCZTl/OOz5T5trujmBt+I8El0EPA9Dx9IH2nmid47r
      qmCaJ+6HkV8UC745nfl4s2VlDLdK81FV8cdTIuYtTU5pciqV5NXb1ZbsdGCoNKf2TKZKzl3L
      aCeuFwuyLKdQkhd5SZYpikyS68V//AT4H63z+cxisfj/81f8aN2fj+yHgU+31+Q6Zdrenc80
      RUFT1jz2XaI/xFQL2GlGBE/TVM8ZAJBM7AhBgB+FX+hL8fvUzYEnHqcjz55OihSw50LS8CAE
      w5SkFk+q1OAtLqpkVHkKxYspcdKR9EuK5AaLzjEoxXma2JYVv337Db+4efU8nQ7Wok2afEsB
      dpySRmcYUFmCc03WpU6RTCSMz+/v+MXm6nlDvNvv2S6XzG1LiJGHqWe72qRr0jBinWMhPUfr
      abRktAIfPQ/jwHVVpVpDSISfsVGgSLCtz5ZLcpPx28OBl+sNfd/ibeQQLY1USJO+GKy3fFRm
      HCzMduTTm5d88fDAX6231IuaeR6RJpG3/+XuPaNzSCHopom/2V5ztJaPFjWfP7zHCk2wyQ2Y
      CcGLpsEqSW1y/nj/jloKhNC8XFQf3gZ4OCeAkjHJwbTODCYr2HUtwc1cLdd0s2V2jgUwBZhD
      REpJXeYoJZP+/3IdUkr+iabmhysVi/7CywzPmwASTtFe4FBCaYZxJlfplJI6XV2eMsIU0A0j
      UqVOk76I7OZxQhiTBHoR9kPPV/t7fvXi1Y/eh50ss/OoSxzrOKS8ZhF8SpcH1EXjdNf3GClZ
      Fak+GaxFRygvQN3ejlSLNXWWvMh3bcfrRcHoHKOdqUzJbugZnEf4mU+uXrDvWr49HLAy8uly
      wzj3qKziRsBocj7f7/h4ueRwPBGkoPMzdVHz2Pe8WS2Z54lSSpQy/GF3zy9vX3EcRxqTsSZQ
      VTW6LC8uPcXvd480Wc6u77hvO36+WnLfdhy6MzfLJQjFZze3aCkZ2g6L4Dy0XC3XvD890k0z
      v14tP7xB2NNaFSV+Hjg6T3Qd26qmnw3f7R65LUtUCOyA67oh84G2n9idOjKtaDJFXhZ/tlvz
      3y4pxHNCTIwwTvYZjS6kIisqnJ1xU08hBXNIQ7PsYm7JLmEUfT9QlxeUokzArmAdWZGDuDD5
      SZqdaZ6pf9C/EEJAoVAAIfH8rdaoLMOGdFJprQjOM/qZm6KiyDKEUazKpO7c6kSEE0YxDoJl
      XRNC4heVZYabBs7Os8orRn+RhSvFulwytS3v+pYoArXO8SJS5znSe3zZ8N3hwO1ikQxHlzlJ
      RLCpKgxw6DpelDldgFIkzlKpNbOU/OPbr/nb15/QTxPx3LJZLpCZSejKYeCqqvl6f+Cf7+6J
      wdJkBSpGbjfrJBERgqLIKdyErQrieGJtDEjDV8P04W6A4CakztlmKS3xoWtRIXJV1rxtW7Z1
      wVoXvD+dWZUF21XNbB19P3IaZooo/oTJ+d9biTqXpsHdOKeOyeVnpSDJKYBcJlbnZFOHxs2W
      4BxVXTF5j0IgQ0AFDyZtrGdArQhkMbIpK/bWclVVP/j9qd6KIeD6nnzRMPZjsioSUUYTjOLU
      WraLBkHk4XxORf5smU1EhMDZBq7XG6K1dNbjCFTB0iOpM81xnsAHruuGt6cD/eC4nyZW1YJ2
      PFObDOE9g/fc5AWDD4zREfs+fblEwZf9mZfVgnM/UGQZzs+0IbJQJkUo5Tm5MrxZNSjzCXfn
      Ey/Khu1iwTAlTVLvHF8cD0Dkuq546FquywUvliu+2+8p2hOneeLTRYOWDu9tQr8IQZPXuPOB
      o1cf4BwALhZM+ax6xDlWOqHyHseRuqppHUx+4mVT4GLgMAxpcpxr8jwNhbphph/nf3PCpLic
      BlVu6IYJdxlqCakweYHUhiANJjrC2NP3A9Y6ZJ4zXyyXwzgzjRO6KKjLnKZK/xqjOHcddVli
      tEo6ox9wTUNIKZTzbInmMhcwGj/PKcooRt6fkuwizzRFnpHlWaLI1RXGaIIShNljx4m2GwnO
      0w8tgsgQBKeh57pqUFrz5WGPdJaqKMmLRIvQOueqqpJJxmQEqfHRcxwGSgmVNHzZn1mXNS8X
      S/pp4pvjnjoz4COHeeKT7TYxVP2MR/OiWWCUYSJy13acJ8tD2+LszKeLBZ+uN9w2C14WBTrL
      OM4zRZFz37e0pz1f7h54nCxz2aADoBQxWJZlzew+0BMgBp/S3fuRSMrpFdHRFDmLuqK3FjeO
      tDZgo2WTaaYoeH84cLtaUV80ME8Shn6cESS5wQ8Fdf/aklJSZZJhGtEmxwgJ3qcrQYhYoZlF
      Cm7QRjNOliwzZFpRyBTuoX8waY4Xn/DL1YpwcbhtypL7ruO2aVJxfgF+hRgQOiWmj8OYOk8x
      sm87apNhlCKGCOria5YKZx2m0LRecrNcELVmsI6CmRH45tRRaM3tYsH98cg3fcdaataLBX2E
      TGru2yN/ffuGHIc2hnkccOuKz99+y6u6YZFl/PNuR2k0C2V47AYckZuq4P0wspGG7XJFGHse
      hoGPpxktknQ5v1hRvzscL4K+jO1ywUZrDs5SeU936citTIbzjrd2olCSdpxZmJKj6/m6O9HN
      lm2RY0yOMj9FQsz/hisGgfceZTSZVil8ovg+cqgyiclzGkcO/cDgHC+KnKvCcN93bIoyySdI
      kmLnI0qlTs7Tvf3JG/wnvzvGdP1ShqqqGfuR/kJ7E/p7x1WhBKJeYEMgkwHvZ4gKmefkPBXH
      8rkNujQZLibrohSCbpgpjUniscssIF4K95TuAk1T4axlGCdG61hqQ7gYdkTwjHZmWZTITHGa
      HU2eWPxd29KUGXenGRscq+Ua7SeO40Q3TbzQObMIuBCJSqRpbVnjhh5XFUipmUTg4bgnhMii
      yPjd4UChJNd5jVKaITgcHhU12gtkplkLz9t+ZmUMM5E4juyGkce+xQXPsqhYFgWvlgvuu6Tl
      qazlD8cdP9/e8M255Z0Y+fmqwS7XDC6g3ch+HHhZFFxtr/DTxG+HEWU9pfgAc4IBsiKjLAsk
      kWkYUdmfv8svi4KPN8nA/fnjI1YZbvLU127n6TJ9vUiSY7pnP8kLkhfA/wjFHrzFX+I/p8ky
      jRNRSoKUmDwjhIscOSHaEErSVAVIg4gwuZlxHJ79Cd4HejvTKEVdVxfUezod8kyjSSF0wPdQ
      XiGe27byMrF+GEeu8oxaK7SSzNPMqR+olKaPAaUUgw9kUjHbGYkgoDjOibkfQgq3rmISr13f
      XGEyw6Io6MYBYUe2WcmqKTl0Z879wLpZsOsnjJS8O59RQlFLjUOwKDKmaaQWireHI4bAR4uK
      Q0xZw1pK/vC448v9A8jIJ9sNWZbxV9fXSCKHtmebG+I08TiP5GVNkJoXVYFzM+/bkavMUERP
      HiUPXcu3XcvYj7yfPYULfFSUrIv6w9sAEZisY54mRAST58x/Rhv/tIQQ3JQFP9/e8tD1vO1H
      1nmB8JaHrn22LUp1KWgvaYyIpMzsh4lumJiGjnmYCF6gpUiGGK3JL4z/bphTfjGp1y9kurd3
      /XjR6mTkZY0xhugmtEye5GkcKcvyT9730/vaVBV35zP+B9kF9oJsAXjsOpZlRV5VYGeCc2iR
      MgpulktC9NxdPnPftcw+UeT+sHukm0ZWpmItQTn4bhz45GrLu/ORTVEyS8mqyDlOE+tFzYzg
      7nRmYzLC6JjtyBADa62Q3qJkTqYU708t+66jnyacVLxeLbEy59R1NFrxbpx4uVpj8pxFpmny
      ihfLJZ2feb1Z4lVkmDxaGrzUrKqGLw93lHnGz29fsPeW4xzwUfDResOvb27o7cz/s9+xyAxv
      qpoZx9Wi+fA2AEC46PqnSzZA4m0mNab34Uff2vES+Vnkhhd1w6oo+e1+h5eapZa8Px1ACpRI
      QXeJEBFS7oAPiOCQdiRGiVeaoC5tzsu3bT/OdMNMXSYcYQyBoiwSllAKMgHCGPJL9FFEYvKS
      yXp2h0duFg0g/qzBxWhNCieKuIu/96nlCQmvOFvHqiwIgC5LRNfhYkQKSQgOlCHXEhGSHOM8
      z/zm/p5h6Pl4tWFd5MR5ZA4RLyGqBBBDaWKIiHlCmYpDd+aLx0fe1AsUcOxbeiG4Lgretj3L
      sqSucibv8X4izzOG6PlktcSYku8eH1kbwds50FnLq6stLzZbCiWpleVNU/GuH1Cm4EWzIGaK
      qCKVDBR25LZe87tzz7mfuamWfNO1rFcrzvME00RJ5OfrLV92HZ1Kk/iHrv1pUyKz0HHfOkom
      yBd/ETKcAEye4VOd96zGLC6JMImB871d8MlVpUjhFMyWz7bXfHs6cQSWRnO3f6Qsapo8f35w
      g7VkOGYkXl+QKFLhfUjRqBdqc13kz8MpHQNWSKRM8wM/TTghkrd2sBijku/XwXHoWOUl3s0I
      EQHJZH/gELNTysL1nqWA09yzFikXrcgNQQjen07cVDUSR/AO6xwq19wfd1ytljjnOHYnPm4W
      eBRf7u4wUvKfrjf88f4dBeBd6gbdu5lcSqKdmPuBrKx5dzgwTCOqKMhUTqMltYb9NHOIM01m
      eF0WfHc+IISEeQTvkASGsSeTgpsieYZrA8d5ZnKBWit+//4dtTF0xtANljwX+GD5+v6eTEum
      aeChb7lZbJl1noSBIdI6SwiOSOB3jw94a9nkis3mlv3pwEJp/un+jk1e4s/+p02J9K6nf9ih
      Xr7meP/AJ29e/kXIcM57iiw98KlohH5Iis2U0ZXu9tE5dJZSEMdpfsYmOu9Z65zeWwbvk/Nq
      apmnnrUxSbNPwAZ5qRPS77RT0uorKRAkdLmdBqKXlwI1QxMY+glNRGY5GvGsEHVzJM8M+74n
      F5qsrJ6ZoEYmLftgkxkkiIs1kohVGQJH7yJ1WeJ84LHtaLIKbZKcGh/x0hCIZCYjhAQPqHXB
      F+eBwc68XqwojeGuPbDQJUSJtyO72dPZmRfLNftu4HZ9hQ8CJwRnIfm77ZbjMKND5G5KRfPj
      t1/z2faW77qWj5s1VqmUdTB6dkPCKv761ScENO3UY+eZpqh4P55pspw6K9lWJad5oslywjzx
      Mis4jC0b1aTEGnPNuq6ZR8eiKbhuavZDzzLLeTwe+cf7d/xsveS22RCNpisLGiX5u/oNXz3e
      8W7of9qUyChviLrmalWxrBd/ETGcVJK27/h2t0MpSZVlFF5SaI0Q6jLs6pMmJgZQCi2fXFVP
      9sGUzFgaQ2cdXT8ghKS1I6e+4/XmGqNTUTnZpEkxecrZ7ac5mWGUvIRbPBXiVaIwAHmYsDI9
      EM+mmgym2XEcJnSMLJdLnAtkmcE7j7WWTBuUmwlP6ZQxXvhFijymDK66KIgyAoLyUsTHeUZl
      Gd6njtK6yPHOcTcMFMoweMenixWZUgg3040Dv7p5Qd8PzFISLw/OZrnAtIFlXfHF3T3HceTT
      qxvGyTJMA84Hbq42fHtoyaSmEfB2mnhzdUuRG77ePfBZveTv79/zi80t67qhdRODdXx6c8OX
      +wMygPWRUkjeHfYs8pxZCkyEwmR4m+YYp2Hgxeo6qVSLMsmdtSRaz9H3xDzjP79+w//79lvu
      BsunyyVNkbPvW5aZZNvUTCf34WmB7s9HYghc1Qt8jLTjzGkc8SExfpL+ReGmmaIqUVJg/RM7
      PxlKBCnswvmk0ERJTtPAbVVwcoF3hz2vmiVGZSl+6AK4Asguas9nc7t3yZgv5bM5JS/LhGa5
      +G2JMUmZvef+eKA2JYVRSdjm0yYQUjL7gJaS3777ir9+9XGySl6k2u0w4Un0useu57Zu0FJg
      x4l48RkHazmOLYsi5+25o9T585fTIi8oM83D0IJzrOsV2IGvTieqquG6rqkkPPRJGNeFwFJL
      lFZkGD5//5ZfXq14mCIP7ZkXqzXOD0hhWC0WnLqOc9/hJZynmZ+vr7laLfj83Vv+5sUt98PM
      u/0BgONwZlM3aKnJpGZyA9u6QRB47Ea8jKyrJWW6WbKfLQulE7ZeCdp5ZlsWuHmArODr3Y43
      Zc1NUzPOHh06Fostj935w5wDdP1ArTO0MWn4VRaEkBQo52mi7XuUErhxJNdJaKZV6rn7acaH
      iLtYCJVSqOi4Lkvu+onKGD5Z3/CuPVCqidvFGh8ifrbpqvF03RMiafIRjGFMYjRnMcYwtS1R
      CLQQDNNEpjVSpXbdi80WpGKYbTo9c8loPZlUKJmS3J2HaeiROvlqZ5vC8nyIfNnueNMsqY1i
      HgakUQilcfPEMcyYPEOVNWq0XDUNzkXeHk+ssozOWtp+4M16S8Tz9fnMIi8YnafIcva7ewYh
      Weclx/aAKhYoZ/lj+8AvFgt2w8TLesk3Q0tT5Hxxv+PTbUMGPPZnfrZc839+8Qf+9vYlr1dL
      /svXX/OfX7/m7nzGWcEYA2uT4XLDX796w+P5yLnreLHYoGWkkIKFKfiHxwf+qmkYRosWnk2t
      2fnA7AIEaLQBb/n06pooU3NhfzpS9AIfLacA2/Oe6+YDDcnTJsMF8ONEVRgkAmLq3FQikmsJ
      KoUynMc+GcMjLLIckxkyLam0guCxdmIKEpxnYzKm6HDB84vVhrOd+efvvuHlYkWuM7QU9JPF
      POeMRbwQuNkTvEcYjQ4CrS/m9JgMM533dOPIsqjwF+VmnpnvAz50QjUaIqVRmDwjhhQEEqck
      HtMxMM4zeRT084TyClOUmDxjHHpaHD5Gbpdb/uvdHb+8usJfZhXbZU1Rl9w93NEUBabIudvd
      k2cpQG9T1+zbE/fDyEfLDV5KVIgcui61mj3cjSMfXV+xGyduq4ZxalnkFUJKDkPHdVnyT487
      liajMjl//913/Hy9oRs6QtQcbYcRkkVhEqfVjmxMjlpnjNPANES2eQFiZFXWdP1IZTTalEze
      sz8/YLThplyQi8BuGDgODqOglJq33vG+PfFmvWERA1FEJvcTFMH/uy0BKO9Q3jNYT9fPGAnF
      E3HBp5A4FwLSewrvkRceUGcH3NQRECwzjRICqXIy/RRe7TDA6Bzf9gObouRvXrzk2/MJGy3L
      csG6abCzQxLTg0rqNMksS4k0Ty3Uy+AqksIy7DgTs4R0fLqVKin36KN2AAAgAElEQVSx1iWv
      7jxjEZRaEcaRfHtDcPMlQd0SMDwMI7eLJd3QkVUlwmjujkc0ARE823rJH3ePvKgX4FNzYrNZ
      Er3j83dvebFIBpxTe2IIkU8XDcfJ4caR0jvWiyUg2A0tC5OxH3qMyhEi8ssXV+is4h8fH3hT
      Lzl0B95cvaSfJ97ud9TVinYeeVEu+O5w5M1igclyHk/pync/9vz1aklVZAzzgJCGTAsW88zX
      HopMYfGcesfHVc77sWe9uOV9d6afZ14vtvgYEH7AlA0b4G2fJBwZM9d1QyHBAS/rBX/c7Zjn
      04e3ASLgBQgtaYqCEJNIzAJlpjFEohAIH5+HRfZCVHu1WOK9T7lXs2eKAeFGtBc0WYbRAiEE
      qzyn8obdOLAxNa+Xaw7TSDt1nPszV0WFyHKmYUQGj8wyorVoUmvWPml2EAgJws98tF0zzJZp
      TJ0oo5KtVHmPc0lu4L3nNM2QZTgETmiMAiEz3p1OXBUl2s40ecEfzydWWc5CglCab6xDhUCT
      5awzzXlKtImkTk1/g8FbqrJmt3/gk/U24dmD51Oh8XmOHB0YyePxyFVZUZmC09jytx99TAwz
      0zAQAsToQOoUhzR36LxichZCpMwztlqCUBzHlsoUPPZHVlojlGRRLvh2v09aJWtRJuNVJbnv
      W+7mlo83t1g7sxvPDG+/5eP1hhebLSGCIHB/mtg/PpAXBZWRNFqQ6wWV6PhqcrzIc+66lk83
      a/bnw4e3AQRQliVVXaessAi5lAyDZbfr0FlGZtJcQIUUGaS1ZHKwP7cUmaFarChJTjDrPc57
      +pCwKsNoqbOMpih5mZccxo5CBG7qktMo6Ieew9gi/MxGZwSTPYdPPC2VJX2/c553xwMvlytk
      ZmjyRKjWWuKmOV1/ygI/W6ZLvGkpHdNuYvYRJRXRWyagMIZKwv04Mw2BXEQqAnlZ8eXhwE29
      4Nj1vKgqotIoF6mKjHEceJwntk2diGv03GyuGYeex9nyi+0V0c/sRkttcr7Z71gojQ0RJTxv
      Fg3OWUIU/NfDgauqRkbHq9WGcTjx29PA6+Wat8cdRZajRWBdrjhNHcJ5VnXBlwN82lRkZc0w
      DOzGgdM8U+pk+8yI1FowUabkeKnRRNZ1Q67NpdCX7LpUsAsJqywj+sC+73lZR/JmTeYOtNZy
      lWXs2gOZNh/eBgCYxplZT6iQ1JcB0DJys20YrSMiiEoxXjo1UoDC0dQVs4t0/YTWie6WG41R
      CmWTr2CzqThPE499h1YKLVMC++M4szE5TVmzG3rqEHiYRrT3VNZS/VBJegmxOHQtt1WZ5Btz
      coZlWiY3V54hLmiS6GdyJfHBUZRVug5MI1lVYMqK7+7eU5iCb8eRl9sNmZb0547HaWY3DCid
      4SdLU2SoPKcbRqrcEJ1lNhoz9bybRjSJl++8p9CKpVSp+zQ4hmGik5aTm/h0seWr4yOvlkua
      qkJKMLqg9Y7rsuA4WHI5cA6C0mT4EFI+W1OzygvKTOCsZEDzTddRKE1UmjpE9m7mtq5xHqLy
      lEpgpaLtHdYFlmVJN8386uYFf9g9UmjN7DyFCNzWS4Kb2S4aHmbHOtds/cS355F1yHmzWvPN
      /p6HObKQ6QT94KQQT5jvbpw42sgsE9syLytMUbFYLMmMZug6op/JpEOLgM5LsiyjLNJgzPvA
      sR2egVZSCso8ER9qk/FyuWSR5RSZIUiwdub3xwPWB5ZSc4qCZb1gYXQKo+5nJidwUeGF5uwC
      dVZQlBWZFigcdugYuxalBFN3wvYnpE9RP0IZZFbSW4+XhlLBaAO/efseA2xKw6cvX4Cbmbqe
      mOVY77BSUwtFN48ss5y2HymMQV5k07vzCZRKqlk8/eRYa03wKXF96jtGG9hNIzIKaq15f9rz
      2fVVAt/WDUIK3rdnog9USqAjHKzj69OZ28WC746PfNTU1FnG1XLDYz+xLCuWRca3bctNkZGZ
      jLN3LLWCCDeZ5tT3vB96zlPHyuRsy4LDueVlWfHFfo/zlr4feVlmNCblnCkR6HpL7Sy7054g
      cuqyRPqRsW3xk4W5TeEj+A9vAwBEISnKkmVTkBlF142cRsu5H+mGCYSiaRqIkX5OmJPoZqZx
      IIT47A1eNmWqIS4ow9m6Cyk6BeVJIRARNibj9XLFZ9c3fLt7YOctmdF01nJ2kRJBbQT7aWBw
      FhcDYz+QZTnWB2IUSCRlWSKkxE4TQmU4WYBJQjitJZmK5MIjvMNLwV17oImBq7JJtY2byLKc
      IUT6oeWmWnLqe0xVsF2vOQ0zwjvcOKCyjO9OR5RMSfASiVaCF4sVw+lEGwChGKzji/bMi6JG
      Ccc4W7arhqg0103DOA7MNvJP9/f8erPmrmtZFxVv+4F1mfH+uEvgLaP5aHvLd/s9rxcVUxAp
      vJvIHCKNMcTgMELjrWUfEgspKo1XimA0hTbkecbjOPLZzS3bZkXvBybn0EYijcbriuziAiRq
      RiFpiopJSiod2CpLyBpOUaKyn0gM9/bbb/ApoJcvv/yaqT9ztzv+FC/9714CqMuMMjeJ7z9O
      SK3IM/3/cfcmz3olaZ7W4+7Hz/yN97uDpAgphozIobKb7gIz6MZgx5IVG9Ys4Q9g3X9QLzAW
      LDBjBWaAWXdVkiOZEVkxSFe6wzef0UcW54aqynrRFVhCloWbaSG7g66k4+ccf9/f+zzvh9tF
      9CgRqOoZZVFwGjydiQilCXakbRvwhnMzzenWRfrUtZ0aL0pJinxKXjrrOHUDo4+4YeTT6xtK
      rUmVYpZnBBG5G0daF1hphbWW393eMqsnraoKDjf2uDhtMpBkaQ4IhBT0xiHSHKkzhNJY62js
      iFealMjNYk6iFdYFbD9MzaQYWErFaAY+nC94vd3iB4sSEyFPZjkP+wP90JJINfE9o+eiqGAc
      6KIgCsVoRs7jQJVo1rOSb/ZbPlosybOMoW/xXqC8oRkthEDqDH0/sBta1nlGN075o5u6QqDY
      nxsu8oyhH+mGFuMsnyzmk371dGSpNOfzmdYYqnPDPEQKN/KLN2+x/UjmIx8WJVkyOdmeVTXO
      GRrnOA8Bay3Bjgw2QAisZzUyGsb2iLOO49BCPmf0ltY7vjnu/wRgrP6Rr3Ygg0XZEyefUaYQ
      Q+TVq1d/NjDWsqjwfnrEqSezSwiBREwo8GnIZWp0JVIyWot54vfEJzwJwb2PFqtEPwnoBEoJ
      vI8oCTIESBK6pkXnxROqJNJZy+AsF2WFEIL79ozzgbZv2FTT/HHwgYv5nERPA+SCSPyuCSem
      jBBqCthFAW3bUNQV7/ZbSgSXRUFW1wxtiypnvLl/x/V6TRo8pAUPxwM6TWlHw1JnpGK628YY
      +aY5MUskhMhhtHxSlxyN47queDsOFCpl6BvKrGJ46pekAq5nNQ/Gc6EFWVYTwsi/uXvgkzKl
      85FNPePb0XBoe0qdUOHopEZHxfPVnFpJ7s8tl3XFL+7veFmWU9MwRkqliUR+/fCOT9eXjN7S
      9AMfXFyyH8eJoh0926Gf3A3Rc7SR89ixyguSJ7lJGgeETIkqQShN5wxLGbjrDM9nM87OUWYF
      /fAnKIMKlbG7+yNXVxtEVmHevMEvVkT35wNjmXEgUTUJ8m9l1VJMKUqZY61HEd4Pj7gYSLVG
      SUXTj2RaU5X5e6BqNxggkIiIAKyNIBO89VgpEcNIPZ+/JzcnSrHO0kl5+sTcv65mfLN7YJZm
      1ErTI3CZ4k3bUsiem2qGf8r1qBhJsxSpFO04MS7DMLKYz8mE4NA0XF9coJOEMHQEnXF/d8fL
      iwvscCaWKxozfX7TdqyLii5YqnqGN5Yvdo8kiaQoKgoJUQ3ooiSPPeNTPurUDzwvSnYIBmNJ
      paDIC0ZAA2mao9T01DsPLeXFJafmwO1o8DZQ5SlFdDRuKuc+2yymYf7TgWWe8XBuWElB1ClF
      Iun9hKp3ITKEwL2zFMFT1nNSJVkKiCKynC2YZZo/Hna82tywHB1fbi1XuSImBaWIdC4jy7IJ
      HBwjs1HweN7zwfKC3gws04JD1+F8/OFlgb7jAq3SDEScYrhEhJzYPH93Wfcd5c2/t7CX+ZTb
      H40lzzTFd2pQOwk0fIiTzd0MRKUQIZAUFaOZegl/d45XSYmWU1dSCEg86DSl8Z5lXiCdwVhD
      72HbT5K7VZaxms3pjeVsRlKpqEIgzSfM+2PTsLUd//zqighsuwGdJMx1ijEjWVFgQuT45CC+
      SDO6fqBjmgFonGHfNvxktUArze/3B340r7FoMhH47cM76qTkIhH4rOL1+cA8z0lioNSaxjmK
      aLlcrvBm4N++e6TQCR+sN7w77nnTDszKHGJgkyhMktM6w3/44gP65sxhGNlkOb98vOdquYQY
      KNOMCsGjMfzNbstd1/BitmCMgY/mC6qixFqHGXvcOFAVBa0d8UhWRcZDN6CVIk8S2nFgWS/p
      hmkAKZoR/ICTOa3pkColzzIezwdmafrDPARb67E+EkXy1FUVxOCJ4e/HsnWiyDNNlk6zw5lO
      JgoETzTpCIemox8tUogpnZlMd2jSghAEIs0Zh55UBcp0skYSHFoGUhWxQZInOftTixGCNM1Y
      ZDn3xyODi+Q6Y5klvFoueblYcvaeX757y0PXooQg9h2Hoefd6cS5b9nMKnIBIS1413ZUUjKT
      oPKMNMvoXGQww2SytJNAb7lakCP49rRn2zb8fLMhL2rOzrDUyRSZIPDQ9QwuclmVCJ3y0DSk
      TPMKkciyymjNyHq+RBUT+fm2bfj82XNen/c8DJbrxRwR4TqRvO0NSQx8kKaMpzPb5sxNXbO1
      liLVnJ5KyQuVIGTCY9fwMA68nM34J1dX3MwW7IeB4+mMCp5VkbFazMkJXKQlzjnW8ws+Wq2J
      UvEsV7xcXRKIXM5qUheYaUldzVE6ZVnXKJ1ixo5PlyterS9/mBtARk+qpzu/FwkOhWOKQg99
      izPDxPF8jx2fDrV5pplV+VQSfAJKqacU53d8zObc4iKI4MnLgsjkFjNuepKoOFLo6esHG0gk
      nNszry6vKPOc/dCjY+BZXdOYgcdhxIlkssWcjizzgh+tVrhxoDtssSIQ5ZT7UXlGh+BxMLw5
      nriZL8mfyobWDIwiQcXIyXikG5kVBVmW0nQD3zYnzGj5cLkiSzWjG+k6wzpPUQge2nY6PFcV
      wo3sn84dqRKUIpIrgREJizwHJLvtli8PR15eXNA2DW+PDVfLBXmaIkVkcJGLPOdoRi7WGxoR
      ubq8xiM49Q1DiCTAVZLijOX2uOebw4HPFktSIsfB8PlyyU83l3g/EoUHmWJC5FFIrBJUac7D
      9gEtJSo4tp2fOuxR8O3+Ea8cbRSMLnKdK5bFgqsyZ10WjEGy7X+AhpgYYdd3PPQj2358jzQH
      EDJBJhkuSs7nE8fjEeccg3G0/Ug//O1QTKoT8lS/5+kPxnFuusnSPoyYKGi7fhqCNz0RiQ2S
      xkrGKFFJCs7y5vGB+skgoxHkAb7dH+mM4WI2x3rHl/s9NkQyKWn2j+wOe67SlDyv8SSkSQZp
      gQsQrCF6h/aBUzswygQH+NFQZJqgJnLcIs0mRLpz/OL2DXVe8On1FX4csFFyOp1JFSRpzh+3
      O5ZliXOWMtHszUguBYs8QSQpMq/IteZ2f2CVatpxoDcDR+uZ65zf7re8nM8RMXA6HdkkCT5N
      cUqxqmqMc9PwkbXsmobGGiSBzzeXWOvYdi2/2D7wlzcveLFcsDcGomfsW4Qd+PGLl1gvOJoe
      LSUvZ0uc0qwWS74+Hfny/o5d0/J2HOmd4TJP+PFmQ4wwL3JSqbBhOgeWImA8HM3AcfgBalIR
      sKhmXFQVUkpaYzjb8f2HE6nIZUJR1hNQyk8lPIQgyuTv6Yy+a35JKXBPJIjgHEKCMwNpmpGm
      +YQufPq6GCPO2CnpqTXL2Zw8L1De4uxASuCDRcXrpsWe9+RpyjJV3J9PfHyxobzYYM4ngndk
      85rT+cx5aMm1ZlkUiDjpghAerRJEMJAkRBsZ24Z352n+trcwmBO/bzs+2VxOWJE0JxD58vY1
      L5drjt7wrhtYJynBOpKnv5csKkqpOctA7TyDtSwWc8z5AZsmjF5yezqilUTECcZVF5K70wkr
      xDR26gPPZzNG59ke97y6vKJve/amZ2ct//nzDwgIHoae3x6P/GRzSVUVRDuihMBGz9FJ6rTA
      NT2Xacq2OeDymi+2W3SScOpbXiwXeOf5dLniV7s94zDyYEZSnXC53PBu/8gs1Zws+PYeFyWL
      +ZwkNRD54W0A8fRrAtYGMqnInpSiMUJvDCeGKZYw4Xqo0oxMSXBTYE0k+unwPC3vHNEOU5pQ
      aQYXCD5iRzuBb8Xf/tkyBESqMd7zeDhxtVwgrMF6RxKnmdXbw+TULfKc4AKb2YwXmyvenU6Y
      3R6ix0iB2D+yns24Wq7wzrEfhqfmW+SqnrMdB2qhwTmKVHM4HyF6SjRtovjj44EfX11NP6MD
      N7R0bvIkP4wDg3Fc5RmJhM47ZFpQE6ZXqDKh7Xo+Wcy4O515uz+T4YhBYLyZ0rQIdl3Ph8sl
      t9YhlOSiyDm7yOV8zslYUqW4yCuMsTz0LSfv+WS1QgvJ19sdD2ZkWeT8ZHPJXXOgM446TamK
      GgLcjT2ZkqR40tmK3lk+Xa0ZrGV72pHois4NWJGwyXNUDFymGUcb+OLtLQLPXXPiqijYlDkk
      OaMLQMKb9vjD2wAA3hpiarBuArhqnRCQBGBRFe8jyTBFJ9pxZO8cUkiUEiRmpNYTU1MISbSO
      VGfILCMXgiKE96KL/alFa0WmJFKISU8ULPvmxIerGdb0tINhO4z0wLLM+ezZB6gYcU/zAo/N
      nsVwhqHnEUle1LyYzYghYKwlDB06LyiV4tB33HYdi67F2BGV1SzKivPhwN54FlXNg7Ecux0/
      ubxEDD2NMFPgLjoO/ZFaF3y9f+Q/ur5BBvBpxuGwY1Ol4EHKwMEHKilpHQSp2bZnPl0vMYNn
      1zVEpVgUFb2zFGnJ0NxPytcwpV11jHREFlpRVzVfvbvHqSkF+7yc8dV2x9GOVEXOZ6s129OB
      wZqJKhciZjQcxoEPFgsS4RhExjIv8KPh6B3LIqPKrrg7nTFCcd+dKKXg695MNDkh+LhKkTrD
      2JHbvue3h4YyMQQfuCxLPvqhkuGyvCAvSvwTL/N8HkgTSaYlNgjec1EEECN1oqj1U3bfWVwI
      PHaTqC6OA1Ip5k8JUZhy+lJPo5DrmaQ5n7FBPrnAJt/uSufcHVuOfY9TkmeLJSs3ocrNMJBl
      GoUnjhbh4WtjeD5bTh3UtuX19oEXFxvyqmK73zM0DXWWclNXnMaaIlVIWbFtjhwPB5JMcbIe
      fz4zCnixuCAOjlEoFhJMd2LbDyQiQFZyOV9iXCBJNL0UzKuSTAp0VjIYw2Pb8mldcjY9iyxl
      30LXGUyqCd5yDvBRVXN/PPLt6UCWFSgpaYzlsqrpjIPgqTPN68ctVZHx9WnPLEm5PZ4YveX5
      eo2PER0D705HOiTXKieTk2yjSCRD37Ku56goeDidSXXCQip2zYFlvaTMU0Zv+WL7yEerNSvh
      UWmNUJLHrkEZS5lqPl1uaGygCZ5ZmtG0Z8bkB7gBIhOzXwiBkpPQYr2o/57O6Ls5gO9WcCPR
      jZPHSykSpUmThGAMMS+QWUY79OzOxyk9KhWJEORiavSlZUXwHucDd+cjIXga5dAx8ur6ilwp
      xvYMOsE4y2AEvQucxpFUa9bVjKuZ4GQM+6ZjVdVkEX71+jWLVHG1WDDXOS4KYgwE58g9JDha
      IaiWC16fDqgYeDsYbrKUQkpCpuisQUQ/3VVVwryeYW3PJ7OKb3dHlqsF99t7Prp8hukafKZQ
      QpIQyRLN/nxkPxqqNCWfz7jbbTkHz8erS745Hnie5+y7lo8Wc47nE0U6Rcy2fctVlvLNw45V
      NeOxP3MeRnSW4JXj5eUVX+53fDhf8LvbNxileFkv8DEwuJFmOHG9WPF6v6exkVRLNnXF7nzi
      D8cdtUr4m8ORm9mKZZKyrOac+o4sr7jd7/n5xYrNfIE3E6mvMx6VZtTOsj/tuVhuJpXtD7ER
      Zp2nTov3YrrvlpIS6z0xRIpUocST+UUlCKn+3vcJZqKoyVRN2MHgpycGEH3AOkvrp+H3k7EM
      frJRBje9w5ZSMCsLhJ/i1zLNUUoyxsixbQkRNvUMnCV6/57qdm7PPPQd8zRlXdeTxA7BKs9A
      BFyAPzze8bMPP2boBlSq+De3r0njxAv6bL1BMXWgG2+5LAoKpfjycOCTzYbFbMH9fss6K3iw
      jvMwUuCopGK+nGN95KvdnrlW1FpzsoF93/PRxYq7fuRx/0hMNa+WFzzstyidYJVGRc+6mOFj
      wPrJQimtoZQZMlq+7hrO1vNqsUBLxZenIzf1jDWOezspnWIMzBS8aRo2ZY0PgQ8XS745HVlX
      FSFG8hhQUvL6dAYEXkSuZ0vqRPDXdw/8aHPDrjuRRE+mNatUkpRrvHUkdgBvCVnF7fHIRfEn
      McUH/vDb3/Ls4x+TmDN/vNtztShoxvhnAWMBWBdISvX+4v/Olu7d9FhGQj96rJ9cvqn2KBmn
      j0VP9B7hPUlZTjHk5G+7u77vAYkVgiAMUis+rEq6oefr7SPLNCOVFpTm2JwosoI8T+m8oWt6
      yiThZlajBPRti48RKaFtOzpjyNKUl1XNzoz0XY9GMMbAV8PApsjAW7wd6Q47gtIcupEqyfn2
      sOPn6xX4AbKKeZVzVW4Q3cBv9g9cF8UUNOtalos1p8EgE4VxlosiR8fA2E8OMJFIILDvGrRK
      meUZhsi571AykOuC+7ZjkSre2sBVmcJT5zkALjhiiFzlNYlS/OFxx7Yb2RQF3TDgU806L3hZ
      ZXSD4DyMVHg+rmeEKPmD3WODoSxn/P585qKsp3yU8zRSoj08K2sikUYm7IaBxXLGT26e8eaw
      ZyEjNgo2qeLBgHIHVnkxVeuURtiBD+uU+8H8CcBYzR3Fs8/ZP7yjmJyZNG2LF/kTQvD/fzAW
      3uDM8MSC99h+OuBOJaLJDFlIyKXFOsNoJqtjqqfurzeWmGhE16PkQHQeYqQ148TJAeapZpkm
      HIeB3bFnMIafzBaINMNEidYJTkhumxP+2JMLSf6EQA+mY7TToPzRWAyKQiXM8zkB8EpxMS/p
      xx4lJSshGcaeh6blajYDmXAYOtAl3hruj1v++WaNSFKa4KmdY/AO1bS8HQc+ubiiDJZoLa+7
      jvN2i5eSiyynEJFT13G5XjPYyQiTxcAYJDotpr5INNydLEkYKLKSw2iodcRnBXFsGJsz6/ma
      4zjSOcMmK8Bb1NOUVuMCrXd8mGgynXHXNfzl1ZpD2/Pbw5abquJHF5cYH7k9nciVZFnM2HYD
      ldLcHo9oIfjZ1QYBuGFA6pSgUlbWkUfDl8cznyyWaCKttUQETQuXVUWInt1xi1MZN8vldPby
      kY2Wfwow1pr9r3/D1c0LlFbExyPZas3+0P7ZwnBFWVHlGc57gkhA5xMEiwAxTipRKUFX6FRQ
      KIVxDmscKljq1ZroJr5oYwydDwgiVVmxSBRCSE7O0Q6WihQbA+t8hqxrYnCo4Nkag5SSj+ZL
      QvDEMOWOemvZG0trRuITp2gjBEmWTf9eYpLeBWPJEfTOMkTP5fKCGZ6355ZziFwmGWXo+D8P
      R/7lpz8mTxLuz0dKpXh93HFRLti7Cas+VwIXJKKskc6TDJarxYImBCKRjsB+NCyynK8eHvl4
      McMSaXuDygsO3YlCaLI0Zz865nmCs4a7rmWWZ8wBH6F9sswLHyh0zu35xNvmyDItWBYll1XN
      1hmeVzlf77bc9QO1zvhkc8XJR77abim0RIqETBV8vMxpo+ByOWffnPnqdGZNYFGVqLSYGn1+
      IC9mlCHwu3e3FIkApRDR4aoZQSkUisVsGl56aI4kScY6z0lm2Q/zDBCcZTObva/2hBjxUSCV
      IlHq36EyeB+QRFzbERLNGDxOBGRwlElCVZRTkE5IDl3HOI5USqEQdONIUJLFbE4/DHTOopSi
      jg5rDN4HtNJEpfHWcnQWISXropxe0WLA6IRxHHEhErwnSzTLWQ12IEQYQmR33rMqZogQ+Pq0
      46fPX/K/f/sNr+qC57MZqpgxGMe75sx4PjJKySyVbPI5cWhJtOZoBnrjuZwvCQEemzObMqec
      z/ib3QlnR85m4EU9w5qRQ5hIe5lSuLGjygpuu4Z5USG856um4V/cXNOMhm/OZ57NZoQo6M2U
      qCVajJe8Gzr+xfVzdt5wfzpQE7FIHoeR54sVqUxwzpLKwGa25Ovjjp+9eIkzPUKlHM8HjqOn
      HRqeVwUxzVkWBQoPCKwNJDrBO8MXuz2BiEOwKCoutUaqlFRPM95pXjJax/GJ/P2DqwLBNJ5I
      jIhkkmJIpo7fdwzOyHQuECEQvUeJyPF4ZEzklO5EUEaJ0BUyUbggOPctLgTmeUGRTodd5yxD
      mKTXD7sHiiRhgQBnETpDJwVSBQZvMW4g0SmbukaFgHEe7xxKa6SHIs2JPkAqCMHxbveASDJS
      rdAEPry45rHvyfMC2aX81e1bFkXF1XyBSBLMeY9Bs2sani0WJBE6ZzkeHlhVNZ7IMUo+WtaI
      6GiCJM8SCgWm7UmDIyjFj64vmQvJbx9HjmYkUxMtb5EXnJ1jUU0X/847fry5xDjP294ghMRL
      xVonBOFZSMGusZyk5LNZzTfnHQ9dRyUV+XxGnaTk2cDHmw3bruNw6riYrwCBFiC9Q8uE9rwn
      Uxk3peedCTw4z6eLkpMxODuynq3I64ThuCUkOT/erPnicKRMUv7m8YH85gVXWk5cJilwPpDE
      yKqaEaL9/hvgmzdvefni2b//E/+MSyQ5vYOcidMp5ERHk0KQiAmJbnrDaA1DDERjqGdzLvKC
      4BzeP5UNR8v2fMKFwCwryKTAtx1aCVT0fNUemWc50lkuqjkxBGIISK1AClrvsSiyLGMRIdgR
      ObY4oUhUQpJXgEBrRTQWpyTeTKbGqrzCjZNDzImE+7bHhgjY9XEAACAASURBVMDZNHx7PPLp
      5oY6y1A6R2IZZcH2cM/zuiAgMN2RK13g1xecnibj5lISkIwuYOPAXCeELKdtDXWWcWhOqCFh
      lJKzNbyYL9h1ZzKtaZ1j2zXMqzlJCFgXWCvFr3d7ijzl2WwFznGyhou84u6w5d5abHDcO8s8
      z5kryWdXl6g0483xxMc3zzg3HV3f8GK5AKkYvOOha5mfT8jguSgzhNTY0fF8c8O9sXx9PvOq
      SAn1koe2nabZ6grTNsh6xseLBX/YHbherXl72pGrDVWaIYkEZyAKwNJ07T98A5zODb/63Rf8
      D//T/8J/+9/817z64M9T4fn3rQgMxlKlgcZNVR4VDdE1SAJOKlrviVGgE005WsgqsIG2P0zM
      IKU4GUMQguv1imAdbhynuWHgXTdydp5Xqw15kqCCQ1iDzHNEknB0jhAD86JCx0iwdkKyK4Us
      ZiTOEglYMyCUZuh6IJLICDqbxHnmRFXXVLPZe4SKUhLbduyfiNbrsiSEwK6zHNoTMkm5zHLe
      HbekKkEWObrIOR529DFSqgzrYVbm9M0IRI6nE1mWY5RiUxb0QvB4OPKiqnhzPvBZXWJkRmdb
      0iynGwceuo6rasbvd48UOqNOUlSMvBs6cq05nN7RRrioatqu49n6infHLX9xsabQknfNERkD
      Y3vibEYuUokUkt3YM8tK5llBoVLSQnEYeiKWQkZSPWcjUr493HErJS9SyXVdMpqe28OJpZYw
      jCgpuF6t2Tcn0rLmbddyKQRLrQlDy8lD7xxZ8j3KoFJK/vX/+D/zX/2X/8U/2ov/u5XIKacj
      osP2ngB0wYNQaOGokgSEQAwGoSfRQ5Dgk5SzHZEhcFGWqGDB9BADMk/YNZYkz9jUNfNzgxwG
      YqpxaYZLNY0ZkU8SNiUU3lpMZKoiKUVUCc4YVKKJAuo8YTgeSORksrFBIogUuSLInPNg0W4a
      rBFE+lODDQEXI0ut8M7Rj5ZdcyZJ4MVqzRAjs7R4ElH0bDu4rOfY45kQwzTaWF8gRUrwI1VV
      EQPTk4fA28OJVOckeY44H2ijIA+W+35EqIS278i05lVVsHMZt+cz7TDyOjj+8mLJm+ZM7z03
      qzW9McyylKY/8aqeWE17GzAq5yLP2DtDGRw+rxid5SrP6X1kPwx8LCMyCEqdoWyLSSr2Q4e3
      U8f8bTfw+nzgVZlSZgUJcOwH/HjmYrmhDm5yFJ9PPJ/NsGPPm77FjI7LKiXPK5T+Hlygfhj5
      V//9f/c+Q/OPdkVo+havDYfRofQ0gDIvKuRTZziVAoYOkUqQIPKUwzgSvOE610QfCG5CFbZD
      T2ccqYLNbE7fdxyOJ9ZVja4qzsbQ9T1aCJZ5ThQC45/Ib96jlSRJUxKdTA5fqRFKIYOnPzck
      eYpAYnwkkR4IOFGQSMW8TjDGTRQI52ijQ2c5DtBe4LqOx67jcrWcDvgi8rDbcblckYuJIv3Z
      SnLoI3UiyVSKzip++fqWzxcVicpROuNoLCmCR+f5fDHn/9of8MFxU9UMEfZ9w3noKdKcgzV8
      Vs/ojWGwnldlgQuOWud8dWq56zo+u7xGi4Q/HB/5pzdXRGO5nC+xUmPCMJXKhUW4EScz6rzG
      WY8FmvGIVvDQ9lyUkEuJA6TQXBSSEY9VmkxbvOn5whk+nCmEGbmYzYnBsW3PlNWMREVezWv+
      6vaWV6sN+MjzixWH3SMX82x6Pf6hVYHuT0d+e3/H1WzBq9WS4CzH9mn+UyokAWMmYtyiKhm9
      JeJZ5TlpohEqRSYJx6GnH8bJJpgkEz4kRh66jmebDadxpB9HZlnGvJzGEI3zUzI0BLy1RCmx
      PuDChFkXMZKkGm+mPHyiBEGmoCSJeLI3ygTJBPSKPiKl4NiPOCKzLCM6z7vzgc83Nzw0Z54t
      p/fgl+sVt4+PXM8LhMp56BtSldOftkQhWGY5Ks1oTKQfW5wfuNw8R4w9bQg8tGc+yHN66/nF
      fsunZUYbPCfjIEk5jyPHfuD5YsnPZgtaJTgNPTJGhNTkBG7PJz5Zr4kq5Ve3r3mxnCGjYKUl
      zzc3PFqL8Z6m6/F4rvKCQhd4JrfC49hSJJov3r5mUc+ILvBBVSCSHCEm7IvMagA0jvuuxfnI
      68OOH20uuShyhNKAoOtbbrueICTtOJALxWVVI4Ml1cU0x1zPvt8GePji1/yvv/kdrz79l/zl
      X/zDDsJ/Dj/A3fFMrjMO7ZnROwQCLQWV1ozWkicJQUk6N4nWUiURMeKipzEjOkYWWUkSAlme
      obMUZxwPzZmsyEmShFmWkzxNjnkfngR4gmgtgSkol6X6yTswfX8RI24c8cHjlcaGaYQyEZ4o
      pwySEDCMBhECEHlsTsyrikxqEjGpVn9z94br2ZJVlrPrB5ZFzvlwIJ/PqBLJ4zCwLgqsCxz6
      Bms8cxFItOTRRi6fCNhvB08IdqJlJCkLpfnF4z1ZltINPc/nC7qhh0Tyru3IhOQ6n7FOBfej
      ZfSBMi+YZ5p2aDkbx6ebZ3y5uyfg+Wi2gGBZz1e8OZ7onaO3llQJPl2tiWiSp6Gj+6GlUBrj
      LN883vHp5pJ3TUuIjherSxLbUZRLfJgyUGki6Izj0PVc5Jovzy2VnhhAMQq89cyzlMdxoLWO
      GD2bsmQ0gWcXa1IlaM7fkwpRX6x58/Vb/pP/bPn/zdX7J1gC2GjFIs+4znMQE/qw7QeOXYcB
      jtYwI2Wd5OhEghDs+p5cKX6+WBO8p7cDMU9w3tEfBh7NSJJornVB/h0uEcETVxH7xPLUOoUY
      QEjsYJBJQvRPgwfeIbQiLaYbgvae4CYj+jg4XDDIGMlTTes9o3PcXFwRxwFvBsYkwTMlXNdF
      hfOOXAF9y6AEyzBye7RcVZMBRouIQtLbHrm6xLkR7Y8gNCMZyzTyi+2ZuQJjLPc+YmLkn9Rz
      3iSCRTVjCJ7fPTywzHMuc82FDtyPnsNo+WC1JlMJp+YwYU2ygru+IYseXZTEYLi+uEGqhHwY
      6SI40/OsXLLrBlQcmYWcd09ao/PYkieCIk1JkFznmm8bxx+39yyzlHF8nIaXnGeRpZRZRm8H
      djjmSvLtsSHr7TTWKSePmJAJlYbf745468mLgq93j1zkBdF+3yhEkvMf/+VnPGw7nq3+XXXn
      P4YVAScEQisyKSYGkPMMviMrSq7KGmKg7XtaN7Lre5I049V6hRjHqeogE3RRYceRIXh0mfLZ
      asayXtA5x+gsvbOTdCMEVIwURU6lNd46RDLBW9Mkw7UtQacEO6DyAoTCGkvwDikCUaYIYJ4p
      JAlOCt7sDizKkjLLOe+PpImiqGseuxZpLUUi8d5yfzzwrCjZAdfLJV/db7maz7EhQHRYmdIM
      k1rJR8cYIkGk7Pqe0bW86Q2beob3hrWIPHjPJ4slMVrKrOJvdlt6M1IlCQul8DHlq9Gx0hkf
      6IQkOB7bM2qqNbMsKnbHHUOAFQ5dTHicb84HDn2PMyM/Wl2SqQTvp2rkrx4fuJnVvDnueDmr
      KdKcO39kluckKuP55oY/3r2hLmdc5AmolGNzYtt0bI9T0+toA+uq4C8+eMmxm+IjN/MZMUTa
      5szbYeRFnkOSMEs1LoITsJ7Nv88GsPzir36JoeCjzd+5+P3IL3/1O569+hGZPfPNoWNVKE69
      5yefffKnvbr/AUsAaZ6TZDnWefbnhug9N8sFMk4Kob21WCWpkopn9QI/dLTnM53zZHlOkNAM
      A8uq5jLPuT0eIJn8UtMWExM4N0KeZjhgMIaHc4MXgvD0NIjeUVQlmR3Jihn+6atTLUmKAqk0
      0XucsUSlaLzFjyOf3lxhfcD3PfWyZpSKbw9HruoarRTbp9eNZV7SCsm8rng4bHl5ucFZg7GC
      LJGYsUNKgc5zvt0/otOChU4RPk6bptQ8L1KOXuGNobcdm9klu/NxqpK5kXddy7O6RilNawd+
      fv2MNgQigofdDhcGtM5YVRWd66mLgqE5otWMeZrzTdPQ9lPvJJUJynvGqMgSweu+49Vmw6lv
      +eRigxOKr9sGEyPe9khRMTQHni+v+Ha/wzSGRVaQBctlmmDzjD6AdoFhtNz7CfU42MBvbicX
      2lxnPK8KRpVw3/d4IbDOse/ObL9PGRQ0/+yf/ZT/7f/4a8J3uWAg9jtWr35Gf75DVxn0HX2+
      pMrlny0M1w4jo3FkSrJO1NQBtI6D98QYKaRgoTTGukljpDSzNCO6Eec9qVdonWNj4MuHe1ZV
      TfSBPMmAiPAerGGIkaOZXm/id+I6Y5jlOZnWxDjhWUaZMIwDkUh0hoBESjUpf/IcKydSdC0k
      s7rGWQvGIKRgbx0ew8cXq8kV7C191zMIzWy5ZN93nI4HFkmGFjB6z9kaHltLM/Rc1gWV1nww
      W/Dl6cw6lWw7x8vlit46ghvohh4lUq6LAtufuO06SpViA5NDzXlaD39xc8ksz3nz+EA3OpSU
      lGnNJ8sVX+631HjeDiOb2QIvEx7aBm8MwziQqYSbsgSVEmPgth+QCJydpr6qLGff93y+2fDr
      saUHTu2BRV6Sish1kXLfWbTrSbOKU9tSppJn1YwQHHeDodYZo/O00WJloB0N3dBTqYRT6BFC
      8Hq3Y5FqUjmF7L7HBggc7vZYYTjsO66X01NA1Nf0v/0tVy9eErxDZTmrQnMa/jxkOCklTdfx
      fL4mjpZYac4A0XOR6glBmCRPMuuEfjTsh4E01azqBd46pJIQPe+OJy6KGbnSGO/YmXY6iCpF
      8cT3kcFiuo4oE2IANZ/T9S3HsUMoTZpnSD/dCOZaUS4u8dbinGeM8PvdnkQI5qlm0And8YQW
      UGUZHZAlCZlUBOdR4wTjGmPgarnkZEZcFFQSQpby+nBgtJGZliRJTlrCPMvoYmA7GD5a1Jy6
      jpdXN2zPBy7KGaduZJFk3PcN11VBMzqEyngcex6Hnp8s13x1OPLBZs5VNePoA61x2DDNXP/T
      9TOOzqGFog0glWKwhpVSdDGhtyPLqqZQchLeBc/JjiRKsdSKrCiZpRrrDIrAqT3hncU6z+V8
      QeMC2+Mjtc5ZKfi6G7hOcp5fPycGR5KkBDPwwbLkbdMyLwvmoiQQ2Z1PiOjphaIWgsY56lSz
      rOY45/l4/r2G4gNvtlt0EKT53x0ekXz20794/7vVagXA+k9xNf+/WBEIShKj5xwD28cDy6Ig
      TyRBRsgLYggM40g7DiipuF4uJxrcaCnLfOL/DAPL2ZxCCWIIpEIRkgQhJe5Jhn06PxJ9QGnF
      PEupqoxgWmapZlHPQKkpTqw8UkRaG3i73ZFmKUPw9NZyXVeUSYKSCjsaZJZhQuDr04lap1im
      ROrJGloEiRQ4AV8e9my7lo8XcxIUeEEpExblxD+y0tP7QK0LSmfwacrYdwSpJ62rStAqcLYG
      NRryvCQIyTftnsvFBmMHEqm4PTfMEsmzqiLIhN+8/hoQ5Crw4XLDqe94GAYKAn/oWqq85Nl8
      w2gtTX9EEXm+vKRvO84h0tmWeTIlcIUUFN4x9oHHrkMBiyKjSjMu0oTb3Z55qrlcX/Pm8ZaI
      4vPrZ7w+Nyy8JZUJQoLKcqyPpEIQvCNNU0SEhVKcheYqz/lqt0WH6QZ925x5Uc8nLP73ubRC
      iNy8+gkf3fzjrQIBPJ4OvDsduSlKFlVFh+cwOJR12MMR6z2lFMyrmiRNMd4h1UREtj5MJnJn
      uahnROcw3j0BlyI+iMkrnCiEkYRMo5TiYAxvjgeQE2u/TAd0op9+ooi1ARDITPPYdaRKsUqn
      OeTHrsVYixKCYz/QW0udJDx0DVZI8jynrmfcCMnoHI9tw8kaPl5tSLyhE4LhtGdeljR2hOAZ
      nOfjqxv60dAJyak9sM5SFnXN7enAq3nNu+39hD/RkbbrEPWMWb2gb4/Y4NnkBdEZ5jrjrht4
      c7plMJZlqtBJRilh11vkOPKtN1wUJbNyRp5o7pszjQv8B88/4GF/z3kYyIqCpQhUxRIrE5Zp
      OiHqnYVUs8xSFBHnLSMps1LxruupHm95tbpA5zXb04F5mvKHxwc+u7xBmKmKBnC5XPDQNsyV
      nMrCecFA4LFt+Ml6xTenM9Z6ns/m7NrzBD74ITbCHk8nljrjGD2ddcxSjWQ6G5RPc7xBfWda
      F4QnE0pkSoveHY+syhL5xDtRSqGEIHhPFBN1QgJpWaGYSHT+SVkkn+TXg3N4P5JKQYgTWDYI
      wWDtdN6wlhgikogIAaEUR2s4dC1SKTyCXGcU2QTtFTEg48QW/eWbr/lPP/6cBM/9qaX3ARUs
      PkAlPIRIKySrfAZC8O1xz6tFjfSGEOF1N3IzqwjBc3860QnJs7LCWcPBB+7aEzEEnlUzUgHz
      ouav7yeDZCEVyzLluqoZxg4ZBX84nSiUJs8LPlmu2Q09t6ctn60v8Wbki/OZzzdXeNtRqYTz
      aLmcz5BJCirh9/d3fDQrSZTEOcvvdkduliuqLCO3PW2IOFUw1xLjQOKwEf7v/Z51onm+uiBL
      k+n/NQQe9nuKRGISTSUUwRlO3nM5W/C7u3c0/UilJT/94MMfXhx66sQ6gq641iWHcaA3Iwud
      kqWC+WyOVtNUmPAOGyLBOxDT+WF7PvPsaoMUino+Q8RIcJ4gBCEEvPcEHwhS4sZ+UpWqHJXw
      Ho9OnLqWPuREIUFE3p1PlIlkISfeZ5UXaJVwNoadGziPA+ss4+fPXpBlGQGB94HB2qdhHkGa
      aWLwfFDPKKRgezgRUNRaERwI5UhUjk40uY80wfNwmi5mY0YKJRmE4sUi423X0g8dnbX8+Po5
      i3rGv/3qj5xdYFOUdMYyesdlmdEHx8+ePePX796yrEoqPTXKOhdIn0qgF3WFBMah5e584KPL
      Gzrj+fZ44qebDVZGltWSXddxUVZTPkpHvni45SrTnMyI9/H9Ifm6rnHdCaEUq9mS3hoOfceq
      nBGMJ8syPl8u+X+6e49mXbIzvW5tm/bzx1xbpguuATI6qKCm1H/nhIpgqIOiQDa6gELVrbru
      uM+m306DPITIISUEQVWO7vjGyS/3ft/nWetD23LfNyxjzjLL6YeRx+bMi90NtTZE75DaUovA
      /f6JbZYxTCPaGj4cjj+/L8DD5cTxfCK3ljEJshgoheLiHMWzj6ufHKWS1EXxl25ACJFT12GE
      YLte46eJbhjRRqOVhBgxWs8F9jyHEEgxEpJgGga8EMQokHL+QmhlsFnGaRzwPszTHjeL9jrf
      89C2TDEitUVLxauyolCaoipRz+JuIQR+mvBhxqW7aSKlxH/49BNvFivqokIiCW6AGCkUqKzk
      2/2e0vwXiYXnzXrDse9IJn/WBkVKqbhvW77ezZn+PkY+9x2GRGkMMQk2ceIhRH53c8P9MEc/
      +hBIyXNrLS/Liv98aanzgovz/IvrG74/PhJ8IrcZpRZ4Hwg+8ObqimPfsa6XTDHQN2c+nPas
      8vx5vKtRJiPFyJ/uP/PL7WZGxec1QiqiGxiT4jT21GL+cajLjAnFp9OJTVXy1LZMXcMvX77h
      rml5uSghBECCVDTO8e3DAxmBSmecp+Hn9wUAMFnBrqwJfQtScWJeiEU0l75jW9WMIfDx0lPl
      GVVSpBAwNmNpLV0/I1LKssCN879NZpmGcaYgtGeS8/NXBMiMxqaEiwMygiwrjt3Ex8OBVV6Q
      Zdl8vGkuhJhYZjlfbW/p/MzgrI2hCzNI6nyZBR+bsiATYv6kKUnXjzg/0aVIqTXXZcGQJDEG
      FAljJXFKDJNnaQxER6YsLcw+X204eQc2Y50Cd+2JiGKYJso8491+D0Lysqz59nCg1gopAv/i
      5RcEqTh1T7g4OxKyJJDS4LKKqe0JYm64fTo+cgkRheALK7mMIx7Fsiz4w8MDt8slzTRQaUlD
      4LqseLFc4ccJKcG1F2SMhGmAJJAmn//4/YRQBuEjS6XYDxNLIxBSUShDaS3vTye2SvFis+Np
      6EnRcWoaNsv1rJ3ygUPX8c1mx4fzI7bIefHX6AT/z/YIQHtH6Np5ZaU115lGmZyny4VlXeJJ
      VGXG7XpB07TcX84048BX2yuaKaCVghS5dBNIBT6h3UCZ6znbo3KwCh8iwtoZnTj12KwmSsnn
      85FhGim15OHSohNUxvK2KufjTUrsh56F0QihZiujhEpJRJaBVDxdWvYpUVc5BOj7nioveVUt
      OB7uGZMixojFYzJDjNDHkfPliBeaTGmyXLKUJce+IcTAvusotGFVKC6T5VW9ofOe3z88ss4z
      7i4Nj0AuBTZ51osFbmgZk+TsAtvckAvIheaqKPnHu4/s6hWRhBGBP7UdmdS8WS04DCN3Xc83
      qzXN6PjNes0YAiYF9pcGIxXL3OKGCW00fhpQQqGqGtW18z3LFiQ1V1f7aQ4aail4s93wdDly
      7DqS0hip2Jqc6Ac8gmtjSJnh+3NDf76wLQqO48CurKisxOgbfn/3gZfV+uf3AiTmgnaWF8gi
      J3jPOI6Y6cwuN0Sp2Q89p0tPkyLXdU1lJDer22fshyBj5gRlxXwWn8aRKXjaJpJrhZaC2E9I
      Y2BskCISTM77puE49BilWJqSzBh+WT47A0yGG0ca5+jGkW1RzPZHIlJalM0YJo93I8l1rI1C
      mIzHS8M4zYrTvm/ph5aTj9y4QGkV0QWmKTANjqQzTiFxlRtWi5p3+0dqa9jmGZM2FJPnl6uK
      d4/38xcxTuyHkesy49D3fLPe8J/2D2ysZZkZkiropOBuv+c2L2hcz1VZkivNwzgnQc99hyDy
      fduxzXN+uygoM8sfe8ffv3jF6XziZVUQUkQaw1NzZF3UNEOHzvUc2UiKvN7MQnHvAYEu6xlM
      Fj1eZ8QYsAqMzUgpkSnNXXOhyisqZciSo89yvID90LGqlny13nIYOj42Z6xUCCuYnKMuSm6r
      isP4MzwCCaDIM8gyUkwYKTFFwZTmLakKnq3UOA2nGPn93QMvlhW1jGSZJgrB2TlS9CyERUdP
      bjVZVjMNI93omQTYzBLCxJgCfRQ8XR7YmIyvVytqmyONxnXz6n0KEIeWgYBIgnW9xseEc/MU
      SGug6xAkZPBEoeh84Hx5ZGks6/WKMcw6JyHASEXrBtrmws1iTT+6WVgxzbFftOK+OXOzWpOl
      Gej1+093/K9ffsVwvKOyJd00QHScpoE2RUKUfGxObLOSlbUsraQlMvSOLnpUmFOyycMpBN63
      zfx1dD1nF7mpa369u2KVWT5eOnarmnPXcLusCS7S9A1OwtVizWN7YleWGJsxjnMaV1qLEIIk
      EkJKQBKFxw8TIlNkmUUlTxKSx/ORIi94vVhzalpOoWGZVyzLksfLgbpa0oWZUOFjZFOUmCRp
      hh6pBHnb8Hq9o318/Ou8AJ8+vOfm1RuUgOPxiBaRx/PwNwFjJcCHSPIBN80U48IaNAmGERcj
      Js+QRlMkuF2taaeRb/dHvthdEWOi0Bop4PG0JzLHFXLpnrfAnj5Enk6nWSIdIFOK36x2KKPR
      WkFKTG2LMBYRZyzvIQRKm5EriVURoSV+DCSl5jK8EDgfEcpydiNKGnb1FiR47zAkhAQhDYbI
      IkzIas3dMKKFotaC/bFlXdXkSpKipNaKbgz8cHjkm9UKd3qgiQllNETNkAzXeuTJyTks5yZy
      AyuV8cklfpUbfhxmfKMS0CDphSQqSV6U7JsTVihelwW3i4ohBC6nM1lK9MPEVVaiTcY0HHAy
      sTQ5p+5MXVRYY2mHQFVX4B1xmkAmpDIgFeGZ1CeNJYwjyiou04R7vuMkn0gCci0pdcZFgPEj
      r7bX3DUNtbV8OM+d7XPfY2zOTVXgkuLSXzhc5una/3cwVv/IQM779594uav4pz/+mavasrh6
      9TfJAsUQCZPDiRZhLVob2mEkxIjJcwDaMOP1DucDmzynzivGGPju8yc2ec51kTONIy9WG6KA
      H/dPjG52gG3KklxBnlf0IfJmWaIFOD8Sk2MaQQSHzDJEdEze0frAm9WS+EyV7npPigFjJMF5
      glBEHwkCIvOxLDmH0BqlFFKWeB9wzuPGHu8juigR2rINgd5a/vDpE1JrVlmOTYEmBI6HJ+6f
      o8ZXheXSjcQo+NCc+WKz4w+Pj0x+5M1yw3eHPbfLJYe+58/NmRfLLT9eTvTBUdqSWxPZBsug
      IjHCuWvpYgIRsEJS64xLc6QPcEzwzXpNpgTn0wOdtLy4uqU5HnAhUrhILxLKGsZpQqWAICKi
      ZvSzny24gSQNKc68uY+P9yyrJVnyeCkRah43Z3iCqbjWcNeNrKVml+d8uJxRQjK6CZMkQ5iQ
      UZAQ1FmBUoHhr3EE+q8tkXdPR3zfUL76hp/ev+fF9fZ/fBZISTyJZDOi9+BHtDHoLCM9Exgq
      Kfi433O92mKkgOTJk6a+fcGpvfCfnp643WzRMXDpu1lMkYPSc86lDbCqK17nOZPz5HlGIWDq
      esZxwssM2TsaN6HyjFVeME4TgoSWkiyXpCgICIQG/MQBT65ztFC05xalFVbI2WIZ4lyQiQFp
      LE4rohBoP8sg0uR4U9UYCV174se2ZVFUPLjA7XoL2pBE5GHyFDpHK8PjMPI4dLypF3xsTlil
      +NR0/GpZUxYFN3aODHzuBnI1chQZS+l57Oc8Te8dN1nO7WZLJQQfDg8InRO1wKTIsT1RFyUt
      Gbf1Ate39CmxyWtsUeB8oMgsbhqZfESKeRFpzZxklSZDSsXd8YhWkhoFLmBzjS1rJudRfkTk
      NQoPquBmkdF59/wls7PlM8x976ZrGUxOriFMkdoYbhb/nY2w/zfP//A9wPnEw/6e2uYkBOt6
      QW6eVUfO4ceRwzCwqeYzaESglOQy9vipwyeFl4p91zE6zzdVTWEMeW7wUtCERK40x65HCcnK
      ZoQYUcGjswylFXGaePSe0mYU2qC1+stcP8aIG0aEmWMSp7ZlDJ6rsngu848zY0doxnGa7whC
      EJRmP45UxvLh6SP1YkNzOVKXNbfasI+R17srgg98t98T3TiPPK3mRZVz140cm3n3cBonnBA4
      N/KvX7/l337/Hb++2vCpHXlbaF5XNU0IHKJCdw3Lfn61OAAAGDpJREFUzPJDNyC0IpeS9+2F
      wmTcFiUpet6uN1ymgMXThjnGcR4mHkfHm9WGMnmQhqgVWZoBVdraueJo8xmHMowopbBK8N3j
      Z755+YaH05mF0lglsEWJ7+YLNybDqpmULdX84ngsxsw5qI/Nec4rR2jGkSrL8GEkCcWuKPBp
      VkrV+J/fC/B4ORGnid1i7o6e2o7Be1ICrTRJSoyeA2H9OCCEwE0DSmuMMmijWGhNGCbayfFj
      15HLGa5llGFblsCMVoxCcOg7cI7tYolJkSgTbYKrskQI/iLbCyGilUSmiLYWFwNPlwulzbHP
      sQw3OQQJowRaCYgJ1JwdciFwXZUch4F3hz1fL5a4pFmUBft+YBCJr9Yb7k/H2WHsB1ZlxZ8e
      70hICJ7f3bzkPz58pjIFD0PP66rgT4+PfHN1zb69sCtziJGXmeFxEjz1Dduqou16doslQhv+
      6fN7xgS7uqLMS67zgsP5yFW9JAEyOawtSFJR+on3lxPJlAQl2eQlWZrxldqPJJ2hUiIKQV7k
      eOeYvOf3dx/5endLYSxlkZGGDl3WhKln6N2sog0TJsvQWc4YPM3kcCFx11xY5vMApJkmSmNR
      InJVLzj3LWVWkSOQQ4Mpq5/fFCgBY0j0Y0RJQWEMpdagNPuu5cPxyKKsCSkinm2PdVaSSYXw
      geQ9Z9ehJeTW8LbK+Dx5klTkJiNIRW7NTJxLkatYEPKS+/OFk3Ms84KbRU3n0nOWSCCkQYhE
      PzlCSDRdA2GO+2qtIM7Mf6sN0lpGHxgmRyBx6RrWRQ5JcNdOLE2OUgqXJKuynLelWvOiyPm/
      Pn+kmxzr3HK7WDEOHa+XS3qfqAT809M9UmjKMue8f2StJaXNkSkSUmQjJUlGvusTa5PQeYmf
      HJWxtENPbT1Ngq3N2JU1WkraqWcUhnYayKQimYIUE3mawWN/9/ItHy9HYpIUWtONHWEKJG2x
      w8RiUZFJQZzmHvQw9SgEVZZT5nZW26qZqBFiQmvFMPUMIXLZ75meXQ5Lqzn0Iy/rBYU25Hbu
      exyngUzOaJldVfHH+yd+uVyi8gxVlD/PLwDAtqwZh5GzmwgIvBs5tA036zUxRHT0LMuKyScu
      3dyckmL+1V0vaiKCp+ZIYSzLrMALwXEc5nN7gitrSWke2aUYOafIsih4ujRMPnBVV2g5L6uE
      mCPVo3eMJBZCziwe5sWOep46yeeoRQyBo3f4EJFArsQ80ZkmjpPj288f+Hp9Q17kdMNEGzyZ
      0bxdLHjftOQKFlXFT/cf+fr2LZfLkcEH9m5CSsWf9k+8yjPWeU0XAzI6FplllRzelOwnx+gn
      bouCIsEPfc+vlwv+cL7wxXrNd8cDhcp4s1lRKIMPI+eQOA0jlVBcK0hCs9ptcUPLOQoyIWjH
      hhebawiR3ieSgtOlQVuDlZIsBUYE95cTX2+uMVqRCLQRnk5HxpSQMZILKPOCqqwx3iON4b45
      Y3WOQFAX2V/4r2VueGzO9OPIWmcEpXk4PfHLV2/hrzEF+p/tScDj5YJzEWU0UmuIkfM08dXu
      moxEYiTKub+rgetFBUIRAQT8dDkRY2K3XGGURGqFdI5dUfHUXIiT42PXUeQZyzynIbLKC4KP
      bMtZ5HAeegbnuV7WlJnl4bCfhQ1JIoyZ/9hTmic7zmGshckxEDmOA7mQ1EqSK81j03KJkarI
      GUPPIsupFjWXbqAsc1LwvC5qPh4PLAvLJst5t3/kplrxz58/UivIlOXUDSyKnJWxvN3tePd4
      IMsMLibWMjFGyV3b89VmxY+tREwdP7jI319fc/SzzyxGKExOqcC4ics48vb2Bf3pxNYmro3k
      aYyEEOmOZxBwkxuEhDK/5uFyJleGZVnOI+arHUPXI6zhz493rHXGp8sFnRUzxjIEapNxlWVU
      eQkizGPjKFDWgjE8HI9k0lBqgTQZTTdbQVeLguQdW1twGCfeNS2/vrkiVBXvzydeV8XP7wUA
      sErNZ+jgqW3GME283e7IxSzHlsUGIQVh6Ag+kMRcMvchsh96bqqaqqqIcebyXMZx5vb3Z0wM
      ZHXF2XnaceJzs+eqKvFI8swilMLHxCov2OSJ9/sj7TjwZrtlYTOkMc+Lnlm4odN8qWvGiXfH
      IxrBzlq0THR+YDKG29UCpRTf3t2xkpJBG5Y2I4wzG+e2XuBTYBDwtizYty2r3BKE4nWe0QXH
      wQdiStydTvxqvSJOCakleYKTH2mD4fMw8Q+vXtPHROmfuJs8N5stoljww8cP/O7qlh/OJ7qx
      53e7FY8ucLu75dPxjBs6ciVx5KzKmcJ96VvGFHnsPHVRIlzH9XJNNw0cmhOLcjkzkazl8/6B
      v9ve8Ni1KGBrLMGPyLzExUjvRpJ3VEWByisQgrFp6aTEZjkZoMXc2YgpUeazgDu6AQHU9Yov
      ysi3H9/z2y++5sPxicdh+vkdgR4uJ8a+ZVfVWGMZx5F2GtkUBSovEVLNE6FhQEg5H2HCXItM
      zy5dlyAmgc1zvI8zOsU5gpuLG+e24WkaEdqwyHIKqRmCJ9OKmnk+7WNgP07z8ssYRu9onafM
      LNs8exY9jITgeX854/xc1OhSwsu5rlnoWdghY+Dz5USmDdvFkj/ff2Sd1RTlTIm7Kgr+j3c/
      sluUyOC4WS750LQgNcr1LLOCH9qeT+cj2yyntIYYE7kx+LElxMglwFVheVlX/HA6oWKiF4rf
      vHjBwzAxeMcqy3n3eM91Zsizan7ZxomYEghBZgsQiUxotDU8nPeslKVa1JynCRcjbuzZLdcQ
      I4ehZWELuuc+gwsJmVmeDk/86uUbonckoZBuAKAdWkY0SWliSqQU8THxYrXGGk3oW4YkkXF2
      QJS5gghjDAhliVOPUIqf2oYvV/PO42f5BVBCI0NiGC489h2vVgsQiTB1kATJB1ReQkqMMXAa
      RtbGoMX8C22VZpwc09ChEAx9QCpFVpb0w4BXmm+ulmiRmJLgp8OBTCi6zvOZRGkNlTZcVTVu
      HHH9AAjKJAjDxJ/PF4T3+BQRmeXFdocTEITgNi+Qz3HfoR+I3vMw9GQ242qxxBpNFzy3EjKR
      KKXi49OBelGSS0HSGf/x/mHOOGlJcBIC/Lh/ZFeWfLm74tS3dN5z7hsuzvHbzQ7ZHvnV7op3
      TYPzHlTGbV3xh/sHKmPYFBWfTkesEFhbUpiMQwhkzGCA17cvkSnx4XymqAz79siqXJJiwvUD
      qzxDZRnDVHDsGqbJodTcekvBsaiWbIqcpu+QSsE0EJ7rm0LNyqZ6sSWbPNpqYgg8NQ11gsvQ
      I7ximgJxOJMVFZl8lhxaS56VTONEbjUBzeuy4I8Pj+wWq5/fCyCARIQs56nvuL1+wRgSOI9M
      kRQ9UiTC5cAxBKySM9M+SZy2RJ9I04AiYYVkcoEZAhK43+8x1nCV5cRhYkggROJ1UXDyAW00
      JiSsVlyCe2bqGPLMYJRGxsip7RDBc4gen6CMkSHMG2aYqRZumpAxUOY5hyFgMstNUZJi5O54
      wArJ9dWOp+aCTYKzG6nKglxGupBY5znd4Gjdhd9e7/h3nx5Y5gWvNltaN6KUJgw9VsKbuuSf
      9w/85uqaz92AD4mlteTVmo9dwybP6MaB8yTRApTNWAnDQ3Pki/WOqCLW5vRth9WKrTV8Op8w
      KiOERF3OtOup65FpBgpsqgV2KejaC78/DKgYKOzI3nteLFfcX44kpZAhgpsIwoGpIUZsZhDG
      8HA5c7WZF5nTab6z2ZiwdYWLgs6PHJzDjAPCFkx9S5EXwIgQgk295Kenp5/fCwAz///x8Y4y
      K5j6gfmQJ2ZgllC000TjAmstiUlxGANGXBCk/6eMEhMkyLUiScmntqM0hpyE8BNZUf4FDhNT
      om1O89YxQKkkRZS4lBhDxPmeyzAwek/jPVIpvlhv2FUl0+R5aBqatmNbFGQpYoscmRUcz2ee
      +o5vdlegFA99z26x4NSdkUoxhcT7wyOrusSEkcMYUVKxEJJgFZvK8o9PJ85uJNea16sN//nT
      ewyehUxEqWgnz1fbLZiMaXCcmiNVORPh/uHFSz4e93xuW16KGVL7VVURJCzNEi3hInNuchAo
      uvaCtTmjC6zsTLTen1us1hhjUX1PVlV4BElI3vcj/3K9wOQVT8PIu8MjMQZC9HgXsFozDS0x
      W2BTROcZpMTH/Z6rxRKjFVMIXIRg6Ht0nnHuRjSJSCL6hC4LGAe29YJhHIgCkBoZIm+vdn9d
      S2Sda3744QdWdcGpD387S2RMbLbXLI0hTMP8n5HmdtJTP1BYy1flTGUWMHP95YxI9F1HSDPU
      KkZPM/TP0occYSRJarqYEG0zY1VipHOBTVbO3jECx34kThN1URJSpPGRcwxkRvP1ZseqLGjd
      xMnNIrlNXWAjnILn6BzF5IkpcAqeL9cbHHDsWq7LiuRn1unD5cK+73lRFHxozmyV4vVixefJ
      M6XIlVWc+3mbbaRim+f87z/8iV+ta0YnOU4OvAepqMsFtbLs+wZrCqYkEFPHuTfsh4H/5eVr
      fv/5A7XNOcXALzZX3O33mHKDaBpUWeIuJ0y15KnruK0X9N5xWxbkRtEOE4i5s+vGkSEE/tA2
      /OLqCjmN87JwGvjXb7/i8/nMYXScQ8AMPVFAmkbOCUzw7LuOUkgaP8HQo4CqqqizHOE9sqoR
      YcJ5TwoBtEVIgQF0cOhySdAWazU+/jXCcP+VJTLVGcdLj9IaRfqbhOF8CFzGgeu+pR018jkT
      0oyz4ujlukYAzsWZ0pZnRCBN07yM0RoZA2hNN3hSteSLsiRMI27oSW4gxYiLifuLY2kNy8yi
      RCB6T/SRKnieNHzXniifL8iv6iVaKYKEfpywCGKI4EeQgmMMIAXaGO66hiEmXtZLxpTomoZ1
      ljO0PULNxOk/ff7MLs/54dzw1WrFKrdcoiS6gTwruXRnJjIGPwOoZgev4OwiJkl0mrgfA6+X
      FUtjSW6gD57L5CiF4DfX1/zz0yMhwYfLmV9v1nwaAl+tVnw+HsFY/nx/z5erBX6acCi6tscJ
      wcZoMqNoxoFFllHk2RxINBo39lyC56XN0NOAQM4wMiFpz0c2WYEVEjd0nP3A7eaWzHuElDyM
      juuiojaa5OZ2W4B5oZkSLgSyGBi9w1pLiob2eMIWBT606M01Uz8gp4HBSx667q9riexdZOov
      hEXB4NPfyBKpuFmuKTdbUvRM08j+fGGzXJPZeScQpwmrZnm1C5E49mgxz5WDD2AzHo4HqqL8
      C+9TmowyL5Fyjj8I73hbRaLzyARxdEQpOI8NlwCVtaxVYkyOm6piXZRzfh7o+5ZmHFmXFcVy
      hYuJWgj8OHFyE8uiJvOe/dBx3zVU2pKruQjuUuSubciygpASX+621EJQ1is+HQ6zhcZ15Nrw
      7nQhpkSdZ9wslvPdox/pUs+fzg2/u3nLrsiIbmAYJ9oImbW8XSx46DpCSrwtS4YUedeO7Kxg
      9IG3V9eklPj3339HaS0rkxGjZGTgi+01IYGJka5t0NYinUPkGZ+bBpUSlbFcrddM7QVblhwv
      Z262O8ZxQuNZWMV1XSHVclasPtO18xTJxfPC0hi8UORGMXb9bNnMLL4byKyB6MGDLgtE8iid
      z7XXPMfHwIfjgcz8DC2RD5cT0zBys95ymQbiOLJdrkh+ADFvbZPQhBDnwFjwJG1niyQglOA8
      jtxst/+NZR5g8I7zMLBUGh3nDH+Qcr4k+om+61iVNTZ5ejexXayxUtGPPaehp1aWXCu80gg1
      F/WnCNuynMs2zDS9KQaMVLgQkGk+/tx1DaRILRXfnw78mzdfsMgsfUjs6pLLFPjz4YnbwrJI
      gXfNxLuu4cv1hpvFAu9HUhK4ruUfn554tdqwsjl1ZlhLwbvzkR+7kf/t777m7nQhec9+6imL
      gtwUxOB4s1zy8XymykuCnxDGspaG49jTjxPX65qlzlDPKVlInNuW9WLB/eVCgeQSPAtlyGRE
      ZgUpRYa+Z7PZzItBH/ju/gO/ur4mMk97upR4uJx5u5j9ZF5qhBRYrZjGiawomHyYiRx+Ig09
      EJB5wRQSKiUQmqQUT+2FwQdWRcVaiZ/hJTjBwzjw9PkTSyQ36xXT0CJ0ThinOVIcn3cAQiKK
      ihA9IkWOk6MfI1eLBadhZnn+l+fYtiTvWJqMxkaE1nRuYt91pJTIY6LSlsvYY/OSoio5NA0p
      BrQELQSPbsAHwyZXyBSIMWFi4OPjPZ2I3JQVbe9wCayS5EqiY+IXmzWvq4pjP+DUHIVeFSW9
      FCxFT+hbvj+cqa1hKSQPfced87xZrghpjgRYKbk7N7TTwHVdU8iMQsFtJvl0afnnc8O/un3B
      sR9xwXH2jqt6RTMNbArFKYG1BSvbURrFAUszTBSlokChq4KYBI99y0YIbJYxTo5RwP3hiRer
      FR/PZ7baIOJM1vZdwzkGXlYVrjmhsvlXOqWEEBKVYETQNg2/2F1xchMoiZ2meeHoJmQ+kz0S
      iTg5lAhgNGmKOO/JbE4/BfbDwBgc11XNSihsCgj1M9SkJiDFxHVREJXgx/0DLglkjKyLHAWo
      vEBKOTejxh6p1CyKLiuulSCGhNQWI+DSdfTO8cVyhX6u7T227VwwN4bf3d4inOfcNrQxcWsy
      Cs2c368Xc7sJASJyJWGcRg7DyKaqyVVGROFlA+PAh9OJ0Qd+u9uxsAYSOCk4d/OI8cubHS7A
      1M0Z+TD2yKKmR3GZHnhbWp66hs99IMTAxlqaaaJSksduYAiec5zP6AtruMkT3sOncZzTpSFx
      fzrwdntFd55BAVstue97fnF9hQw9V3XNu/0TVVaxqHNEiHxsj9R1zcZoTFmwb07EXiGEwCJJ
      WcaxH9iWNTEJMg1DN/uVZQAnDErN+Shrc1KClGCaJk7TxKurHc4H1nlBO05ccCy8o4+CRRYZ
      B4dAYPOMFCbCOCKUZJgcTYRx9GR5xlqXqBBRaRYOnv+7/QD/P3ikgFsJOzP3TF8uZ4xjd2k4
      eU9SM9tzYSx5SPis5DAMvF6tkMwjVIRg6s68H0aW9ZIXqxUxJT6cT4zesy0rfvl8Dh4uFw5d
      x7KueZXnxBDpxwkZIM8lQku01CAVzgeUUVxryw+P9yA0yMS2rDCZxqecf3j7glPf86HtsHIm
      NOzyDKkNyY3oENBKMyhNpuZA3h/uP/DVZkfvZvJbmwJfbFYMbmBdFLRty4fDE7ao2BjIgEIO
      5NmW7x/v0BGMBm0Ea1nw7396x4vcsqkWrKslbXdGE5FZxeQCxhZkVqNkxlNz4na7Y5XPeZvU
      TxR5Tjt6ZGZJCdpxpMosuTGz9tUHsqJgf7lwm2U4N9+fFArtHERP3448eMer9Xqe8RtN249k
      WlKWJftxxHUdqolEpVks65m87R2NG5lUho4TC5EzaljabMbQh4A2iv00ksmf6RdgtAa9WEKK
      RDeQnKfIM3JREKRECkHbd/wwDHjvuSpy0ujw3iOt5eQGkpS8ubqmdxPffv6IUoq32yuMlCTv
      CePI4/GAynJe7HYzDS7G2fIowWcFQ0yU2pJi4NKemYKfN9Eh8HZ3y1N7ZphGEpI+BX59fcXh
      9EQ3jCzKgsE5oq7Qi9Vfdg4peMTpyNCdWCjNj5eOGBKb3BLSxH84tghjeJNb/jg6ssjM2peK
      2mRc2hM3Vc2iWHBqOz72I29XWy4+cpkSSLitKr5eLnkYHCZ4SiFA5UwuorSiKiqGoaHODOdh
      4MvbG6JzrPMcHzz3bUMmZvLysixpxpGntmWZ5RgF3RCJmllWoQ3SjagYCX4iGUNMkkP0fHm1
      Qz6XiPphtucM4wwpqKRCbja8f3jkdrMhTBOH9oz3A9vNLVXwJJvx+fGeV7trJucQgMoy7vqW
      hZyRND+7FwDAIfl4aTAxsbIWrcysSlIgUiAGaKeJK2up6xqXEk+TY0qR9njk9XLJ4D3fPT1S
      WMM32w3BB0LXIJRiFIpL23K1u0IMA//NHCElVFXhvacdWp7OT1glWZUFlZpfBpEbTpNjs1gz
      uMD3T/e8KAseLhdKk7NYbJn6ntV6ifMjH+4/UllDbRTi2TVAuWYfHd8fz/ybr39B7M788XLB
      a82vFwv2UyIKyYuy4P+8HMiLGh1GSq3JMoMYB749HPhiueFD0/Ev37zmn+4fGMeRV1XJkDR/
      vy3586VBoTm3FzbLFY9ty7YomQS8e3pkVc71RmMMTTtzSt8slggxJ13/+PTAVVljVcVD28zx
      jazkcf/Eq+WCSGCUCiUNJgZ8SHTB85v1+i9s1pgSmohSAoyi9zMqMvrI1WrNTw93KGt4ayWm
      WiNC4DKMNC7warXER+hGT24Vd5czL9freSQ99vzf5A9qsc6PtzEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='PER Geo' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='PER by Pick' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9V5BcZ5bn97vpfXnvHcrDe0tYegd2N5vN7plZKWb2QTGriA2FFHoZtR42
      pJAiVooJKXZDo9VETJPN6aYnQQcQILwngDIo773Lqqz05ho9ZFUSQGUVsgpZBaIrfxF8ACvz
      3JuZ99z7feec/zmCoigKCRKsU1QrfaOiKMTbd54Vm/N2EzbjZ+9p2VyxAwDIsvwkb18Tm6vl
      AJIkJWzGkad1LT2RAyRI8KyTcIAE65qEAyRY1yQcIMG6JuEACdY1CQdIsK5JOECCdU3CARKs
      axIOkGBdk3CABOuahAMkWNesmQP4AiLf3eymd3RmrQ6ZIMFjWTMH+OJKG5vLs7jeMozTG1ir
      wyZIsCRr5gCCICBKMoqiIKzVQRMkeAxr5gCv76ukbcDO/vpCrCb9Wh02QQJkWeHr65388fsm
      Zly+h/4WkwMoYoD2tjbGxsZpbetEXEF5vV6n4ei2Egqzkpb/5gQJnoDOYTtpNiNv7K/i7I+9
      D/1NE5MFtY7UFBsulwu/x01IVhCQkWU57mKTeNuctxVvwYUsy4iimLAZR5urpQpLtxm51jzI
      +LSbvHTLQ+cuxKIJlnwO7rUNkp5ixeN2Uly5EaNGQZZl1Gp1XE843jbnL3yVKr6rPVEU0Whi
      u38kbC7Navzuj9r0+kN4/SHSk00PvS4mB4jlAPEg4QDr0+bTvJYSibAE65qEAyRY1yQcIMG6
      JuEACdY1CQdIsK5JOECCdU3CARKsaxIOkGBdk3CABOuahAMkWNckHCDBuibhAAnWNQkHSLCu
      SThAgnXNshRhdrudts5e4j/LI0GCp0PMirCUZBtjI6OotRqCooxWUBKKsGdEafWs2Hwac8Ji
      cgDZP8vgqJ287HRmZqaRZNBrww+PWEUMsqIwMD5LZrIZk0G76AkLgpAQxKwzm6vxu8cqiFkz
      RdjX1zuxGHV0j8zwztE6DLqFX2BCEbY+ba4LRdiMy8ee2nzSk0x4/MG1OmyCBEuyZg5wbHsp
      H11oJc1mJM1mevwbfqYoisKdjlEuNgwgSolwwLNOQhS/TNoH7YxMOslJMzM46eL49rK42IVn
      Y7myGjbXxRLoLwWNWoU/JOH1h9DE8QdL8HSI761hHVCak0IoJOFw+zi0qehpn06CJyRuDiDL
      CrKioFH/ZT9UBAGqitIRRRGVKtHm91knLg4QEiX+dO4+giCwqTyLupLMeJhNkGDVicvtenDC
      SWluCm8fqaWpeyIeJhMkWBPi8gQozEriZtswXcPT7KktiIfJBAnWhEQYdIU8C+HFZ8VmIgya
      IMFTIuEACdY1CQdIsK5JOECCdc2yFGGzHj/d3d1RXyPLCiFRiuvJJUiw2ixDEWbFbR/H7nRT
      LMug/KQIC0kyH55vRS0I1JVmUFucseITSijC1q/Nn7cibGyGnKw09GoBUVLQaX5ShA1MzFCW
      m8qumjw+/KGFTeU5Kz7hhCJs/dl85hVhkiTz0YVWAiGRvXUFlOelrupJL4eEA/z8bT7NPEAi
      EbZCnoUL61mxmUiEJUjwlEg4QIJ1TcIBEqxr4rKQkxWFb290Me3ycWxbKdmplniYTZBg1YmP
      HmB8FotRx9uHa/nhbl88TCZIsCbE5QmQkWzm3N0+Zt1+irOS4mEyQYI1IW5h0EBQxOMPkWoz
      rvhkEmHQ9WnzaYZB4/Yp9DoN+ijtDhMk+DmTiAIlWNckHCDBuibhAAniyqjdxRdX2hmfdj/t
      U4mJhAOsY+51jfHe6UZut43EpRRZURS+u9nNoc1FfHOjKw5nuPokHOAvlEBQ5M8/3OfPP7Qs
      2o6+qXuCd4/X0z44hRyvWnwBZt0BBOHZ6Jq3LEXY2Pg4rS1thFapK3hIlJDiLFx5FEmSCa4D
      5dr1lmF2VedxZGsxFxv6o77GZNBy+lY3Wo0aVRwuWEEQOHmgmr4xBycPVj2xvbUgpjyAoihM
      jo1gsCYza58iq6AQtSIjy3LcPH1o0sXFhn5kReGVPRUkWwxxsTv/8QRBwOMP8dnldtQqge2V
      uZTnpazYrizLcc8txNPmqN3NhYZ+BAF2VuVRkpO84DWKAlOzXtKTjMv6HX/un32eeaHNUsTk
      AJLPQUP7EClWAz5Rprx8A1pVfJMXX17tYH99AdNOL6N2D/s3FsbF7oOJsIbucQSgPD+Vb653
      8tahmhXbfRYSTB5fkJAokmyN70CSv6RE2M9GEDM16+Xra50IApw8VI3ZoIuL3QcdIBAS+fRi
      G0FR4sjWEvIzbCu2+yw4wLNiM+EAq2gzUQqxuM3xaTc3WofZXplLbro1LjZXQkIRluCp8O3N
      Lp7bXMyZ293Icnw7MjwrJBxgHSMIAtMu39w/nu65PC0SDrCOOXmwmsEJJ28eqI5LGPRZJFG+
      uY6xGHUciFO07Vkl8QRIsK5JOMAKECWZkJgYkv2XwFNbAkmyTNfwDDmpFmxm/dM6jWXj9AT4
      7HIbArC3roCyFXbBS/Dz4Kk9Ab6+3oXD5ePTS634g/FttLqadAzZ2VGVy2t7K2jsSQwEfBr4
      AiFa+yfjUtP11BzA6QmwsSyLJIsBXyD0tE5j2dSVZHKvc4zPrnSwpzb/aZ/OukOSZT4634LX
      H+KTC61PbG/VlkCDE7Pc7RhjV20eWSkL+wSd2FHGqasdlOSkkGJduZB+rTHoNLxzrH5VsrYP
      0j4wRefQNAc3FT1TS8TVRpYV1CoVdaWZ3O+bfGJ7cXkCKIpCQ9cYX1/vxBcIIUkyP9zt47kt
      xXx7I/pAjYxkE788XMv2qtx4nMJfFE5PgIbucfbVF/DVtQ4AJmY8fHGlnYHx2ad8dquLJMmc
      u9PL5caBqBoFrUbNlg3ZfH65nUObip74eHFxgPEZDwPjs2yvzOXr610ghOtM/unLH5n1+ONx
      iLggSjKfXmrj/TNNTM16URSFiw39vHe6kdb+J7+bxAuNWkUwJDHp8KLThmtZ5ssWLtzr+4ua
      xOP2BfngbDMfnm/BHxS53DRAbpoVo17D3Y7RqO+pLsrgV4drKcpeWOK9XOLiADqNGo8/xKTD
      g0GnQZEh1WZid20BZoMWgN7RGd473cjpW91xnwQSK639UxRnJ/HG/kouNvTj8Yewz3p593g9
      P7ZH/7IBAiERUVq7sKfJoOX4jjKmnT5e3VsJgFolMDnrRVF4ZtRWsXCpsZ/j20vZVZ3HjZYh
      TAYtU7Nepl0+jHrtqh9/eYqwsTGaWzt5tG4qxWpkf30h3kCIF3aWoVYLWE06nB4/6UnhWvQr
      TYP85ng9kqwwNeuN+weJhYJMG009E3x7s4vyvFSMeg2+oMjX17si5/koHYN2Pr7Qyh+/b8Ll
      DazZuWalmNldmx95Arx5oJrxaTev7a9Eo/7LSd9UFabz/e0eLjcNUJGfxvbKXJItBgozk6gu
      WvmorViJWRE2MTbCjNtPgU2HPzmfZM3SijBZUZhx+Um1GRGAiw0DuH1BZtx+3j5cs+iPGG9l
      0IOKMAhrZQOihM0U3lhKssKsx0/qAxtxf1BEr9UgCPDZ5XZO7Cild9SBKMlsKstalfOMxaYv
      KGLQaZZVt/YsqLfcviACYDbGRwMyz1KKMElWECV5GYqwjiFyMlKZmnFSU1OFiuXVcCuKgsPt
      x2LUodVEf8/PQQ9w4V4fkw4vCvDWwWrGZ9x8f7sHrUbNmweqIt3v1rp2//StblzeAGqVitf3
      V8a8DHoWdAtrrQfw+IN8fKEVrUYVWxhUbUxm66bwhiMnN3fuAMs7IUEQnolw5+CEk3eP1/PF
      lQ7cviA5aVZ+9/ymp31aTMx4ePd4PR+ebyEoSui1iTrGldI3NktdSSY1xRmJWqBHqSvJ5P0z
      Teh1aqym2B7JnUN2vrjSzsx8bf0qUFGQxvtnmkhPMqFb5AmaIDYq8lPpGprmwx/uJySRK2V+
      GeDxBfnyagcv7Crnq2udvHu8/oltRmN8xsP1+0NsLs9aVvjvSZYrXn+Ic3d6KcxKor40M7Ls
      etaXQA+SeAI8IWq1ipAoMTHjicxOXg2+u9nF4S3FXGwcWLU8gNcf4tS1Dhq6xlEUhVPXOthT
      l0/PyAx25+o93Z4mCQd4Qgw6DS/urmDa5eO1fZWrdhy1SmDC4UGRlVVTb311rYPdNfn0jc0w
      NevFqNMwPu3B4w9GXXYpisJX1zp473QjQxPOVTmn1SZuDiBKMv7As1PVGU/Sk0zsrslf1fkI
      bx6oZtLh4fX9lahXKQ9g1GsZn/Hg8YXQadS8tLsCjz/I4S0lWE0L65FGplwY9Vp+c6yeCw19
      q3JOq01c9gCBkMifzt1Hr9VQWZjG5vLsqK/3B0V0WjXqRdbj8VgLBoIiKpUQCbWuRVsUWVbw
      h0SMOs0TZWmfdshSkmTudo6Rm24lJ83KYh9l3mYwJPHH75tIsRnJSDKxt65gRef4zPcF6h2d
      YXjKxe6afD4838I7R+sWvP7a/SGGJp2ERIm3D9dGvYs96RfRMzLDtftDSLLMa/sqSbYYlu0A
      iqLgC4QTTirV4hfz/EUgyTIfn29FpRLITDFzMMYCLX9QRKNWPZQQfNoOsBKbQVHC6w89USvL
      Z34TXJiVxNi0mw++b2J3TfQa+e7haX5xqJo0m2nVNlRNPRO8uncDu2vyaR+wr8jGhXv9fHOj
      k48vtMTUK8flDWI0aHnrUHXMlZr3+yb57FIbf/y+CY//2dFCREOnUT908fuDIk09EwSeEZFT
      XBxArVLxi0M1/O75TVGbsAJsr8zlvTNNBEIiGckL624URaFvzMGI3b3sJNs8e+vy+fxyGz92
      jLKxLHNFNoYmnZw8WI1Oq8Hti95W/EGSzHo0ahXvnWli41yZxONo6ZvkjQNV1BZn0D/mWNF5
      /hxRFIUPf7iPJMt8eL7laZ9OTKxZOrGqKJ2qovRF/363c4wphwe3L0hIlCnNXX7n5oxk8xNn
      betLw4mwjGRTTIkwQRB4cVf5so6xpzafD3+4j16n4c0Dz0Yb8VhRgOrCdBq6xp/2qcTEzyYR
      dvpWN1WFadhnvUgybKvM4ceOUSZmPBzeUoJRvzJfTfQGXVub3cPT3OkYY3tVDiU5KQxOzPJj
      +yg7q/MW7T+61LWkKAp3O8cYtbs5srU45hLpZy4R9tzmYhq7J5ic9bJlQzaDE06mnT62VGRz
      +tazMW7nWWNkysVnl9oYnIifyqwsL5VfHq6hJCcFWVY4d6ePo9tKOXM7ujIwlnMcn3azvSqX
      b1dh7NLPxgF0WjUv76ng6NYS1CoVep2GWU+AsWk3pji1Sk/wMGdud3N0Wynn7vStSnPc+TDq
      +Ix7xck7vU6D0xtgzO7CaIi/QOZn4wCPkplsZndNHiBwZGsxiqJwuXGA90430tgdn/Wloiic
      v9fHe6cbaZkTWCuKgtcfWhfdklWC8NM0x1VILguCwMmDVUw5vJw8VL0iG2k2E/vqC5FkhePb
      S+N8hrEqwqQg3T0DuB12WlvaCa3BtSEIUJCZxJaKbNQqFYGQxKjdxbvH6+PmAB5/iBmnj3eP
      13NnTn96/l4/39zo4qMYw6DPMicPVTM16+XkwapVK6+wmvTsrs1f8cATQYD8DBtbN+QsmkB9
      EmLaHQlqHWajFp/Ph9/nJSQpqISwImw5e2hfIIRe+1OC6dF/A4vaVAsKkqxw6mo7yRY9ohhb
      nHne1vxm+EF0agFfUOTLK+2kJxkRRZHBCQe/OVrHl1c7mXX7Fo0EybIc8znEyuNsev0hjHrt
      ohna5drUa1Rsrwxn7ZfzWVbrs8dbK64oymNtxiaJFAM0NLWQkpqK1+2muLIWg3p5UaCrzYOM
      2F0EghJvH6nlZuswI3YXwZDErw7XolGrHrtzl2QZpydAssUQU8mBoih0D09j1GvITU+KeuFI
      kozT+5PNhq4xmnomyEwxc3x76aLHWevoync3u/D4QwjAGweqEoqwONmM7Qmg0bN5y5ZHDrC8
      E+oZmeHd4/WcvtXNtNNH9/AMWzdk09I/xYzLR0ay+bE21CrVslRlN1tHcPsCzLh87KyBwsyk
      hTbVD9vcVJ7Npii1TE+bSYc3oQhbBVZtE9w/5uCzS22M2l0AbK8KZ4KDokxGsglZUfjoQit3
      O0djFkP3jMzw2aU2xmfcMb1+2uWlsiCNgkwbDtfK+hMFgiLf3uji+v2hp9bOBaCyMKwIy0w2
      r5kizOML8uWVdu51jT3Vz76arIoDSJLMhYZ+jm0r5fStHiDc/uJ3Jzby6t4NCIKAVqPiv/v1
      HnZU5RIMPl7gEQxJXLs/yNFtJZy+GVtMeX99If/3Z7e41DhIbXEGiqJwvWWIb250RRrydg7Z
      +fxyG1OO6K1azt7ppbYkg6Ao0Tk0HeM3EH92VOXx2xMbeW5LMYIgMGp389mlNvpWsZTiq2ud
      7N9YSP+Y46m1slltVsUBBEEABUbsLtSLVFQ+v7OMb290U5ydTLL18ZWEKpWAJCuMTLli7otz
      tXmIv3tlG7tr8mgbmKJreBp/QKS+NJOzP/bgC4S43T7K4S0lfHsznGSZmvXy+eU2OgbDxXQW
      o46RKRd259o0apqnpW+Szy+343BHf3LNx/AvNQ6sWtMuk0HL8KQLlzf4F7vkWhUHUKkE3jxY
      xYzLz8mD0eO/aTYTbx2qZktFTkw2NWoVr++rZNYT4I0Y62csJh0j9vDFazboMOm1TLt8jEy5
      MBt1qFVhOeOI3RXRD3x7o4vDW0q40zGK1x9if30hJoOWrRXZTzRXeDk4PQHu903y3OYivr7e
      GfU1apWKUbtrrvfN6pzHi7vKCYoSx7aVRhXE/CWwam5tNenZVZMXV5tJFgM7q3+y2T5o51br
      MFmpFo5tK1kQGdlTm09L7wQ5aZaIkHx7ZbgR1vbKXAQhXM35p3PNkRaEOq2akSkXQVFCrRZQ
      qQTqS2Or8owXGo0KfyDE8JQLw5zK7F7nGM29ExTnJLOvroA3D1bR3DPBG/urViU+DuEAwdYN
      D9+gAiERSZJijgIpioLHH8Js0MYcufIHRVSCEOmKtxqERAlRkuMrifQuo7Y9/MUEkaLE52Pl
      Vusw7x6vJxAUoy4VVIJATXEGxdnJCEI4qRLucJCFSiXgmcv4/sNfH4pkgl/fV4nLF+CVvRue
      2mPfpNfy4u4KvIEQr+7dAEBz7wTvHq9neNJFSJQx6bXsrM5b09bpY3Y3fz53nw9/aGHU/vhA
      hKIofHGlne9v9/DVIk+yRxmcmOWj8y3867lmJh2emN6z3GvJM9eQ94sr7fF5AgSCIn/64T5G
      nYayvNQFdw0IO0jbwBR56VZSrEauNg8yNu3BHxR5+0htTOt6ty9Iz8gMlYVp6LUactOtfHm1
      A5c3uKJHtFGvIRCSOHW1g8yUcBhWr9Owoyq+T66VkJ5keqhfabLVwFfXOlGpBDSr2H1iKRq6
      x3l+ZzmSJNHYPUZO2tJl4IoCHl+Id47V8f6ZppiO0dg9wUu7K3D7grT0TXJo8+PD41eaBxmf
      9hAIiZGc0lL0j89SW5xJTXF6HCWRky521y4uifziSjv5GTaaeyb45eEaPr7QyrvH6/nuZjfb
      KnPISDYvmbwQJZl/OnUHq1GHgsLvTmxCURScngBmo27JXqOweDm0JMu4vEGSzPpl6XmXkwwK
      hiTaBqYozU3BskTIdymb4daSAZLM+iWlmj+9Pnw3DYZEyvJS49JR2u0L8tmlNmRZ5uShmiU/
      y/w5X2kapG/MQXleKrsXmajz4O/ucPs5dbUDlUrgjf1VmGIogHvvdCPvHq/n25td7KjKIz3J
      tOS1FBIlPrvcjj8oxscBJFnm88vtePwhDm4sjNq46Y/fN/HavkrO3O7huc1FjM94uNU2QorV
      wMu7KxAE4SGbigITM25m3H425KfhD4n8z/98gTcPVvHllXb+w98ejek8fw56gD+fu09lYRoN
      3eP85lj9os4azwxrx6CdjkE7GhXkpNvimtz7uWWCW/unuN0+QqrVyEu7yxdcS0sRl0+hVqkW
      jfbM88LOck7f6qYkJ5kUq5EUq5GqwsUVYnanl//l/cuoVAIv7Czn0OYiksx6uoamF21l/nMl
      IEpU5KfR0j+FKMlr0t582uWjOCcZvUbF4KRr1Y/3NKkuSqd6CbXhUqzaL9E35uDTS22MTIW/
      fLVKQK0S0MTo5f1jDmpLMvk3L26muXcCvVbDW4eqMeo1/OpI7Wqd9gL8QZFvbnRyrXlwxdnQ
      o1tL+OZGJ1sqsiNRndVmR1Uuo3Y3HUPT634a/FKsiiRSlGT+4b/8QFF2MmN2F//Tv3mOD75v
      4qU9FXx/u4ej20qjttF40ObQpJP/9f3LmAxadlXn89YK68mfdAn09fVONpZl0TMyQ1aKmcq5
      p9azUGT2LNh0eQN8caUdQQg3/4pXsnFNl0CyrPDl1XZc3iDPbSkmM8WMIAgc2lzEH75rAMJd
      xwYnnHj9oZhqWfLSbfz7X+1hatYbNaq0VliMOoYmnNhnvSsS6q8ERVE4faubSYeXXTV5VOSn
      rcpxbrWN0D4wRVleCrtr8p/K6KXLjQM8v6MMty/AjdZhnttcvKbHj8sSaGB8llSbkbeP1HKp
      cQCtWoXNpOP3/3yenLSwEPrlPRUEQxIv7KrAZNDSNTTNe6cb+fZGV9SlhSBAaW4KO6vzFl0z
      tw9M8Z8/v72ojXiwv74Qi0nHtspc8tLXJhM87fQhyQrvHq/nRsvwqh2nbWCKd4/X0zPiiDqR
      cS2oKc7gu1s9XGwYWHJPuFosQxHWT8AzS1tnL4+mG7LTLPSMzPDl1Q4q8lIRJZlpl5+3DlZH
      qkG1GjVbN+REegJdbxni3eP1KMDUbPRGWaG5rmOL8emlNjJTzFxuGmBmhdWej0OlEijLTSE7
      zbJqJQePkmQxMO3y8cWVdgoyV+50gZBIILR4oaHNpOera50Y9ZpVU4Q9jqLsZN48UMlbh6rJ
      Tl04T3q1WYYiTMf4+CSIQfwhGb1Kiah4NCr41eEa/EERq1GHKEkIApFUdjT1UE6ahQ/ONuHx
      hTi8uTDymnmb3kCITy+1Y9BpqCxIo65k4cA0WVEiUlZREqMeZylFWDRCokxr/yTFOcnYTHra
      B+00dk8QFCVe27shohB7UBU16wkwMO6gqigD7RNEeB60+ctD1Xj8QWym2NVvDzLp8HLmdrgS
      9+Cmwqh1TC/tLsPp9mMzG5Ck2Fuux1sRptOoVkVlFosiLCYHUMQAY+PjZGdn4Q2EEAQhkoyZ
      32RoNGDU6+b+n8KLuyto7hnn9f1VUTdMbl+QmqJMGnvGURDQaDSRoWZqtZrREQfVRRlsKsvi
      8yvtbI5SNPfG/irO3+1jT20+GcmWqGvY5W6CP7vcQkVBGqeudfHrI3W0D07z2r5KekZn6J9w
      Rhr/zm8EAyGRr653saksi6+vd/PWoWocbj8D47NUF6UvOg8tGg9uLjWAXrfyDWH74DSHt5ag
      16i43TFGcU5q1NelJS9+15Vkmdb+KbJSLKQnmSJPwNXIA8z/7vG0Gbe+QIJGz+bNm8nOzqGq
      uhqjZunHpSAIHNpUxH/z5s6HitcexOMPUZ6fisWoi/qYLstLZXBilj+fb2HfIl2HK/JT2b+x
      kH11hXHbwPmDIuV5Kei1GkKSxL66Aj691EZr/xQ1UcZ2hkQZo05DeV4q/mCIQFDkiyvtKIrC
      l1c74nJOK2FndR6XGgf49lb3ot/f4/juZjeBkMQ3Nzpx+9ZuROxasmbVXg63n/P3+ijNSWFj
      WVYkMVaam0KyxUBIlDh3pxedVs2hTcVo1CreOlTzkI2u4WmaesbZU1tAdqqFU1c7KM1N4Yur
      7fzqcG1cYuzHd5Tx3c1u6kszMRt0mA06fnti46Kvtxh1VBdn8N2tbk7sKCMoShj1WsryUmnu
      nYjpmLKscLlpAI8vwNHtZXFRfJkM4b79T3K3dnkD7K8vZGTKhS8gYjJo+eFOH7Iic3Rb6apV
      oa4la/YJvrneyZEtJXQOTeNwh+cHnzxYHVlSXGzopzwvFYtBy72usQXvD4YkbrQMc3x7GWdu
      hRVh3kC4zsWk1xKM09igrBQzJw9WU1Mc+5DmupJMTh6sJiPZjNWkp7owndO3ujmxI7aeoY3d
      45j0WiryU7lwrx+A5p4JPrvUtqqD94YmnXxysXVRVdlLuys4e6eX7FQLGckmrjUP0TFkp3Nw
      mmvNYYnonY5RPr/cFlMj4Z8ja+YARr2W/nEH3kXG7djMBgYnZhmddkeGWD9IWBEmMzA+G1lX
      P7+zjNO3uqksTIv6nqdFXem8Q8RWsqHXqTl1rYN/PXcfnUbFrMdP28AUR7aW8M0qtAOc5+yP
      vTy/s4yL9/qj9kCymvS8eaCKHVW5CIKA0xvAZtJjMWqZ9QSYmvUyNOHk0OZivrr29JZ7T8Ka
      OcArezcgSjIv7q6IWuFXnpfCjdZhekZmokYsNGoVb+yvwhcIRRRh6UkmTh6sXnPByoMoisKZ
      2z0PdZdbLg63n+c2F3N8eylOb/gG4QuE6B+fxbiKpRNqlcDguBMEYgrxFmQm4fIF8fhDFGYl
      YdBpmPUG6B9zPLYy9OdK1FKItoYf0SZlU1ycx2Kr0Xj3cjl1tYO9dflMO72Mz3jZV19ISJQI
      itKKu4pBbOXQXn8Ii1G3onJoh9vPxYZ+Xt27gffPNC25X1iMqVkv31wP1/rvrsmnLC8Vu9PL
      wHh4oHMskaShSSfn7/ZhMep4dd+GyPp8qT2ANxCipXeS6qL0SGcOty+IQaeJmnxUFOgemUaW
      ZCoKwkmrCYeHUbuL+tLMFe8JlnstSbLMrDtAstWwaP7iQZuiJPPxhVZmPX5e3bshkpyFRRyg
      9e5lmtpdvP7rF1lsYfHoSYdEiWBIirnFyaP0jMxwvWWIkCjx0txT4uPzrRj1GioL02MePvEo
      SzmAJIe/GJ1GjcWk49i22HtPRkYkSTJ/Pt+CSa/BatJzZGvJipzKHxQJhUSs5pWNGvrXs828
      daiam60j5KRZImUby9kE32obZmDcidsX5J2jdYtKEuMdBvUFQiiKjMnw+GWsLCo6HK0AACAA
      SURBVCv8y3cNqFQCBp2GXx2OXhj54PUZbjDQRlF2Mr5AiP/65a2R10X9FEarFVlxLHr3fxR/
      MDwkz2zUUpKdzLbK3Bjf+ROluSlkpZoRAJNBR/vAFFVF6ZE8wEodYCl8fhGtRs3r+ytjViw9
      ilqt4lfP1eDxh7CadBGHMOg0pFgMPLel+LE2wtoHD15/kErT8oQ582woSOOLK+24fSG2blhZ
      7X/n4DRvHw2Xs4zPuMlNt9LSN0l2qoX0JPOqZMIHxme52NCPJMu8sKuCrJSlFWBBUcIfFPm3
      r23jHz++GdMxwnd4Ier5L7gtOoZ7ae0ZYc9zB2OOkY7a3ZTmpvDG/io6nqB3jkmvRT931wnn
      AZx8eL6FffWrU85rNmqxmXS8/8B4o2BI4l7nGLOLtCOJhlqtwjanKHN5g1iMOt7YX8nQZGyz
      c3tHZ7jXNcbwpJPb7SMr+ixbN+Tw/M5yfnOsbsUVlfvqC/jj9804XH7y0m18d7MbUZL59kbX
      quUBmnsneGFXOYc2FdEawx5Kr1VTlJ3MP358g20xFkluyE+lJCcZpyfAi7sqHvrbgiWQa2oK
      n0rG55QoKM5ZdJf8qCLs//v6Hm5fkFf2bKAiP3rW8XHEe18RCImc/bEXs0HLgY1FMUkJP77Q
      QmVBOs29E7y2vxLTIhfTYssARVEi44GSLHpKch5fQdo5ZKdjcBqzQYNRr2XXIoMGH2R4ysmN
      lmE2lWdTtkSV6pMsV7661kleRvgp8PLuCpLmStjjuQRyegK0DUwhyzIby7JjkkDGworLoa3p
      6VgBYriGnU4ner0euytI19A0+Zk2rjQNUJ6XwpXmQfpGHVQVprO9avlLIlGS+eJKO15/iCNb
      SxYdr7MUp2920zYwhcsbINVmor708YPzZAUQwo9azQo2dYIgsLlieUuQgswkvrnehTcQ4u9e
      3RbTe87+2Mtbh6r59GIbhZm2ZZVczHOzdZiOQTuluSnsqV1YDv3CrjKaeyc5tq0U2wr3Jo/D
      Ztazoyo37s1xY+WJwqATExM0NTVx8dJl3KPtGLxDNN67Q0NjI/ea23lxWx6NnUPLKrSap3t4
      mvwMG794robLTQMrOr8Zt58tFdmU5qYw6wkvaYIhCY9/8aTN6/sqCYkSr+2rXNW+NA9yt2OU
      l/ZU8Lcvb+ZKc2yfVaNW0T82i6woMT3ZotE+aOfd4/X0jUYvh1arVGwqy5rTd6zoED97nug5
      Vl5ejlqtZtMWkVHxJkNeP2+9tIncHBva9gn+84fnMOsELl/2IUkSWq0WvV6PxWLBYrFgtVox
      GAzo9foFUZr8TBs3zrfSPz5LZUHsghCvP4RaLaDXaijItPHHM03IisKhzcU4PQE+u9yGXquh
      rjST2ijZXp1WHXO3usVYbhSooiAtHAYVYHddbPudkweraemb5OTB6hWHH20mPR9faEWvi70c
      2h9cXmOstUBRFNy+IEa9dtl667hJIkOiRCAkRRIikiwzOuUmN8OKak6lL4oigUAAj8eD0+nE
      7Xbj8/kIhUJIkoROp0Or1WKz2cLOYTQjqDWkJkWv9HyUziE7t9tHCYkSr+zZwKXGfnZW5zE+
      7SYkyRi0GryBEEVZyVxtHuTkoWokWcbjC0dwYo2+BEIiwWD0kOV8FMio05Bk0XN4S0lMNp2e
      AP5giMyU+NbEL7Vef/9MI5KkoKDwV89veuznH5lycfZOL7Isc3x72YqWpdF40r3fxYZ+7E4f
      Xn+Qt4/URZ01ERQlQlHC9HFzY61GHVmHKorC55fb0ahV3Ose45U9cx2htVq0Wi0Wi4WsrIfD
      moqiEAwGw1No/H6cTifj4+MEAgGCwSCKoqDX69HpdFit1sh/er0erTbcdq+1b4qXdpczZnfT
      NTzNvvpCvr3RiVaj5o39VTjcfv73f72KRq3i+PYyJFnmo/OtGHRqTAZdTDOoZlw+vrzagUYt
      sG1DbkQjPI/LF44CvbKnIubQaiQRJsDuugLKclcWRFguU7Ne/t1bu/i/Pr2FLCuo1Us7QHPv
      BCd2lCJJEk09E3FzgCdlYHw23BfoRhcOt39B1xC3L8gnF6LnlGLTA0hBWjv6qa4s4ebtu+za
      uWPJ14uSTCAk8eaBqpgvAkEQ0Ol0aDQakpOTyc5+eCM57yB+vz/yBBkZGYk4CIAqIPN//vNd
      TGYLvzq6GYNa5peHwnoEtVpN3/gsb80Vun1yqQ2fX0SnVfPavtjzAD0jM2yvzCU3zcz5ewML
      HCDJrEevVfP+maaYtcydg3b21BWQYtZxtWVkzRxgc3k2//jRDWpLMmPaR+yrK+Czy23IsvLY
      NjiLIUoy93snyMuwxa29zY7qPN4/00Rakok028IBKoMTTmqKM6grzeTLqx0POUDMS6Cx0VFk
      v4uWvlH27t2HXiMgy/Kij81r94fpHZ2hqiidrcuIisiyvKIODoqi4Pb4+OpKC7IUZEtJCl6v
      F7/fTzAYDDfbEtScuTOISmvg5OGNVBRmca11jAmHj03l2dQWP16TGhQlTl3txB8UeX5nWdQv
      fLkEQhJfXu0gGApnwZMt8SvsW+n3Gd2Wwtk7vSiKwrFtpSvafJ+61klxdjKN3eO8sb8yEvaM
      53nOMy+0ESWZr66HR0wd2VJMdupPybaYZ4S1dnSTV1iCGgmLxfJU5zotxnc3u6guymBs2o1B
      p2FjWdZDUshAIIDP58PlcuFyuSIOIkkSKpUKvV6P0WiM7EFMJhN6vT5665cH1tb3eyfoGLSz
      f2Nh1FFPo3YX1+4PUVeSyYYlNvRPEl/3+IKc/bGXrDQLO+eqNx+1ebdzlL6xWY5sKY7E9JfD
      pcZ+MpLNyJKE3eXnwMaiZdv44GwzL8+VWR/aVESqzbjs371reJrG7nF21eQt2qgg7jPCampq
      Hv/Cp0ySxUDvqIMZl29BLF6lUmE0GjEajaSmLlxiiKJIKBTC6/XidDoZHR3F4/EQDAYjUQ+d
      TofJZMJqtWI2m7FYLIRkgft9k7y0u4LPL7fx7vGNNPdO0Dlo58CmItKTTHz/Yy8nD1bxxeV2
      CrOS5u6kPaTZTFHj7yvh25vhuQa32oYZnnItqKiddvroH5vl2LYSTl3t4J1j9cs+RorVSP+Y
      A0mSKYzS/jIWXtpdzrk7vZTkJJO6gqdnSJS4fn+Ikwer+ehCC3/1/KYVncc8P59YVhzYVZ1H
      x9A0pbnJ5GcsHIgXFCW+mGuKemx7KVkpZs7d6WXU7mZjWRYby7IwGo2kpT18l1YUBUmSCAQC
      eL1eXC4Xg4OD4YiW10/j3R4CUz0MTXm4nSZzq9POqwfrOXW5hb96cSs6jYreEQchSUatEvju
      Zhd7agto7p2gd9QRl35DKkHgP31+C48vFLUWS69T4/QG6B6ZWXHBYm1xJia9FkmWKM9bWQuT
      SYcXly/I4ISTTWVZy3Z+lUpAVhR6RmeeqAHBPOrf//73v1/pmxVFibpuUxSFy02DXGroJxAS
      yUu30TFo5+sbXQxNzFKRv3i34sVsRqO1f5LvbnYzYndRlpuC3enj4r1+RqZclOenolGr8PiD
      yIqCVqPmfu8kqTYj++oL+eFOH4WZSbQOTPGrwzV8f7tn0YI7rz+EoBIwGgyYzWZMFitJKamU
      l5ZQWlrC1o016MzJHN9Th06n49b9PiYnJxgbHUbyTqMJObl3v4PSdB2hgJfB8RmCosTIlIvK
      woxI6PhJ1sENXePsqyvAatJjMxtInZt8OW9Tq1bR3DPB7fYRDmwsjLoB7Rtz8OXVDnpHZthQ
      kLbgN/L4g3z/Yw+DE07K8lJXlCj8+nonvz1ez8D4LGajLvLZF/vdJUnms8tt3G4fJdVqJNli
      oCwvlUmHhwObipaM+8dyLa2KA4iSzI2WYd45VscPd/vYWJbFNze6+O3xenpGHSRZDIvW+C/H
      Ab672c27x+vpGLSTnmzmcuMgL+wsx2LUMTA+i8cf4vy9Phq7JyjMTCI1yciFe/30jExTW5JJ
      dpqF5t4JuoamSU0yRr0Tt/RNcqVpkIbucYrnymk/udhG9/A0Wo2a9CQTBp2GnDQbBoMem81K
      3YYijJZkXj+6k7LSUspKS9hcU05WZjoqlYpUs5qxsTH0sgenfYze3l5GR0cZHx/H4/EQCAQi
      7TzUanVMd8mQJNE1PIPTG2RPTX5khsC8A4zPeHD7gvz1C5v49mZ3VGf/+lon7xyrY8LhQaNW
      kWQ24PIGUAkCapWK83f72Lohh/xMG/e6xinPW360yuMLcqt9hBm3n13VeZGN9GK/e8/oDIIg
      cGJHWApbV5KJTqsmJ8362KRXLNfSqvQGVRSFTy+1RZrhvryngitNA4zPePAGQvx6LlnxOJvB
      UFgQs5ja6MK9PqadPvzB8GCE3lEHt9qGCUkyr+zdwKWGfg5tLmJk0oUnIIYnUooSoihHog+P
      y9p+erGV4zvK6BmZCSfzZAWDTkPeXBg01nllSzEf4vV6vZE9iMfjwe/3EwqFIiFig8EQyX+Y
      zWZCskCy1Ry5iDy+IDqt+qG6oPlNsCjJfHC2GbNBS3aqhb1ROkXcahthYNyB2xfinaN13O0c
      ZWTKhdMb4J2j9dzvm+Cfv76HgsJ/9dKWFWXM50cmPSi6Wepa8gVCfPhDC0aDlvK8VLbEGFGM
      dRO8Kg4A4aZVnrmk0Hy/9kc/+FI2Pb4gH19oxWTQUp6fGhHPP/p6jy+E0aCJlAP4AiHUKhU6
      rRr7rJdvbnSh1ah440DVikYeTcx4OH2rG4NOw2v7KlEIj/3xB0Re3F0R11bti0WBZFmO5EDm
      I1jfXG1Bq1Jwenzs31iEXqfDaDQ+5CB6fTicOm9TlGT8QXHJeV0PKsLeP9PEO0fruHCvj4qC
      NFr6JqkqTEeSJDqHZjixsywun/tx19JKlIFP3QGe1Gb7wBSzngAby7L44kr7osqfx/E4SeTU
      rJe2gSm2bchZVh39k4QsZVmhpW+SFKuB3HTbihpOzU9F+fMP93l9XyWSFOJ2ywAGtYRZqzyU
      A5mvwZqPYD0uxDtP/7iDiw0DJJn1vLp3A95AiM8utaMoMm8erH4iqeqDLL2agLFpF5MOL7Ul
      GTHVPSmKQtvAFHqtmpKc1CUL+VbNAbqHp7nXNcbO6jwKMhdGZKadvnCfoNwUNpdnExQlvr/d
      g16r5vCWEmRF4csr4akzR7aVkJtmpWPQTlPPBHtq82NOwy/lAP6gyD99eYc9tfnc7Rzjb1/d
      uuA1i/EkDnDuTi8Wo47+MQcHNxWRNdcTczk2v7rWQXPvJAWZNt45WsfpWz1kJJtoH5zi+R3l
      kRDjfLvB+SWW2+3G6XTi9XoJBAKRIkWdThcJ7dpsNgwGAwaDIfoe7wk+u8Pt54c7vRRlJ0cy
      5UtdS3anlzO3eqgoSMM+6+XEjsc/dW62DuMLhJh1+6ktyaRsib3KqoRBRUnm6v0h3jpUzUfn
      o8dqv73ZxWv7Kjl9Kzws+3bbCNVF6Uw7vdztHGVbZS5vPpBuD4REbreP8Mb+Kj6+0MLvnjD+
      C+FHq06rojQ3hestQ09sbzH6xx2c+7GXrRty2FSejcsbpKY4A5c3gDcQ+2TNB7E7ffz9yZ18
      crEVUZJx+4Jsq8xhfMaDLxACfoqxazQaNBoNJpOJ9PSF4cv5IsX5/cfg4CBer5dQKIQoiuj1
      ejQaTeTpYTQasVgs6PXLl29+c72TV/Zu4OyPvRRnPz4X4AuIJFsMFGYm0b9I/6JHcXoClOYm
      Y9CpcXmX7le0Kg4wX/3ZMzyzqKjEPNci3e0LoteqSbEa6BmZweUNRG1zolapECWZ7pFptHGq
      07ea9OypLeDUtY4V17bEwueX2/nr5zfxwdlmKvLTOLGjlHN3eklPMlG8SEKpoWuM7pEZDm0u
      Is1mYmgyrADbWJZJRX4aGrWK7pGZiB7ghV3lnLvTQ3aqddlFavMOYjabych4uEQ8WhXv+Pg4
      wWAwUqQ4v8SadxCLxYLBYECnWxhYsJh0dA1P4/QGMOg0hESJ73/sQa0Sonaby0u3Mmp3cb1l
      iBd2xtZo7NDmIs7e6cWg1bCjaqG6TlEUrjYPYnf6Vm8J5PEH6RycpqooHYNOQ8egnRutw5Gh
      eJKs0No/SV6GjVSrkWmnj//y9V10GhV/9+q2qOtxtzdI90jYZqwb2p/DkLz/58sf2ViWxa3W
      Ef7ta9uYnPXyw51eDDoNr++vjERt5m3Ouv2c/bGXEzvL+OJyO785Xs+/fNfALw7V8OmlVn51
      uBZJDq9zK/JSl0xsxVO+GJkSqcicPBieEqkoCqFQiEAggNvtjmzSA4EAgUAAlUoViWDZbDbM
      Zgt9kx5K8jLISrVy7k4vRVlJuH0BfEGJ3THIQR/HtNPHV9c7UKtUvHmgasG11D08HSmQW7NN
      8Pym7fStbrZU5ETm8s5z6moHmyuymXX7mHEH2F2Tz+eX2/AGRA5vKY7aLCsaHl8QtVoV6RO6
      2g4QnubSw6TDw+aKbOpKFsoufYEQDV3jVBamk2I18OH5Fg5vKaZj0E6K1UD1XNPdeZu+QIj/
      8IdLEVHP37y4mQ/ONlFXksndzjHePV4fswgmng7w3c1utlRkh+cE90zwfAx3ZEmSIhEsp9O5
      oAara3gGWVCDSkNpfjabqwoxmUwYDIYVB1i+vNrO/vpCphweJmd9C0K+4zMezt/toyDTtnYO
      cKVpkPEZN75AKCJaePjvA/zph/vIssLfn9wJhPvuz7dFiSUK1DFo507nKKGQxEt7KkizmVbd
      ARxuP5ca+nllGY2xvrrWwZnbPYREmX/4m0ORViDzNqdmvZz9sZea4nTudY7xu+c3EQiKtA5M
      hfunLqOUIZ4OMGp38f3tHmRZ4cTOsocaTM0jKwpOd4AkS3h/8Oi/H2S+xKRneIqA34dFB263
      m6mZWYKBADqNCrVaHdmgW63Wx27QIdxl42rzIOJcPijNZnrkuDA+7cbh8a+dAyiKgncuD6CO
      kgc4dbWDrRuycbj8c1reHD66EO6vUxVjY6wvrrRzaHMRY3Y3s54AO6vzVt0BJFnmw/Mt6DRq
      Uq3GmPoAfXi+hW0bcugfc5CdZo2M+HwwafXnH+5j0GnITDazP8qUR0VRmPWEe3UuVZb8uOHb
      s+4ANos+ZklkYE4SaTIuLNmeT4DqNGpEWeb1fZWRf0uyzOv7oycNH7yW+sYcXG0eRJIVTmwv
      Jc1mIBgM4vF4Hqrind+gz6sI5yW2NpsNvV6PjBqV6qeZFYuxZsVwgiAsuVbdv7GQr651oFYJ
      vHGgGoNOwztH6wg9kLV9HPvrCzl1tQOdRs1r+yuRZYW7nWOYDVoqCzNWRditVqn45XM1+ALh
      BFMsWE06/t+v7iCKMv/9b/Yt+LtGreLtI7VL2vzqWicQDuWePFS9ohFHX1wJf99BMSxeiiWi
      o9dpWGyQi0K4burN41W8d6YJRQlHcd48EP53LLT0TYaH5vlDtA3YObS5KBLBWmyDPu8gs7Oz
      9Pb24vP5CAQCyLK8qIpwPoK1DEVYHyUFmXR29FKxaQuGOLfVTTLr2VqRg1ajimxwH5RZxkKq
      zci7x39agpy53YMsy7T0eRAEYYF6KxZkWaGlfxKbSU9BZlJUJ1KrVMtalgxPOvkf3z3A3c5R
      BsZno2aTH2fT4fZHEmGiJKMSBG63j5CdaqEoKzkmZ3d6A/z2eD1//L4ZWVFQP+ZNihLWXcuy
      HPWGIgDl+am8f6aJqsK0yKDD8L9j++731xfy5dWwY76+v3LJ1z4oszWbzWRm/rT/mn+qzO9B
      5p8eExMT+Hw+gsEggiAsTxGWYrMw5fKRk5WBIstLKsKWy+32EfxBCZc3QEV+atRCq45BO829
      E+yuCSfCpma9XGzopyI/jfrSTHyB8HQWs1HLS7sq+OJqB1UFaQxNOklNMi1LmTbP5aYB9Fot
      o9MutlXkkJcRXvc+SeXm0KSLL692YDXpeftITaSsdzk2G7onuN87QWluCrtr8vjkYhu56TZa
      +iZ5aXdZZODcUjbvdI7R1j9FeX4qO2Po3dTcO8Gkw4csy2SlmqNu+FfKairClvp7zDPCZhwO
      REnC6/UiZmSinTvZeJVCePwiRVlJTDt9+AIL224EQiL3uid440AVH58PJ8LO3unnjQOVfHOj
      i7K8NM7c7mFnTQEjU07udo3z8p5KvrrWgdWkY3tlHgjhzfaMy8+x7aWLdn17EG8gXPsekmT8
      ooxKpeZSYz+zbj8ndpZj0Glo6gkrwg5sLFwQ3YpGcU4Kf//WrgX/fzkb1m2VuQ/V/XsCIsU5
      yYxOuwmKyk/1P0vY3Fmdz87q2MOObr9IXoYNSZKY9QZXtLl2uPycuxsOfc6f/zMxI6y6upr8
      /Hw2bNiAbhX6RR3cVETPqANfUGRTlMK3+URY5+B0pA7dZNDSMWgPD9/Wqkm1mWgbmKJvbJYU
      qxGjXsPJg1Uc3x7Wr3YOTSMgsKs6j7NzExQfx9GtJTT1TqDVqNiQn0pL/yQGnYYtFdmcu9OL
      2xekbWCKF3aVceZ2d1y/k+Xw1qFqLjcOkJVipiRnZWqtR3F6AnxysZWbrcMoisKe2gJG7W7G
      ZjzsqV3Z3LFvbnRyYkcZQ5NO7E7vimx0DNr56EILgxOx9V5dip+NIkyrUXN8e+nco3DhY0ut
      Eki1GfnmRieHNoe1qK/s2UDbwBSv7avEoNNwaHMRLX2T1BZnRO3JaTPpaOgaQ0EhxRqbHE+v
      0/Dirp/i3UlmA+0DU3h8QVKsRrQaFb5AiI7B6UWL6e50jNLSN0lOupUjW4pXZSK7zaTn10fr
      Iv/2+IN8fqkdUZJ4bX8VySvQAH99vZOX91Rw4V4/kw4vmSlmjm4rQRRF1CvsRmedGz3rcAcw
      rmAKZkiUuNU2zMmD1Xy4SJnNcnhqU87aBqb4w+lGTl3riGnKuz8o4g+I/A+/2Uf38AwAWo2K
      +tLMyI9rn/Vyt3OMm63DBEILQxXZqVYObCwiK8XC3vqV3cHyM2zsqS0gL8PK7po89NpwNlej
      Fnh174ao7/n2ZnjM0YV7ffgC0UMo/qC45FDw5XKrdYQd1bkc3FTE1ebBFdlIsuhpH7Az7fJF
      jcTJisKnl1r5w+lGekZmFvxdURQuNw7w3ulGrt0P11q9uKucQFDkxV3lK2qEGx6VpdAxNL1o
      gMTu9PLe6Ub+dO7+XF3UEvaWfQZx4nbbSOSCmZp9/KNQr9MgCAKfzU2Hj8bV5iFe31fJ1g05
      NHaPL/i7IIQHdG8oSFvxZHRBgNx0K2W5KZE7eZLZQH1p1qI/yHwod74L26NMOjx8+EMLp651
      0vUE7eUfJCPZxD9+fJP/+OfrkdYtIVFi1u1f8oYz6wkQmhs4+PyO8EX68u6KqKXPI1Muki1G
      3j1Wz7X7C51MUX5qWtU9HP5c1+4PMenw8u3NrshxHsXjDy564QqCgFol0DU0vehU0KtNgxze
      WkJ9aThzDuE9pMu7sMX7U1sCibLM7//5PEBMk1lUgsCbB6rwBkKLxsbrSjI4da0DUZIXvRvH
      A39QJBAMkWSJ7evbW5fP2LSHzRVZUR/7XcPT7KnNJ9mi41rLCOUxtJdXFAWH20+S2RB1yTg1
      6+W//cUudBqB+71ThESJD842k2Q2kGozciBKcu16yxBjdjcOt593jtWh12qWnJY531Tgk4ut
      VBYsDHMKQngGw2eX20mxhp/SfWMOfnO8nu9v9zDt9EVKwefpHZ3h2v0hZFnh2PbSSDRrHlGU
      0ahVnDy4eG4h2Wrkf/vgCrKs8O/e2oXLG+CTi21YjOHxtQ+Kq56aIOZfvmugODuZgfFZXthZ
      TnqyKS4iG39QRKUSIpMo450Jnnb6OHWtA51GxabybKqLMrA7vfSMzLCxLAu9VoN91kvP6Ayb
      yrLRadWRLLhRr416sQaCIp9faScYEnllbyXJFgOTDi/9Yw42lmdFnar50fkWGnvGKc1J4a9e
      2LTgieYLhPj8cngP8Pr+Krz+EA3d4xzbXsofFynZ+OP3Tbx9pJaLDeEW99F0HPBwZEmUZIIh
      adHlzLwScF6F1js6w5WmQVJtRl7cVR5RC87/7l9f7yTVaiQQkhCEcHDkUXtXmwfpHXVQV5IZ
      tRX9qasdbKvMwT4b7kCRYjHi8gWoK8nk1LVOfvncTy1+nuqk4+stQ3QOTWM0xO9BZNBpljVo
      esbl42brMP5g9LW5LCs09YzTP+ZAUcJ3sG0bcnh+RxntA3b8QZGvr3ViNer54koH/qDIe2ea
      aOuf4uMLLUA4O3q7fYTpRWb+6udmXf36SC3JFgPeQIhvb3RiNmg5tci0+XtdY/z2+Ea6hqcJ
      hRYuJYx6Lb8+Wsevj9RiNenJTDEjSjLvn2li39z+x+MPcqNlKFIzf2BjIR9834zbGyAvxuJD
      jVq15Fre4w9xv3cionsoyUnhtyc28tLuiqjBAJtZzw93+7jU2B+1eZcgCOyrL+S3JzYuOodh
      /8ZCzt3p5X7fJFsrcijPT2Vo0sXHF1oXPPmemgNo1eGy5/rSTERRfvwbVoHgXEtCm1nP55fb
      o77mUtMA3oDI3c4xhiZnqSnO4LPLbfwfH95gR3UukiSHuxSkW+dmD4SYnPGwoSA9Mi7qD6cb
      sZkNfPB9c9TNuSQrnP2xh29udBEIiYiijEGvJTfduqhj6rRqzt3pnWtqG30A4Olb3Xx7s5uQ
      KCEIAi/truB3JzZGImSfXGgl1Wbkk4utyIpCQWYSvz2xkVf3VaIShEgY9EbLUNR9g6Io3GgZ
      5pOLrTg94fV198gMH51voW/UgaIofDx/jAutMf0moijz1qFqXt5TEdWxYyHZYuA3x+r5xaFq
      9HP65jcPVPHbExsXLKmemgO8tLuCiw39VBelr6hNXzyQZBmtWkVumnXxDZkvSG6ahRSrEV9A
      pGt4mmPbyvjbV7bQ0DWO2ahjc3k25+/28eKucvRaNWajlo7BqUgPSrcvSHPPBC5fACnKQOqG
      rrHIBJsL9/qxmfXUFmdwoaGfl3ZXLHg9wN+9so3sVAt/99q2qE0GbrWOAike9AAADllJREFU
      kJdupaowjYuN0YduyIryU0VnlIXw19c7Ob69jMlZL5OOhYGKSYeXSYeHEzvK+Pp6J4qicKVx
      gFf2buBCQz/zPpOTZo0M4Jhx+fj4Quuis9B21eTxh9MNfH29M2ojhJUwH436/HIbnkcm2q9K
      X6BYMOjCraofjegsx+akw8O3N8LRhEc9+0F7QNTHrVajxqDTcqttmCNbS6I+yjOSzfzHP1/H
      7Qvywq5yREmmpW8Srz9IktlAfma4y3FVYTpGvRadVk1Gshm3L8SLuyow6rU09UygUauQZYXt
      VbkEgiLf3Ohk0uGlMNNGICTRNjCF0xNu7Z2bbiUj2UxlYfqikQ6LSUdVUfqi8X1fMETH0DQz
      Lj/Zadao309msplLjQPsrS+Iamdw0onXH2Rw3Bnei2h/2lepVCoU4MeOUQQhPFqqPC+Vpp5x
      tBo1kw4Pm8qzSbMZudI0yMFNRVhNej691MYreypo6BonI9kUycbP/+4XG/o5urWU0twU+scd
      MetAojFvM9wu08/2qlzO3+2jquinDfvPJhE27fTx1bUOVCqBNw9UxxQjPn2rmzcPVPPNjU5K
      clKwmZffVbkiP/WhoX4NXWM09UyQkWLmxPZSLjcO8O9/uZvukRk6Bu1UFWawr75grmZpYaNb
      RVHoHXXg8gYYnnKRajMiShI9oy7UqnAI79sbPezfWEhz7wQ9ozPkplkZnnTiD4b4mxe3oCgK
      X1/vZNrlZ9uGnCUjMYuRm27l6+tdiKLE3kWmbOamW5fsa/T8jjLaB6d4eW/0MKjJoEVRFH64
      28fJA9UIgsAvnquhc2iaX8xtNAsykx7aTNtMelr7p3C4/VEjYulJ/393Z/bVxpmm8Z9WhIQA
      gVhsx2AwYIwNeI1XYscOSdxxd7qT9HS3k7mYM3/AnDln/oO+6JnbuZgz11l8MhO3jztOOnEc
      Jw7xgpfYAcwi9n0VCNBapar65qJAdpMSCIXYmX5upfrqrTpf1ffV+z7P8zrxjcwixRVqStd/
      3UZwO+1MzIWwWs2JbNQynulH8JO49WiEs0erOLxzCw+6J1I6xuWw0znkJxyNJ9qrrkQoKifd
      Rxvhyt0+BHCrbZhgRMZmtfBfl+5z+ZYPZ4ZtqZbgpnxTbiKD8fmdXt7/opW2/inmQzFUVePt
      xlpaeicTcZ7eX0ZpcS5xRcPjdtA15GdiNkS2M4OHPZOcOVTBP53Zw+0lrarZbOKdxtqU78VK
      3Osc580XdvKPr9SmXAjrHw/w3het+jeBpmuNd5YWkJ/tNGSXjs0EGZpaoDgvK0EDycywUbe9
      KOnKdeawXlv41bEqw5dc3fYiqrbms7dy06puDuuBN8fF6X1lFOa6aFiRVdqwFUCOq0TlODlp
      dhOsLS/k09s9qKrG2WOp5fDPHq3CN+zn9YYdZBjc8K5hPy29k8RkhbNHqshPwcQqrmo4M6xo
      mlhK4cm8dXInM/MRAsEYpSu2pQthibiq8nZjLR9cbaNmWwHhmMzFpk5KivQ332JE4sL1TtxO
      O3abhYb6UnpH56jamo83x4XFbOaT292YgIa6UjxZDuaDMf7c1Jk2r2dXWQGf3ekFITi1VGeR
      ZIXFiIQ3x2m4JWxuH+XcS7u50TrM6MxiIv5k0ISGCX07u9xXWROC+WAMj9theA6L2bzqimYy
      mTaMy/R4TCj0uAwLqBtSB4hKcf7nq3Zysxxs9rp5fueWtAKNyXEQ4Eiz0TPownmLxURmho2/
      3PBxor6EMf8iUUlNqV3r1w8HGZ1ZxG4189uTu+gZm+OBb5y4qvHrhmqynfo260lF2IXrnVgt
      Jrw5Lk7sKUXTBDFZITNDr16/90UrbzRU69yao1WGLFRZUVHiSkJppWoakqwmxkgHclxFURWc
      joyEB1JedmYiB78S33VP0D82R1RW+MPp3Ukr28vXHldU3r/ahsVsomZbAfurNnGxqZPMDBtS
      XOE3Dak5bTzTXhMiTWiaJhRFEUIIMTAREE3fDwo5rojzX7alPV5b/5TwDc8ITUsvpq6hGfHh
      tUfi3c+/FzPzYTG7GBHvf9Ei/verR0KSlZTjCEdloaqPg4hKcSHHlaXfhegfnxMPu8cT/1FV
      /RgtSeCtfVPivSstoqllMOl/hBAiHo+neqkpXIcQvmG/aOubFJqmicHJgLj4TYdQVFX854Xm
      pMdFYrKIK+qqYz8Zp6KoIhKThRBCqJom3rvSIjRNE+9eaVlHrI/n0kZA0zTR1jcpuof9a86l
      1DrELCnCivOzGB6bYWd9PXbT4ydM0wSf3u5mISzx4r4ytqTRPO1O5xhyXGExrH9crtZJJRk+
      vunjRH0pE3MhgmGJ/dWbedQ/hcthp3zz6hZ5qWJwcp7Wvim82ZmoAkNKQbpYjbsficVp7Zti
      5zZvStvMjsEZRmcWsVlMZLsc7KvaxEfXO5icC/HK8xXraj2bapxCCO51jevJglIvBwz6FBhB
      bPAK0NwxiqJozIei7CjxGiYrlpFahxiLnbxcN1EpznOFOUQVgdWiK8KWn58zhx5b1inJRKOr
      IBiO8ZzXjcUEwYhkOEbXsD+hCDNKjx3d9RyXb3WTYbNw9kglN1qGsFrMDEwEEEJLakK1HoSj
      EjlOOwU5mfSOz6d1rcmgaVrS8S42dfB89RYuNXXx+9O71qQjByMSeW69YZ9/QbcgeaPhscTw
      x8S9Wpz7KovYV1m07nM8OZd+LIJhia2FbkxohJLMpWWsSxFWVFzMYjBCqd0EYmMVYSf3lnH9
      4QB2m5XDVZt+wG2R4gpt/TP85oUaPvq63dAa0Ztr/RuOSyyuUlGYjaoJpLjYEHuQmm2FNHeM
      0Tcxz+n95VjXQbtYC6utAJqAYq8bs8WM2Wxe87wHq7dwo22YQEjixb1lWC1m7nWNMzQ1z6l9
      ZYkGGhsdZzoQG6wIO7l3G9e/H8Rht1Jf+cO59CR+tu7QK6GoGue/1M2hekbn+N2ptX2CZEXl
      +pIR7eHdW9OmQBthoyfBWmNOzYVo7hilvqLYcCULRiSu3u/XtQ67H/cdWx5zdjHCzdYRXjpQ
      zqUbXZxLo0dYKnGmg6c9l57E/5sHAHTy1uDEPJXP5afcnufnYI34NMa8cL2DxgPl3O0ao7rE
      myg+LY8ZkeJ89HU7NaUFTM+Hee1I+nTxv6cH4GdTCZ5djPDp7R7MJhNvvKBXgqW4QkxWyHE5
      EELQ3D7KxGyIyFK3FyMEIxJWi9lQnijFVS5924UcVzi9v/yZdTofnV7kLzd95Lgy+N2pXSlZ
      v9ztHKN7ZJbNXjcvGsgqPW4H7YMzTM2FOVj9wzS0M8PG68ermZgNsW/H+ju7/L3iqVWChRAE
      gtGkpLNbj0b55dEqjuzSK8GhqMyH19q59t0AD7oniMkKgaDuheMb9v/NmIqqv+W7hv18dqeX
      C9c7DFVmvmE/1aVe3jxRk5DoPQt8freXglwnY/5FfCOzgM7fD68iiewemeXtxlr8CxFkg3v4
      4t4yvDlOXj1UkTRLlJvlYGepN2Vf0Z8Ca82Dp42ntgJ80zJEMCITCEYNiyz124sSleBfHtvB
      uD9IdUk+9RXFXL7pY09lMWaziYtNnQli17UHA0z4g6hC8E5jHd0js7xycDsTsyEGxgN4c5yE
      ovISZ91O+WYPF5s66RiYTjRneBYwm01IspIwtJoOhLlyrw+rGfbv2ELV1nwUVSMYkcjN0iuq
      hR4XF5t0m0G7VRfZzAWjeLIyMZtNmM2mtFLHKzEfiuFcIvWlA00IAotRPNmZht9c37YOsxCK
      MReMcu6l2nUZn/0UeKru0Ocaa7lyt48DOzYZdlSXZAUQZNhtqKrGJ7e7CUZlGveXU5SXhSYE
      MelxhfVP799gd3khdzvH+Je3DmExm/msuQe7zcKvju2gb3yOtr4pYrLCL45U4c1xoqgaqqoZ
      UifWgx+zD54OhLl8q5vcrAxeP17Nva5xvDmZeLIyaO4Y55Xnt/PhV+14shw4HTZO7StDCEFU
      UnBkWDGbTHx804fVYiYUlXnrZE3SD/wn45ycCzE8tcDeymLDiXe7fYTpQCTxkkp2j1arA/z5
      m05cDhtRWTHsubA8D76830/99iKK8rKe6TfAU1sLj9Vu5fxS2TxZYzm7zZLgtlssZl4/Xs07
      jXUJ3ehCSKKlb5LoErnNYbcyH4wmWJYet4NzjbW8dbIGu81C98gcLx/czv4dmxic0LuLWC3m
      VSd/TFZobh9lNgWhfroo9Lj459f28uaJGqwWM/uqivnkVjf//fEDjteVsBiRyHdn8tqRSsb9
      QUDnyDgdtsREXwhLnDlUgaaJxBZwNYSiMl/e7yfblcEnS76iKzEwMc/ZI5WUFucY8v9XQghd
      GH+3cwxF1RDo9+/VQxVJt3MNdSWcv9qGpglDbo4QgkcD0/hGZkm3LCCEoK1/mr7xwJpjPLUH
      YFkK9/LB7WlxW+KKxuVbPgpyXVz6tgvQyXAmk4mGuhJDPvsL9SV82txD55A/JXdp0Lu55Odk
      8tfmHkP11k+B4akFqksLOLmnhM4hP3nuTGw2Cx9cbePILmPntjy3g3//4AaaJlLqmB5XdF5R
      kce1tNL+EHsqivnju01855tgc8HaCYJgROLrhwO4nXb+2tyDCf0l9h/nbyY1LigtzuWdl+t4
      dUkPvBL3fRMEgjGGJufpGp5ZMwYj3OkYIxSR6Bmdo3dsdtX//myyQGtBCIHZZKIg14W69MZb
      yeVfCY87kz8smUWlmgaNqyoFuS6sVjOqKiB9Xl5ShKIyV+/3kZ/t5HhdCRFJweN2kOuyM+bX
      jXwbD6zulNExOMPWwhwGJgMoqrbmXtrjzqS6xMuNNp12boTW/in+7fdH+bZliOlAOKnIaBmy
      oovhCz0u2vqnAX0F+Nd/OMyH19pXPTYZIjGZorwswlE5bZ+kcCzO1sJsMEEktvpL7P8ApaDn
      THJ3jSkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='PER by School Bubble ' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Performance by Draft Round' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Performance by Position' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy915NkSXbm93O/WoSOSF2iq3VjejBYLkCQsLUVD7T9W/lM4xNpRjNwsSAW
      M8BgpnXpSp2hr1bufLhZWZUls3u6uqe76zOrsY6ciBt+b/hxP37Od74jtNaat3iLXyhMgLc2
      8Ba/VJiP/yOO4+98EaUUaZriuu73Mqi3eIsfCuKqLlCRxhxOl7xzfY+Dh/dIKomsY7rjXTZG
      faIootPpvOnxvsVbfK+QV32j44e4lgGAliaeLTAMkzRN39jg3uIt3jTM17+lRRavmM5muEEX
      zzZJa4lpVliu9ybH9xZv8UZxZRfodXjrAr3FTxFXdoHe4i1+jnhrAG/xi8ZbA3iLXzTeGsBb
      /KLx1gDe4heNtwbwFr9oXDkPoFXDch0z6PfIoiVJLTHqDCscEHr2mxzjW7zFG8OVDaAqS+Ik
      YdDvcTpfopUCaUByiH/9Ok3TUNf1mxzrCxGtlqTRGoT4wb/7B4G++B80GjR4ToNt/aij+kGx
      ym0qq4MQ37/DcmUDaOqSg0cPCDs9VJWTVhLZRNjhECklhmFgmle+3PeGr774I9vbI3b2PkDI
      n6IRaNAarQp0k6FVCWi0hiTNiNMcpEQIE9MJoYH//v/+f/zdbz6l++5HCH6K93x1RCcn3Pn7
      /52P/+f/jUI3GKMhSIkhDbpOD8uw/6S178oz1gt7/O3f/i8ADLofffdv/J5hCEm4sc365AH9
      nXcxTOPHHhLwNMVcwaXJ/SwEWkOeKeJSoIQPgBQCvzPh2qaHfOoXjtYrbn34EY+0x40v/xX/
      +gdYYY+fox3osuTB/fuYjkd/EmL5u9SzOWgF/Q5xnbIulhfvl0LScbo4pgOAuIJl/PBL9hvA
      MBxxWuckZwf4w21M5836B09Pbt3koDK0ql7wTgFCIKSLMDsIYaGVJk9yoiyj1goQCCnwA5eN
      vochX7/NSyn48NZN7px0uDk/ojw7wr/5AeIKn/2pQGtNenCIGvYxkjHHx8ds39rG2txAa02z
      WBAWJTIMkGGIEIJGNUTFmnW+5PEvJISg43RxTffi9dP4WRiAEIJuuElhHJGvF9hBD9t3vtO1
      nkzuBt3k6CYD/YKzjRCAPJ/cPaS8bHRaa3SjyJOcOC8omyUgEIbACzyG4z6W8d13K8cyuTbs
      s78yeLdrEX3xW7y9DzC73SutfH/uaKZTpmVOdzyhnh4yMENW0QGGu0nf9TCHw/Z9cUx9fIKw
      LYzhkL43uHQdpRVRERHl6/YMBQgEoRPiWd7PwwAAPMsiKUf4wZy6zFGNwg29p1yD1q9ufW6F
      Vtn55FYX/38Lcf4ZA2G4SHuAEC9/TI8NpqkbijgnLUvyqkID0pC4oUtv1MV5A+ejju+QVzWP
      0pIbn/xP5A+/ojg7JLj14U96N1BpitKQCE3XsjGlgWlbrWtjCqZpQmDbeKaFEYYYYYgqS+qT
      E4QQGKMRGAZCCKSQ9NweuL2L62utiIuYs/js52EAjyfh0HOZpR36xiFV6ZHONE74uErt8cQ+
      X7kND2mPEOLqq/Dj71F1Q5EU5GVJWlVoNNIwcEIXPwgYmdYPtgpPegH5Wc3RKmb7+keobEX0
      2T/jXvsAq9f7ye0GWima5ZKzuqE3GuOYJkIInDAgK3xca87Y3yEpS6ZpwtDzMaRE2jZya6v9
      /GyGrhuMfg/hus89AyEkHbdLx+3+9A1Ao1DFSftCCBwBhdzA9RMUm+RpiT8Iv/VEuFjZq4Yy
      ySnrmqQsUVojLQMncHE9n75tXzqk/hjYG3e5czxnbqUM/R6dX/17sgdfUJweErz7EdL4aewG
      Wmvqk1OM8Zj8wT16o8HF7yacEJ3GIBxQBaHj4ts2iyzFkgYdx0EIgZASczJBa41arWiWK6Tv
      IV/iGv7kDUAAhrt18bpja6Zpgu/4iGqBDEck0zXB+OW+8cVkL2uKtKBpGuKypFEKwzKwAxfb
      c9myu1c6pP7QEEJwa3PI14dTLMOg67r4N/+CJpkTffZPOHsf4Qz+/HcDtV4jg4DpdE53NKJW
      iu7jOnO3g6FP0WygylOku4MUgpEfkNcV0ySh67rY566PEAKj38foty5VfXKCMAyM0eiSe/iT
      N4BnIYRg4Pks8oyB7SPUGm/QJz5bXTKCuqgo0xKlFWlZUqoGwzKxfQfTtZkMwj/pkPpDQ0rB
      u1tDbh/PMTYkgW1jBEO6n/412YPPWZ8e0nnvQ+SfSZj4WeiqQuU55mSD9eEBo/51hFa4Zhtc
      EEJi+w55kuOFHjQpmAEArmnhhBbrPCMuCwaef2lXlr6P9H10VVOfnYHW7SHasn5+BgBgSokp
      JSU2li5p8iXCsDi7c4wIbArdYNoWlu9gSJN+z38jh9QfGpZpcGPS59F0yY1JH9eyEMLAv/kp
      TTIl+uyfsHc/wh31/6x2A6019ekZ5vYWq9mC7rBHo/X5IfbJOIU0oFIIa4DKD5CG/8RFAnqu
      R60UszTBsywCy750n8IysTY32zDqbI6uqp+PAWjd0gSqvKTKSwyt2U8WuIaJNFbYwQhrt4eK
      Crb7vTeeK/ix4DsWW90OB4s110Z97PNdzAjGdD/tkz38nPXZIeF7H2JYfx4/fzObYwwHIATT
      6Sk3P3iPdVGgOQ8nr8/QTY2wfYy6pClrpNlBNzHCvFyGa0rJJAhJzw/JA8/DlJd3PSEE5njU
      vv+qg1zPT7n36JRPfv0rjh/cpsCBfE130sqi/FjQWhPPImrVkFQVhmthOW0UZuQP0GgG7gSV
      7yPdLng+6SJGKYXtfbdcwZ87eqFLWTccLdfsDnqY5z6vkCb+zV/TJKdEn/8P7O0P8SaDH3U3
      UFkGgPQ84kWE1/XI6hpDSkxpUM8OkMKk3P8Mo7OLZRTkSU4w7NFkB2jjxQEO37bxLItFliGF
      oPdUNEhrjVpHqCz9FgaQlry71SUqwbZtjg5nTPoeSZKgBt0fjQzXKE3mgCksJnbwXERmmWcU
      VYVpbVEl+0h3D6frka9TqrLCCX5aYl5No1BKvfZZD0KHfFZxuFiy1e1cfi7OkPCTLsWjL1ic
      HBC89/6PsxtoTT2dYm5vU9c1R0cHXLt1g3VZIoXAsw3qaAqOj7HzEfXyLpxG1IFF3fXQMkAV
      c4TZe+lXdG2bqmk4WS0JshxbaZCizR6Px1c3gM1Rj9v7Z9zopGBa7F3bQ+UrLN//UclwUkom
      4cvVKEZByDRJGAcBhr+DKk+Qzg7hsEseZVRJgdv1/6x84pdBNw16PsfQXOlZ7230eHS2Zp5n
      bIadZ+7RxLz1G9z4hOjrf8Ha+gB/Y/jDPQetqU5Ocba2EKZJHqXYvoXjuBhNm5wUizOs0Ri+
      foBh2hjj96nVv2AVJfXxKc7OFqo8QhrPj1trDVVNs1xgKs3YkKSdDpEQDH0Pec4svfKMtbwO
      H7/fTjTf98//Ov4ensSbhRCC0HGIyoKu4yLNPqo8w3A2cDseZVqQLuLvlCv4ofCY+6KrCnM0
      RB8dXOlzQgh2Rh0OZmumol0ELt+jwAi36H06IH/0BavPTwjfe/8HOR81UYz0XIRlobXm9OSE
      ye4meV3jWhZZnqHSU0Q1AtFQHx1hbm1hhDfBmVGUGxgnJwjHQMsFwh6254U8p1mvQbeHXmM8
      vgh7dmmpEfM0wzYNOrbzy6gI8yyLsm5olEKYAULaqKplEdq+gxO4JLPoz04kWGuNSlLqoyOk
      72NtboKUqCS58lhNQ7LZDymyhlmavvBzQjp41/+S8Eaf5KvfkhxN3+iz0HWNShOMXuu6lGlB
      I2t8NyCrKoQA42yKVhJzIwSzQfYE9dERwulj4IM+w9zaRFgBxe1vqPb3qU9P0WWJubGBtbWJ
      +UzMH1rG6DgIsKTBWZL8MgwAYOj7zLO05ehYfbQq0XUCgOlYeP2A+GzdFvr8GUDXNfXxCboq
      sXZ2kE8JDwvbRpcvola/GK5t0g1cqkKxzLMXT24hMMMdun/xG2S1z+rzL6my8ns3hDbkeYq5
      sXHxejGdMxiPQAiU1hSrFXZyin3jPXSTIYwQYbkYY4/65BRd1cjCI7vzL6g0wb72PlrECClf
      mvF9Fp5lMQmCX44BSCHwTIv0fOJIe4KqlxccfcM0CEYd4ukaVTc/2ji11tSzGfVshrm5gdF/
      PsImwwAVJ9/qul3fwTYMqkqxLnJeNq2F4eJe+0vCG13S2/9Kcvj97gbNYoHR71+szHVekVYJ
      vU6fqmkwqgr14CHu+9dA5QjTRzcxqsyopydoXVI+eIAzHKIHt5DdGhn2MUZdZK9LfXRME8VX
      GrMQ4pdjAACBbZNWLZ9HCIF0dlDFCfqcESoNSTjpkS5i6vKHjWhprWnihProGBmGWJubL2V0
      CstC1y+qP3g1Rj2fpoK6VsRF8dL3CSEww126n/wKszlg+flXlGn+JxuCynNoGuTFGRLWizWd
      fogQkiRaY5+conYmIB20ytF1ji4EOm0whkOMkYXz4Uc0sxN0qZDOJio/RFojtF5h7WyDVtTH
      x+grRCV/UQZwQZPI0ovX0t1G5QcXP64QgmDcpYgyquzqbsafAl1V1MfH0NRYO9tI52r5ie8y
      IbeGAVnWUDXNxW74MgjDx7n2l3SuB+T3/kh8cIpW380IHmdfjfGTwEldVKzTBcPBBJWmVMsV
      2vOwAw1opDWiPnkARoEx6CFMD6SDkjlm30WkMXVSIp0NVHkGukbrBqPbxdzcpJ7NqWezVz6n
      X5QBwBOaRH6+ggphtu5QcQxPGYE/DKmKiiLO39hY9HkcvFksMDc3Lw6FV4F0XXT+8lX8ZRBC
      sD0KSZOavG7/ve79Zuca4YcfY+ljVl98TRG/5BzxCtSnZ5iT8SX/PFkluB0XkRfUcYw2TcpO
      gGfKdjKXOVoIDHeCVilC2ghpIUwfVZzgv3ON7PAEnddIZwOtSlRx2o5bSqzNDWQQUB8doZIX
      BwB+cQYA0HVc1nnxZNU3XIQZoqr5xXuEEPj9AK012frFD++7QmtNE0Wtu9PpYm5sfOsCFhkE
      qOTbnQMew5CSSd+nzFpXqGxef+aRZoCz9ynhdY/y4RdE+6eo5moBgyaOkY6NsJ/I5zRlzTKa
      M7A8VJpRdDoEQCMzJAppjyiPvsbe+bgds72JKqftgVjaaN2gylOM8QSVJKi0xHB3aIrjS+Wp
      0nWxdnbagpnjE/Qz9/qLNAAhBH3PZZk/Wd3lOadE1etL73U7HoZpkC2vHnp8FS7cHa3P3Z3v
      pqkkTBPdfPdzimOZhL4NtWCVZdRXiH4JITE71wk+eB9HnrD+6jZ59OrFQTcNKoqe292yKEXU
      KaYWmJMx1dkZ/uYmWuUIaaHSEuEopNV5/OVIdwdVHLUlqM4IXUUIsYZeH10UqDjHCj+mjr98
      bkzmoI+5MaE+O6OeL9qcgdZXN4AiWfHZl7fRGk4OH/Ho8IT9B3c4mS5f/+E3Ca1JpgvKtPhW
      /qltmICmempFkPYQXadtofvT7/UdLM/+k3IFWinqszOa5bJN6HS73+k6z133TzDK0GuLeWxh
      Mk8TlL7aii7NDvbOXxBec6gPviF6dIJ6wS5yKeT5lOvT1A2L0xMG3QHmaIQuKxCCkhpb50h7
      THXyOdbGJ1zUtOrWAKWziSqOkZ09KEssO6NYzzFHI2gaVJQjrQFN9uC5ZyMMA2trC+m5ZPsP
      OZ7ev3om+GwRcXPoMC+hLApOFjM2NyeUWYRSPx4XSDUVpn5A03xAPlshEGjAci0s13qlYFZo
      2cySmLEfPPmjOabKD5D2FjxVLilMiR06rE4WBKNnaQWvGWMUoZMUORoiLIvmCi7Hy/A0F0jb
      NnUcI7zv3qWn61ucLlI6vsXJOmqzxVf9sLeLc7NDffaI1Zcr7J0dnM6TsajlEoKARmt4am6k
      D4+omgRv8g51XZMcHWKMx6zjE0K7QzldoAOFEj5llJAen7E+nWMFLpZro0WIKudAAIZHne9T
      lx3odFDrNTq2wc1R6T7S2b40ZI1mVi4RPYdhLq9uAL3A5c7+Ke+EKQQBA+FQpRF2OPpxuUCm
      hWn4YMd4nSfJlSqvKOIClAYBlmtjufZz4lk9zydtarrOk0STNq6ds0evXZ7opok5sUhma4JR
      97WlhqosaaYzjE6Isbf7vdyvYUiklJimie52aeZzzD+xM8/2uMPhNGLUD1gWOWP/WcrEK2AO
      Mfe6WPE+xdED0vWYYHeCaGpQGvPpnU5rqtmcrCwYXtvDNE1UmlJaFiPP5Sye4oafUs4+x968
      AQiKgyMsP8ZO76PNAem6xnJDbN9A6xjDvYETVjTJXez+x5jDIU0U0UTztjSyPr0wgriMiYs1
      43ADy7Cg+y24QJ3BmF8PzkNYvs/oqh9842h1dxAmqo6QZrs6256Nfa5Z+tggslXSuklPGYRn
      WSRJSWOpi3LHdqvdRhWHSGfn0mSQhiQc94hna/x+8EIWpVaKZjoFKTG3t94Yx0gYxveSuW4j
      Qx0OZxGTQZsxH3pXJwgKYWJ2biLdBfXZIfE3MVIKwvdvXbxHa00zn5MnBWXHYqPbcnea5QrR
      66KrOcIeUM9miC5Ia0I8i7DEfbSokaFEqgB3e4KqM4r1lHp+jCMkpt8nnaVI8wvM8BOMTgch
      96hPHmJt36LM9pnXksAO2e5eXoh+HodgKRFGiK6jFwpUPTYIfxASjDr4gxAEZKuEZBbh5A2n
      i9WlM4SQFtIatPHlZ68nBeG4S7ZOqfInsXStNc1q1RZ2DwaY4/Ebm/xP3dz3YgRSCjYGAfNV
      RmDZL6dMvOoa1gBr6wNcL0KqhOjRMU1Zt89lOgPLonZcXMdCCIlaR+gwwJQGebqPIwZovcRw
      RySLDKs8odKnVHlNoxY09UPUeo1h+fij63Ru/QeaZE2eeJTlDlpBtfwnmvwIbUTgNszuf8ay
      Ukws6DjPn7t+BgagacjQ6QzpbKGKo9f+cK1BOBcGEQ47eLbF9GxBMotI5hFlWoDwzolzixde
      Ixh2qLKSIslRRUF9dNwetLa3ENYPU3EmPR+dZt/LtWzToBs4REmJbZhtVda3NAKdlRjdm3jv
      7uLaS5J7D0juPEB4LqUySJqY4aBVd1NpQmpZ+EZNrizsaI3seuSxwDSm6CJF2BVud0yVVUjf
      oF7dRp3frzAd3O42XhDjD3vk2S554tFUFaXRZ2r2cDrQX65AldTRH2nyY1SdoHXz7aJAf74Q
      VPUG6ekdqrRE2lttUuulbJcXXEEIemEAoY03DC/tENnaIJktKZNlu0Poy5/zej7V8QnZUVvT
      KsPw+7/FV0AGPir7/no1B66NZRrUpUIKQfItSHe6aWhWa4xBH2mPsDbfxbaWiHJNPI0o0hzD
      bPtLN/M5xnBIrRSy2EeVfUy/oi5qBCmm6lDUx9jBGGEGSP8WVbZCDnzK49+jq8c7fRsZsp01
      hm0S7nzK8eIe04OvGIgRfv8W5sYeeuVg+O8CDegaVU7baNL39uR+RPjDHt5gG1Ueky4LsrWi
      zl6dAn8WT9MkntshNm+iqiXpYkEyj0hm7Q5RLxbUp6cEN3YxJ+P2jPEmacRVRX1ySrNcXbg9
      QsrvncHaD12KqsFA0pyrZrx2bI8L2zcmCCHOX8+xtz/Be28Hozll/ugeHi66rluejm0jdInW
      ILMYbRmoeoU3fp/09AzLzzC866AVXq9HI95DFScYo4Di0b+hVQOGBbpl+K6T+5zEx+zs/R1b
      IxvLrshjk2w1hd6A5mSBMProJkXaGxju9k/fABrdEBURwuljuyFumBKMd6iylOTsjHydXjk/
      8CxN4jGEEDi9G7h+gj/08XyL+viYIm8orYB0nbWUAdsinV+Nifht0B4Wl9TzOeZkjAz8luz1
      2AjE928Ek77PMsrxTZu8rileE+JWqxUyDNoEndbUx8cY/T7S8xDWCN3ZwRpVOOmK5b99iQ67
      pGWJU+1Txx7aWZGvVrjDj6nnC5S4j2HbSHsEQoIqkDLDCH+DKo8xBhblo88QTkiZnHGSzLFd
      j4lpYQBm8B6quI0XVnj9kDLZJ6Mgvf0Vukypo89o8qOfvgEIIYmLNcLtQVUgDA9dz3EH1/A6
      BaZrki5jkllElVevnZzP0iSefI9AWpuUD/+AylK8d64TbI+fOlQL6qKiqWqmd08okvw5l+m7
      QNc19dHxeQh2QnVy2h4ER6MLI5CB/51pES+DEIKtUcjJIqHvekRFcSlpeGmMZYkqCoxOp538
      R8cYw+FFDUMR52RaM9r+GGvs4fk5xeExi9MTrKYkTk8RTRd/tIEwfLKju7hjD2F2Wx3XekVT
      HGHKY/L5F0hni6a4i7ZmHN/+v1nNv2DDsel3OqTzh6jiEF1HmP4t6vgLhHRxAoPO9i7urU/I
      DhR5PKBO85+BASAYBROm2RxUgzS7gEDXa6S7jWhO8Qch/jBE1TXpPG5VIV7CY3kRTeJxSWI9
      nWPtfIDwi+c+8zjK1N0aMLoxuThMP/53kam+okG0EaV1WzS+tYn021Xf3Jgge72WQDeZUB8f
      I1wXnX0/B+GnIYVgcxBwPI8Z+T7LF1AmHhP6zMmkzXYfHWGORxeMVq11K0KmMny/h44l9nuf
      4G2BMf+a5OsDEi3pbd1CGCbl6TH2yIE6wvCutbQGVWP672J1PgFVobVBYU44zh4Qdjbp1RJp
      dTHcTQzvA8BAmF2kPcTq/zV1eg9pj9B1ium4hO/ewDydUs/Ln74BANhGG+8vm3aFl/awrfhq
      8lZEqZyeC6x6BKMObtcnX6cks3W7Uj+z2ttGu41XTYPKsja647htGt3yEWaIrmYvHY80DQZ7
      Y7TWuF3vctj1Cgahm6blCwmBtbXV7i4nJ5iTCcIwEKaJEXZo4rg1gpOTN1bJZpkGg47L2TJl
      FATnlIkng25mM4xzqfL66Kgd41OktzItqIQi8Dx0miI9H2n6VPYYy5thBj4y0uTzQxBdyvkh
      RgAYLqgS1cQoFVLFdxFmB2fyKY9OHqLcd9jb/s9YzgJdZ1TTf6NOvkEwR4vOeTRQIaSNFX5E
      nd5BlSuq42Oa1Qr3159iB92rG4DWmur85K2amrpuqKuK+kesnnoa42DCXFXovOUmSXuMriOE
      MNqYcx1fvFcasj3gDrtIKUnnMck8oqnqC2Po2zbzhw9QeY61vYX0n6T4W+KceI449zQucgWr
      lLqsLx2qX2UQTRRd8GeMbueCT2MMBpdCqzIMoGnQdY05ntBMp1cqAPku8BwLxzZYxTkjP2B6
      XpOs0hSERFhWO/k3Ny+NUWtNlZWkVUS/O6JZrZG9LqpOiJZf4DTvoiYbhNd7GPEZs3/5HUZ/
      iyZ9gOHs0GQPqKsR0gop65sc7/8DsyJjc/gJQT1DWj2s/l9DD/RKIkQPJ/DJ12tAUq//QJMf
      oeoEIpfq6Btkj9ZIpcTa2rp6Jnh6vM/JyZxbn/4lB998RVobmE3KxrX3GA86F+y6HxqaJ9/b
      6WyTrI8I3baMUDqbNPkhhrNJU5wipAPPaP2broXptsoERZTRVDUySzBNSWd7hxTowEWtwGMI
      a4gqTlDCajPRL0Ew6rQuV91catrxOBP9GFWaE31zF+G4iE4XXdSYrqCZzVoNG8c5f8actxXT
      GKMR1dER1uYm1vXrFHfv4rz33htpGNj1HaarlKyoGXge0ziit44xNzeojo4xtzbBMC7NgSor
      0YbA1IJmHbWTv1qg6zXVssJ2etDbIbAcFGuc2ZpmtU9lNbjmEq0FVT0kXt5lyZoweAcrOcCb
      /Ib4JCZwIkBiT/4TZfZ/UE/7mFsTtIqQ7jsIc0A9PQDtI4djRK2p1r9F82uE4SPNztUNoG40
      /a5PVbfxYa0Vvu9zenbKqB+2K8KPUFCu1ZPv9a2QWZngNc0TzUh7izo7QDpbVOkBhrfHyxpq
      mVIh8wjR7VFUCr3OiUWDaxgvVoW2xtT5IdLZfGUTDbfnk68z6qrG7TxPXFNJil6v8G/uIc75
      VHVeEd19BJaFoMJSWUsEUwql1cU9y/GY8vgYc3MTXJfy8BDz3G36vjHsuBzPYoY9D3+1ZuW6
      dI6OsLa20C/ISOdxRtRETIZjmukcORAI7VJVCpFp/L0uK2Xh10uKhcJ/71Oq5L/D2iRJj1CG
      oKpqjGof6/Y3ODt7oC2iL/6BuplQJPcx/B0w7iOdj6ibr9DHYHQGpI8+wzT6yG63fYZWH+GM
      0NKhzg4xO7+iKZdXN4CtnR3OZiscXbK9u0u/Fsg6ZyPoI6W8IMT90BBCoBuNabe3MggnzNMT
      Np7ifEh/D5UfYnlbqOoMw32GIVjX1NNpWzyxtweATbvKWknOydmCkefjdv3nCHDttQ+Q7u4r
      23gGg5AizimiHK/X8mwec4aEZeGcf+8Fqphw0sfo9S64TGWck0cZTdkgpWyN3DCQg0EbGXIc
      zMGA+uwMc+vNcJB2Jl0ePThmK/Tw0oRsNLpoYvE06qLCdCxEppHrCMICw9lCa8Xy/hGDGwMs
      dxNZ1FTrA1x7jNkNUXWHxjtCxtCkOzTpKZZznbBvEZ8kBLs+wc0JRSLJ8/foBEcY5i7N9A6W
      +zH5vX9AqGs03SFmfwHJGFWfIPwa6XWx3JtU1RKqUwzvxtUNQEiTjcljCpxLW9b8/XDa/yQI
      KOIM5dqttHmwgVzcpfBHOBeN0YyWR16eIYwQVS1baZRzgpaumxdWZQkh8EKPgSVRWrfFH43G
      dCzs4Lwhg5AXFIxniXPPwgnd1ieex3i+2UZyxuNLh0aAJorQqrnog/U0ua8xGsQRJLMIy2vv
      Wfo+KstaqRQpL0Kkb8QI6poJFUfHCdc/uUVa10RF8UTH/xx5nJHqnGEnpJntY48+BmGS7n9G
      49jYXp9GmIjqDEobozskPfkdTT7D6e7QuDYybyj/OaVe1xjWTfwbO0gcknt3sb0aQ6/Isj1s
      6wGm30WnGe6Hf0e9/galO9jXrqHyI0z7PZr4AFWYkGhEs0M1+4rGjn4GUSDdyiMWUUa6TMCw
      Gdgh8/RyJlhIG2kN295gKqdZz6mPHyswvLokMbBtsqbG7QUEww7SfHJwrssahNJsdL0AACAA
      SURBVHlOnDvldXFO07Uwi4R4/xRza/u5ya/SFJ3nF5P/hdewTcJxFwEk0zV1UbWRmLppfW3b
      fpIn+J5LOav9A0zLYPP9G5wsU3zLQgguqUy06s0GZT5DTB9h736CkBZVMkenDdbAQNobbYZ5
      9YAmccmSB0gxx+1vIYwBSA+1KpGhg9kXFKcGcnWbWgl6v/obdH8Xw7DQB7+j+GpBdnKK8BLM
      4U2szfch/ZImXiPd3bZ0MtxEOCnGaIi1uYO1cwtj3PnpG4AQAqfj4XQ86qJi9uCMfJlgZibH
      x4cki5giyWmq5ry9jkN9sqDJTtr4+hUUGC6pSZxTqR9Hc6q8JJnH5DHAE8W5F0HlOfXREdZo
      QPDOXqtB9FQ+QuU5TRRhTiZXunc7cAnGXaq8IplHGLu7F5P+TRhBfXwMgLmzg+tYBK7FIsrp
      OC61UqRVS5nIo4y8WdExwQj3EIZJXVbkR/dR/ZDQH6GVZH54F+IYd2jgdUVb/qgVZVqhohwK
      k+6nv0b6Ju72gCZvkOk+xekZXncbUdUUxju4H40xe4Ls0QH5vT8gmgne9ZvE3/wjuowx3F1U
      tW7rvvOWLGl4e6Cqn74BaDRCCmzfobvZp78zRAmb8bCLCARur63pLdOc+O4j0oM1lRNSCp/k
      9E5LaS4qVKNeOVFeRJMQQuB1fcJRB9u3yROLZLakSpeXrvVY7ErFMeZ2K3timAbBuEMyi2jq
      Bl1WrUt0rph2VTwm5PmDkDzOKes2Ng98r0bQrFaoOMa6eePCrer4DhpNlJb0PY+8qsnyAl1P
      SeIpvu5jDIeoRpFOj3DdLqleo4seydk9pD4i7NzCGl+jSe+3pYyNh65imrQiTRMsL0CXKar5
      Cp0YNEf3SD/7nPR//DPOYIfBzZBouYWyBtgbUBkzivUU0h5COmSf/T2qito2Wrpp1efKU0Ai
      RPgzaJChIZ6u8bo+pmNhOhbBzh7x/gNGezeZJmeMCTDTGOfakyJ0VU7R2kU1EarutSG7Z6IY
      QghMx8KwTaSUdB2XaZLgBM8f+gzLJBiGaB1QLB9QJA3SdHBcE7WYYwwGyGdKF6WUhJMuyekS
      M49wrl/7zj67lJJg2KGsxySzNQ4GzqiPtG0YDv+kM4GKE6r9fZxPPnnu86Ouz/E8xjYlA89l
      f/8Lws4Er1TI81LTZB5h5lMKe0hTVrjdNdFshedtIb0xdXoHYQ3Q9YoyddDzHFOHiM2QZnmE
      OfgAo+di2CPS2yd410Oa3rvoPEbnKU4jMKoRxewQ26+pyt9RBX+FtfsrRH5I9m//DWv7A6Q3
      QNcFTXKGtNZId/DT3wGEaBNOZVZesDGlaeP3XfJphDiakVcZ1vZlBQZhjUBrpKiwnBq/3/r3
      T/97HK0pk4JslZAuYsys5uhkRjKPyKOMuqwv7R5CCJz+DbwwxaozssMTCjukal5SwK41Tp3S
      BP3vRYjL7HUJNgaoKCI+WVDlJcK2W+rx8cm33gmaOKa8fx/ngw9eajybg4CzZUQRPWTg77C/
      WBEKG9ntEJ2uaJIztHbBvk9neJ2mEtTuLm5RIzsOTfYIYXhUhUYkS3DGlHmDa1qYG7s06zN0
      EiJ70Pn3/4U8OaY5/ANiPMbobmPZObrTo/tX/xVl1Zjbv8F2blOe3CW+t0BXBsWdP1Le/4rm
      JEGoENUcI8OfSY+wxxo+VV4ST9cE/QC1XOCFHnJ8jWk5xdeTy/2ihLiQ1VPltO34Li8/DiEl
      lmdjeU8MJwB0mmI7DqJpeS6qaS4zTusatcgxOzH+jQ8QUlKXNekiBg1Ox8OwjLZBxHkM3zJM
      snVCHj3b4PtbPgvbRi+XeDf2qI+PaUqXIs7x+gHGcEB93J59rrITNFFEM51hXdt7dYGPytgI
      Ex4eOuzt+gxnOQu3g/XwDMezcOpDrK1tFlmfgR2QzmZgNridbZr0dsvTaVKazEKYLnKZkYeC
      vmeic0XTRIhhl6a4hz28geVvIwKH7M4f8N/Zxdl+n+irz3C9X+M4N8hOb1OVLt7ARrshyklx
      rVtAjPTGNGcxehGSPPg/f/o7wNMwHQvPhuj2fRpvhNFxCAZdek6f09nzfrA415oRCJp8/8qr
      48DzWOYZhmXgdjz8fkgwbA/FrmywdUnw7i2M/h7Z/D7pKqFMW3KdRrM+mrN4dEb09T3kYAiG
      AQK8XtBSJNbfva7gYmILgTEcYpYpwbBDEWVkaYXs91vu0Guu36zX6CxDeO4rFOs0qlqi6gjL
      3WHU8fji7n280sCXDqkRYeu7WMMP0CpDuHtk80OC8R56tcLo2miVA5IqzZHpKU1p427tQLrE
      Gu2RH/0ew7WpoocgfJr0Pt6NG1TTFfbeNZIvjykPvsIKFNEf/gWV5AQf/K903h2hXAWWh+Pc
      IJ/eJb9/TD2/h7kbYH+0gf83/+XnsQPAuQLDOW2g99F7FHFCenqAf61DfzBk/+wh0WxFZ9R7
      fifw9mjSe6ji+Lkk2YsghCC0nzTdgPNk2tkZstPBOld0ts0Opg2oVuvmMfSwQ7F/iBoOWU9j
      6nLxhBoh2jBilZWEkx5Cim/tt7fy6VUrn5hlqDTBH4Q0dUO2TJCmC6/YCZplW/2m6wZz88WH
      cq11m1eRFtLeID5bQaOwVjOqW+9gc8bWZJP5/RUbt3yqzETlCwxnE93k2G6HJn+IMDqo4oz6
      bIU12UQ+yslETPje+9TTNTgx5Da2cY0yu4+Kp0hSHNck++ozrL1fIYTC6Tjo4DZCutSPDsA2
      MGsTlXzGav0eww//I+X8d2QP76HlAqm3QRpX3wFWsxP+9V//QKXh4b1v+PLru9z+6nMe7B9/
      qx/ne8d5JZJar1vBqU4HBDidAMe3ic/j5NujXSIRkUzXzxXICGFgeDdQ1fyVYcyn8XTTjWZ9
      Tlve3MR4piSyJc5JVLU+H25bIG6PBvgbAwbXxoxvbeH3w8eDweuHWJ7N7P4p6SK+RKvOVulr
      GdVGEKCSlvxn9PuoOEZXFYZpEI67WKFPpgzyB8/selpTLx7XP2uMXg/xguy+1gpVHCKMgLr2
      z59xTWUUXJ9IyiShCa4jViv6O+8wXT0k1T5GYeL1e8RHD7E76lzIYE0xyzCDgupI4b1znTha
      4giHqnyIKTcRlkuzSjCS61RpgQhTjE2Jt3MdYSZUdkCzSpHrHvl0iqoO0JVC+BJ37xqO/3uy
      o3+iOotw+nvkB9C4K6yt3avvAFFWcmurR1RCXTeUVU3Q67aCpEr9aMJY1A2620GY5nOCU1oK
      vI5Hvs5AgOt4NGhWpwv8QfgMrUEgnJuU8VeYwYcgX58f6Jomp3fvMhqPkeMxjVLwIj6U7KLK
      U4SWqFXW+tO2jXrqeUnHwHE8tNJtZrtWuD2PqqhaIa5zPaOKiuJB/upnLSVNnl+IUYnRiOL4
      BHN7q31tSvzNAeUiYvXlHbyb1zAsg2axQBgmwrZQUQzd7qUxtg+1RhXH1E2falViea1+mNNJ
      WNy5h7PzKzaHXaarBBWtCTs+TiXYP1vy7taH1EVBki9wlY/SA+o8o16d4GxuIVYm5ewejCZU
      UYYSU1hNUGKBcX0HtV5i139Ftvocp2ejyruUDxRiEKMCEyuEaqawehLRc6hOHqDiGmFuIqwU
      58bfkkcL3JFBdXbKOvn9t2iSNx5wd3/KtW5Kt9vFqAQmJXZ3+KM3ybPcF7MxdThGl2vC0Zgq
      L9GRZm2u2dnca+VQQq9Vj7uAiZTv0yTfYHZ//VJuT9u6KEFEEeHuDpVhErzm3rWxTXX2NYY1
      xnxB04unYQ3bMdVFRR5lLB5O6e+OsFwLwzTQtUJo0R6kX/p9BoZhXLg4cmOCmi8wJ+MLopw5
      GeB2POL7+wjLxBv3Mbpd6qMj7O3t59wj1aTkqyOUGmEHHl63VczI5jMKs4fvb+MPuliOzbh6
      wKm/id8kuBQ47oTSFLjzA4y+geXv0aR3qacKb7dPfnuN/84eyWofT3hoK8KYGxjDELkcQn4P
      dIZeaPRiTr5cYA8t3Bsj8sUj8P4GZ2OM6e+QfvF/4e70sPyPoZPTRCtKkePoe/R2PiVf7CNk
      gBUX36JJnhvy4XvtNu37/k+gPR5g+ZC2is+Wa2PaFuVpwenimI3RFtkyQTXNpVap0uyAd406
      /gor/Og5VuVjjU/puljb25haMz3vTP5si9anoeIYaYzATdF68Eri3GOYjkXoWATDDvNHZ5i2
      SVGXuB2PPGoPty+DdBx0USDOFwfpOGjbponj1k08h3AcvI5Lk+bklYB7j/B3L58NtNaU8ZQy
      WeN097A8G90kqPyMsvBw+jc4+eJzdt99H8u1UXkGUrM1gIPTCFv77GxtUtcV6+g+5ngHdEM1
      XaKtNSp2MToTVHVKUTsMJgPy1e8wCodsbBDP5mT7E/zNWxh7a2TfpC4GNMYx0kpxfJ9y+Vui
      MwMn6KIdH5XPsbe2EbKD8KF8JKjOHqC1wuIGOEtKNn9eUaBn0f6IT/OBBKOtDaq6Yj1b4vUD
      tNLPqTlIe4Q0OzT5U90YHzesOz7BHI4uIiPPNt14ES74PaMxxhW1iy7dhxQMr08wHQtpSqq8
      QgjxSnnyF8mnG/1eO5bzwiatNc3ZGUa/j31tFzuaYQUeaVRQJm1ddB5lxMf3EBI6W+9iuQJV
      HLY0AneXprbI4xi/6+N2Wzn56uQu1sZ1hC7oGxmnRYBrW3jrGanvYThj6vU9iqjB7joU+xFm
      IDEH1xBNQlUniLM1TCY8fHREbGusG7+iti3M7odYk48w7Sk6HVLNU2gaxHRB4+0ihtsEn/wn
      cIbUJ0uE7GC4u5hDCxl8QP7731Iu/h/sjSHe+PTnbQAAGDa6uZxg2hnvkciEeLrGdMwXqjkY
      7i5aZW0Bx/mqr8oCa2cb8Ywc4svUJABUXlzi9zxRnHs9ce5pCCHwB+FF/YM0JPn65UbXtlF6
      /pxgTlqJcK0U9ekpMgyRQdCeS6REakUw7JBHKWe3D1H5IcFkE8sftqJS1QLpbCPtAWVaYLkW
      J3e+ZvOdVgZRrZfI0EXVK1QdIeSE4bjDdB7RpPfw/CGNUsT7R5hjn/p4hQgHGKFBcrjCubZJ
      dXwX7Y/5Zhlxc9xHCYO4uEOTfEm+XqLzHF0KbGpU1qWxD/E//g2mrkjWHlJENLrEGAVUx8cI
      4eMEe5TzEv/f/VeE3qQ4+keE+TMgw6F55UoovAE6nV/6m5SSwAsRXYMyKajLtlAlnq6fFPUI
      geG/R728R3X4ENnvYw4GL/2eruMSPaOkpquqFa99ht8jDB8hXVT57aTlhRC4HRdVNxRJ0Wag
      XyP58lzu45wuXXzxBUa3i/T9i7JLa3eXSlqsv76L13cZ7imENSKdz6jTI6Q9wnA2WxkWranS
      kmj/iGB7hJRma1SLh5j9XXS1oogzrME2Pd9Fro6JHB/MHuHiEWu3j9AJ5bzBCsHwrhFlJ4hV
      TilT9gvFDW+I0bcITM1hKrDNWzRHfyQ9+C34K4wtk+DGx9TRJmX8jxjNbSiOyBMPOxxSZjmi
      m1DcuYNeVxhjEwyFOeljGL+ivPMz2QHSRXxJo/MSDBua51fmrtsjKlZ4/QDTMclWCX4/aMlp
      VXMerpwixTVEZ4EwX/2ohBD0HJfVuZqErutWKOol4rjS6qF1falW+ap4nDBTdUMevXwXkK6H
      zi/3OnhcA2FubFy4Qs1i2coWrlLsfpfw2hB18jXS7GI7Md5gRFn0yNZP2qZWeUWZZsTpgsn2
      tfY601OM0RBVTWkaieGOyHWDLxUdq6LUUEQ1dRmzMZAsH0zRbg97c0KzKFG+YjE/pKhqekGP
      7taAKF4R0kEvVizKzzGGKcbkU5R8F1VOMUfX6dz8D5TrD5FdiZ3+nuTov6EpaLKc+nSKNr+h
      mv2B+tGU/Kt71A8f9yke/QwMQLR1t3VetSJYL8j2nhfRPvf3oT9mlk4v6M3ZKsX2HbLpgvzB
      I2S3izmeYIYfUkd/RL+mgYRtmiitKauqVXF4jTJ0W7i/Rqtv1+tLCC74T0X88u6Nz+oFPZYt
      MUYjzMkElWYkh6dksxXuxpBw1EWKBGSE7HZaF8ndxbBanpQTOCSziCLOiU6W2E2BtdHDtNx2
      tyvPMPwRqphRJBq3t02jFOr0DrJr0e3vER98QWEaGKWBX6ZkfRud91g3K9K5YrTVoCuLjdE1
      6ukBKmkwXBju7JAFn9CE/w4n8BHUFPMjioO/RyUH2Cjy+110rfErl+jLr2l+/zvK4wKddjA6
      W1i+RrkO5nULc9tF+j8LcdxzSnA/QJrGC5XZhB2gq+dXSsd00FpRNSVCytaQZrO2E3tvSFWd
      K68ZPtLdpY6/eu3hte+6LB48aBUSXtP3q+UjbaOKM7S+orrG44J406C71Sdfp+TRizWB2jZK
      7XW1aluHmpMJmCbpIqY0PTjcJ7x1DWkaNMVJe/CXLmb/HczhXtt9/fyeDastxCnTgipKWGUR
      o9GkTaCdHWOOJjTZQ6p6ghPYKEwoZyA7IAqqacT2psOyNMgffo30XEbDMQ9KyfLhl2xtDTg7
      PGJobaCLmMYvMIZDypNHeN88ornzNasHt8mnZ9jWTazwP9JUOcLTGKMVpruiTj2a2VdILTFu
      9ZHvXcf94K+QHR9r+AFqXVDeP4Sii9Y/h4qwp2D7Dm7Xf77Ztdu7kEt5FqNgwjSZosuS+ugI
      bzIkuLHH/8/dm/VIlpxpeo+Znf347h4eHltmRmbWXsXiMpxpURAgQMBcSHcSoAv9mv47utKV
      BAjSAC10N7tn2FyripVZuUXGHr67n30z04Uns8ipYk81MBqKNCAuAojwWPx853xm3/u+T1M3
      OwHbGzaYckcI5X8reud3yxhDc3dH+/CA6Dvyu75GtV7/J4tLZxnVxQXNfEE1nWK7Nq29Luur
      P56DKhCYunlz5x+RxQXZOtmZiEyB9/67O25W8nSXpha+i3LHbyQi/m4uMJ29ff2mbsi2KYOh
      R+FI6kRQb2OMShB2gK4bdCOxgx5JkeDFMbJtQe5SsMLokomyuVmmmMk+cRJyYGliN2SbviKY
      e/iPHiF7NZGusZ/9lrLdRh7nJJ5FxztkNr8knb7ExDnF7ZpybmM5f4V77x7KzWmaOZacU8wy
      WG/Irq52xPmgxj56H9SA/NXfIJq9v4ACMAZdLn7vLrUb96fr5K28WEgL9LffYQUCP63ZTq92
      ZhXff/saQgiasn7DBgPl3wddfOsJjjGG5k1+TxCEb2US32XtPMtjdPHtxhVjDNXtLeWLl8hO
      GxmGmKKk+OILPFEhlSTbfPteQHguxYuXlE5IlhR4HZ9w0EYUBSiFcGu0PkMUbazw8TcUsbsi
      aO+KQGui6ZowtImbmr39EeGgRXp1SSU8muQ1ZXWI12oQVps8W+BaA3R5i65sah3j+T2am2dY
      fYfbdZvhwQOKs19gNxXp9R2D7/8EGfo05Yz87JIq0Li2RDtdSrPFmDmT4QkbscU93McbnxA/
      /xs2v/4pyc9eU6eH6Na/pSozLH1JNv2CcvsSU0qazQ2We4PZaxF89D9QJS++ewHouuDs/AoD
      3F2f8+Lsgturc6aLPzEkT7Cjw+S7Koc32f3DNnVZ/x7iVHzj4jJVRX1zQ6czIu3s3E1vX/bN
      saPX9mmqhuhuJxBTwSmmXKHLr5kBv9P3yHb7bR7mwPdZZdl3PugU0kVYbXT5deLcjh4fU3z5
      JQiB+9GHu8DZwMc5Ocb98EN0ltEp1yy/eP4NQ48uK5LLOyph4Q86Oz+zUrvkudUU3CVNfo1z
      8GPQDvqP0OOl76PaLaJnZ0ilsHVJqhpa7SHNeo1/6OIEFtFKoRuNkApdLjFRhWwJ9LqiCGoC
      x6ZZ5qzTO4aH95mMTrj7/Fcs0gJ3VDNuHxK32zT5DfnNDWqzoRIClTe0E80hES835xhT0lWS
      u+tfIh2H1oMRynFxHj7EP1K0D/tYnR9TbwaIIiHfpqTbKyqR0lQ3NPkVd8snrP3H330SfHNz
      R0s2bEoYHxxTXl4xm844fjT8k2qBjDbU5RYhXZpig2CJcPYAiR06VHlJNNvghy1EsoA3oVl6
      u0Xn+W4zKAQ91We6vWMU/qEfV9iSYNQimUcszqd0J32EM6HK75BG7NSMqxV8i77HFoIoywi+
      MyzD280e8iWUFvVsjs5z3EcP4Y3WqWkadLaiTtdgecjJBDmZ0Hnxmrv/++/of/QI0euTb1P0
      ckH4+AHNYrHLEqr1bgJ79QzZVWjaSP8BTWOg36f8XcDVt2zc87xGdttUV+fkxwc41DRVTZ1u
      kAMXnd+i/IfYbky8kjQqxjEWxfwlanDMdntFoFusbl7QGmucJESYDbGfcxnX/DCOcSc/JFuv
      mF/+nOouJnwUsDA+6bagLG3a7ohFuWGeLPHrOY7VYnmT0fYavPdcKnmKsAqESvDHx5jWFLXM
      yAdDmjJGRQ2zrSLdzOj5Lbxw+d0LwHMtLq5W3O+nRHFEZ7gPTcF0OqXfOf2TaYGEFCjLxtQR
      1DHSO4DqDmG1EVYXqxXgeC7pcouvEpTXo57NUO02zu8lL1iWRVLHaBoc65tCuO6kTxFnbK6W
      dA8HWG4f02wgyVG2j/oWfU9HKeZpQkt5/6xM4nfLGIPOferFGWgHu9NHPTz9Q0ZZsUa5LZQA
      k69A7wqute8QLV22F9fYry9xfAf30SOk4yAsGyUFpl5Rr+ZYLR8V9pHOHyZPqMk+9WKx28D/
      3s8skxzLtmkM+N0W0/ktx++9TzNfYfUUpllT1we0hh2oUxzXMLtR+E22GxpaDZvCEMQxbfeG
      ZuljPxijBh3qzz6jkxfU2safgG9uKGpITgxOsId83cJ25+SRoD3ew2qXDAY2qXlIc3uJc/Ie
      utVGlGe48kvyjUL6Drb/iHD0Y+Lz/xUrL7gtGtyDxwx7NZPxEVXp4/jVdy+A4fiQ4fhw90m4
      SwXqPnj8Xb/9/8MlUO4E3J1Mt8leY5oU0aSY7BzlHSHtLq29HsmTl6hI4p0cfqvMdxgMuY1u
      mLS/me+zG0IF2J7D6mKO3wtx9AZTJtj73/5/+H2ZxPD3Uaz/0TLGoON4pxcKAqQ7AitCDXrf
      PEYtU5AK4fcQ/q7ommrX6oVHNtntFa2Wxgok9fXTNwCNBt3cYvVOMEWBdXiMtL5JshG2jWy1
      0Os16s3Qry5rqqLC74bEd1Psgwn2/IL6+g7hChAlTWFQbg9BitYF0tnHEVNcqyK2HFavn9E1
      AWp2RWMvcDr/FaY0LK9+xXZT8d6Jw7Qc0woF+VfXuPacVL1Dc5Xz+MEx27rCnfQo6oief8Bq
      OWeYexTuiHj+imxpYZTBdWyC9kPy7RlN+jPs3hH5/QeszzYMRgNQC/y9fYwukFkJlffnvwk2
      xpCVu2GPEBIrOMUKHiJUuIMk1BH19kvK88+xvQwTGvLo2yEWQkjaboeo+OOht8q2GJ7uU20i
      ohuN7HfQ5Qyjv739++dkEsaYnZfgTRK0GgzQSYI1HGINH73ZFH/d15umwhiBqXYDqbqsiOdb
      yrQgHLTpjHvYyidtnaIefIJ1cIpxFGpvjJ5GZP/073ZveLxCby4x2QpTl3/wv1Ct1o7unufo
      RpNvdmaabBXhBQ7LdMvo4GRn+8ymmCajqvfwOj66XCBkQLUt0OmCqOVjZE0vTpG//JLGjZDy
      AHvvIfLRIbN1zqDToLyA/YMRL3/1Faa5o9h7zNgInNEJje0gmwxVNJhE4s0KoukW68Sl+/jH
      jO+foo4/4S60MT2B8WZ4x/dZVl2ulzFhb8y90xI7LyDKKJMMig56uabRyz//AhBCEKcz8vLr
      iapQ/i4QqY4xOZi4gxp1sQ/ex3UFykqJ715QZzs/sNFfXwSh0yIt/3lquilLQl8RPLjH6qpB
      G/lG4PbtJ03/sUziLU3y9g6h1C7Ls27Qmw3WwQHCtv8gce7t90VTdNJQJRnbL59TbhLCYRu/
      G2LynGa9Jnx0H2VDfPMcPINz/3sY7VCtl3g/+LfI/kOa3EaXzq6YshVme4VeX+w+tteolk0z
      n5LMNwSD9ptz/jlqb4SuM2ReIwcBeDXpZYrfG4BpMNUK6eyxOTsjzWKcm9dYz6+oG5/up+8j
      gzXaO4TBEZdXP6dT+Fi9kmKbUlw95fCgz0KNibI2ni0YOJLN5jWNkrQefw9p7aH6hzQHJ2Tb
      Z9TJUyy7z9gxDLof8mx5yTouuFvXtMOIARfYysIOT3FOWrjWCetfLDFSY7fblIsV6q//+q//
      +j/HhViWJe53CJn6z72uXr/infc+ZZUssEyOst7wbY2hWSYIy0W2NdIdAg0mvsbqPcT2+6Rb
      sFwfYRJMvcHUMUZn+E6LZboidL/ZJpiqopkvsCb72K6N126xfH2NE7YQerPbe3xL+2RLSVwU
      2ElCs94ggwBr0AfLop7NEI6NNRi85WuZRtPUhirXlNEdVSooL55TdA7Ii5SjT7+HzBJMujv+
      bKIIa3+MFBvqfI0RfYwIsOwC6ghhOjsJthRYoxHS9dDbBF1ohNdBtkdIv7uTkDclebTBim5R
      jia/vcaRFRut6YQ+IinAXYAVos0Aqyxo4teQB2wvbokW5xwc38OIBVb/mDrK8Mcl5d0N3e//
      j1zMX2Eup2TJbxgfHlFHOf5gD528RvTfIZre4YxC2o1EqTHX0w3tfIN7+IBaBgivRyW6OPUd
      NCsQiipLKaqQaXrDsfotfvdd3O4pZXWM1DWirNDpDBOGVBevsHs2Rtz/yyiA4wcPCdwWyzTG
      1itkqWgWS6zREBW2EVYb6i1GVwitMKJA0OC2e+TbHCF9bL+3g2xLF6FTsmKBaGKkKXYXjlDQ
      7BSU1uHXZhGpJMFgRHR3Tl152Fb0jSIwxiC2W7LlEqvVwh70QVk0WU5+fkXjhdQoqqzcfRTV
      20Ge7fvYroLFJd7BPo0TksVrhofHyDDAlBXl+QWq7wJbpNNH6xBl2zT5DIxGZBb2/g7dKj1v
      B/FWanek2mphypJmtcLkOdL1KAqBFfawu0N0Jck3JcHpKavFBZ0sRVgxvs5E4wAAIABJREFU
      en1NfjXHc1xMXVAld8Tj9zCvXuEejfFHNrX2kZuMyskx81eYzkM2cohJvqKTZpTDHGtW4O69
      Qx0n6KDEZA66rWmSAT4Ndv8R82efYe/3EE1KtgVRQhIIel6fuG6xWF4QtsYM1RmBvuZ13aPj
      tnbtp3HJr2d4Jx/gjDtUL55TuRYsF6hx+pdhijemRgiLvfYed69f0HXP8CbvIuTu+FEIgXBG
      GF3SJFMkPZAuOr8i6I4oUk26TnY5QNJCOANGdp/b6JrJG9CGKdfUt7Nd/nyTgAremlqEFPTu
      vc/26gmrm4DO+AY7mKAbTTVfUm4jZLuD2x5yt00YlgYTx8imxr13hLLtt5bHb/5thvomRds1
      aVZTNjnZJqGpG8gzdBnhPOpiMtBrhRwpvI5NOj8D6VPeZgT3jxCeSzOdYXfayMmEZhvtQHbD
      Iard3vG96pridkqVFYSHY0QQUFzd4XUCtklB0EiaUoJeoe0j/PdPsV3JZvoLygj8n/6fVAd9
      /H5AMf0cqR8QrTZoP4fsjtYP/idW168ZFksqLyfovI9T1xTRFcIqsRiQtj1GosXrmzX9oxP0
      658T2TkftM5JNpJeq0eU21w/L6G3R6Bf0Q33sNJfI9wR3dEpsiy4WS3o5nO6nQvCd94jufwK
      1aSEH0wofr2C058gqs1fQAEYQ5NfIxnRrNbsHd5jXhZYxQxld96Y0ndLSAfV+wC9fgZhfydB
      KJfYdoO2+ySLiHDQQryJHu94PTb5lq7Xo5mlOCcfgZKYOkYXU3RToxuD0S5N42J5E+riisVL
      icMNbjDEHY9ojUdv/ceqdCmmU9rd9j8TN7JbutGkr84xYRvHauG0bcqLBXZdkJxf4dobrPEE
      6YwQvnjjW7jD1AtwJrhCUoaCLC5ouS5vp9dCoLodZKe9mxFojRqOMAhqr0Xr6AC93VI9f0F5
      fokc9tg4UyadAfJQgOhSRCVWGDCbXyAjGBx/Slm9Ig0kLQeidYg1/xLT9/A3F6iDA6bnv2JU
      vkaLe0T6nNbZEvW4jV9MqJqXYI7IipeUS8X9sMU0zXDVmrjZp3Y+QvZecrNNabY1rRICFP3R
      IXX0SxoxxFgtzGaGnK1wGmgOx0x1wnD275HrW5q9Y8x6S+/hiEVU0h79Cwgx/39ezWJF3Vzi
      3vsrhJDs2TazVDCUJegZwh59DcyQFkK1EM4Ind8g7M6O8FLO8Ns7ObTfDZG2wlc+62iJul4j
      Wl3K7e9EZwIhdoWiLInlltjk0FRYWUlVVVRWG9NSqPBrpoCpKqzZnKQVQvvb7YzGGJqqpohy
      msWc4HCMClzMJqVZg+xJeB1jJdeUk/ew7d+LeTElslMjeIi+ne3A1EfHWI5FsorxlMLU9VsI
      hxC7/YCpKurpHek6JRi2qe8yhBQ0yib8/icUaYZ69SWi18dUK6qqjWxNmL56RtepcB48ojpf
      YsYhRQ7b3/4Trc73YeJRJSsY1yz8AV2pMZsAy75BbEose4qeHkLbwW6GlH2wz3P0ykJ+fMhx
      o/n1uWDP1ay2Cid4hOhMmRy1GOUuF89/hbteIHo/ROgtMr7FosTdU0y8AVezr2jpMbeFpNv9
      AB+X0j6lddym9eQzouvpX0YB2Hvvgyqpt79BekdIZ8goCFmkgtEbC590D9708r8LjrIQ7iFN
      vqQpl2gzQFcRmJTVpY9yPLyWT2ddE4eCybj/R6XNprFpViWmtrD3P0E1tzhVQ7a6Jrpe4PcP
      UI2Dzgqsgwl9YJVlDMPwbQCcMYYyKajyEsuxcE2BPNq1IWZzS3m9RA33IXVR/X3cBx+hq51O
      qTXsYHSMqWOktwNtKNeh0hIr21LkLm4npIwq3CTZPXmM2R13xjE6L8i2GX43gLJEDQYIz6NZ
      nxEMh8zrC4bH96jWzyEfE6+vcAaC0djFEJJeJuisxAxcuq0C0iH1xTPUxMe0DZHIcdURbr6k
      HD0kPftHnP4RtjdCt99DrH5G071PdvsZ3t2C5vgImSxI7qaM+/ucxVtq13AvtBD6PWaLr+i1
      1+hxB2/wI5z8jvj5GXXLQR59SlW/QKYbhmbCLDlj//Adku2WshCEfcXmco3yBjRnL777JtgY
      TV4U2JZFkWcUZQ1aY4RESvEn3ASfcfTwMVK5CKsFTbLr0XWO57RYJCWuDCk2r6lyQZXX1HlF
      Fcc0WoFxUE4LS61xwjZOe4IXZECBXqWEkz1qTyEE2OoPJQ2maXYtRJJg9fqobucNxbGDMAlu
      7x3qLKVZbCnTGHffxzQJwpRoFLUBC0m2SajSEsuz8UIXNutdLAmgtxHV+ROcRx+j+n1qS5Fs
      VozuP8TEMXbgka5usF2J8nYT3Ga5QrXbWL0OtZE7CntRgufRzGbQ1Og4wRQlMgyohI077OP0
      e8h2G5OmZF89xz6YYByb5PqMzn6POt2yWeX0Hn+CSJYUy5wmXuP6PZwe5F4HsfgSOx+A2JBu
      ZhTdW0pzyJ4bUJU1dTxl2+zTFgvwHyLKc7TTxfM7xBcXZKN7jE8PaKYBsXdJW5dEdwmHB11s
      L8BSa7xAsFhGyEKi5hGWf0D743eR5Rn13Rcgalz7BP/gR3QOHjFdPaebpuiwy7JMaOmI+PIS
      fyS/+xNgdnPFYrHm3oefUKUxr6+meLbAcls8fHDyJ2WEba6XKMdCSIGpQYgdC0BwjqthVnbY
      7z2AeoawFKK7j4luEZ3fT2s+xNRb9Bvmlx3NqJwVcWTTHY25S25w22/SI7SmWSwxRu9AFpaF
      gT8Qowl3nya5wtE+VVBhd09Itg1BL0QojZOvuLl5TV8JXMtFChtTOZRJinBd7Pv3AKhvrnFO
      H+2eBG9BhG98wcMB5evPcPdOyCKbwNaYosDoBjwXCdRFiRf4JJc32OaOMq9wH9x7OwmvsnK3
      J3Cst++fCEMq28OpCqbPb+gpxebmFUnpEdqCqqhwxh08t0354hXNcoEcWhTlOd7KxdRLjKjR
      p/dJzp9y8s6HiMImzXzUcooYNrBpkL5Nvc7xe/vU6QIjwRkJ9FVIE55RJ13ao08wZ3+Pul6x
      MIbxSCJFm77bpoluieU1zuxzRH6IDEYEj++Rv1ywnf0SvzzDHp7Q2SxZdSRja0O7/QNuLn5F
      57GHJf4Fe4DGGHzPoaprPFtxeHyP7fIOIczbN+ZPQYkE8DrBG/1+RdAbI8wapIVQD/BMjZ1N
      WUQ3jDoTTBOh6zlC199wiaHaCBVSTV+AdHEP3scul0S3z2h1xyyjKe1dxtaOyKLUblv5LX+3
      TjL01iAHCt99l3T6HMvZZ/P8nCYv8Ns+++GQGENr2MOQ00RLjFsgBwG6SmjmG1TXBcf/gyGa
      MezkDcUN1sEjmmWE02+RLLY42Y7GWN3dgQHLQOUEtD5+n3QZ423mbJ+8pPP+Q5rGUGYlQT/8
      g/cuv7zBPZwgQp/0t59R1hnO3pCw49M7fo/y8nOs0SdUV0+xjh6i0xt0a0D5y3/A36ypHYn7
      yXvc3v0tJ/vfg5lP1vaQyedYh8eo688Qxz/AbKc4jodo+yx/8Wvapx9RNQ6lMZjtU+zgv6My
      v0b6Ce7RV8yfucSLDrYbYu/t0330gCfTM0bhpzTVGiWh+vJL3NEDhH9Mvt5QXMzw75+i/YLV
      /IZO9nMG/R+S6YKm+JdA8g6OWK4jfBqE22Kv7eCrBstr/WkheVK8JS8a8ybiRPu4foxUDsLy
      CdsnqKpgGV0y8H2k3aKJLlHi6O1R6e9WE2Uoe4zs2pjyBsvdpzNuk7z6nLRK6L33V1j2H2/1
      fuclFgis7ohmdU2tU3RiUea/xdl7B/fBMWWc4fZDiqKg0gK7thGpgz08wJQl5eUzVD+guXmG
      aN1DSAekg0kyaHKobrGCQ0CBW9HcXCG3MaUXEAzUWxaAMYZkEaGUwg09jLVHUOTEz14jfJ/2
      gz/UPem8oK40flPx6j88QXYUh+9+Sn63xrM9KJY443vUr89QvTakMVavzXz5nJAGe3iMEVes
      bn6DG2vC03coKcl++xXdjxWbdYknJGKTY/dc1N6Q7PwrdFORiRw/G6DKf89aHNCbQHazIE98
      ajMiHG0oF0vEgYNK5vjiAWH4HnXoYyVdyugW+709lNclMGPUi1sq6zn1so+VrGm2t2RHXVz9
      DwyPv8+mdv4lkDzFcPCHisdW559POPsvs8xuwCXtNzHpLXTTkK0NRFcEo93F49kupnXCtsrp
      NAnC61KvPsfqfYBQu9Zml9+ToUaj3V1dWJSvvwDpEJ58iIqXXL36GcfjDwCFaTToHazalCU6
      y9DrDcJxdptIaaGlg2nm+J0JoveAMrokj2O8Xov4bIPrO2yqnG5VYe/v78z0iyXuo48QSmKC
      FqJ3jGmSnchPNjRfzdCrd9FyAWJHggGBczjBhF3KpsH/3amXENj+Thbuhh5xVuKgaVpdPMu8
      nQVIx0E3mujpC6rakLiKyq9478P3KeIUd9jC6Z5Q3b1A6DZNfIfqvkujr6HUJNdLRlTU2y+Q
      /+rHxLefMWq/T3F1R7KoCSYVIjqmuPic0dE+Tr8PnS3FdkNzMcf++APKhaZVXlDJDZF8iLr9
      KU3nAxr9C5qppj3osbAtgvKcOujSZBeMsi7XL3MO/TbWng+yQx1/AfkIbS5R/R71+gY7CHH9
      +6xvzlGTEYuLv6MuVn8Bp0AGmugC6U5Av+nDG40rG+qixfbJL3HbhyjHxQJUVbI1hpYdotcX
      5Jv/gHLGYEJ0FGMNh9TX1zTrNcLzUd1joKLevsLx9ml37jE9f0q/3UbZu4musOzd7MCycN55
      523Uiu05OKEL3H+DUj3E2htQpQvK3KX1aESxSbCvt2SnJ7iuS317h/PgAUIpTLZCBLsUOWG1
      MfiYbYRsDTBaY/V6u1iTuka+yQK1PQudavIoe/tkdIKdmd3xXYJeyPxXFwy+9x5FnCNCh+Ju
      TpUW6CQhbxrk+w9x0oz9kcQYRV3UtCcn6GKKPXmH+uoG1WuRff5PuB/vU2xmeNHOp+B8+gHT
      rMauShzjkEsb74HBthLWv7zGzpdY776HNRmQXb+ienpL/fAEK1Kkl3ckkxV5e58ivkK279HO
      fo0XdNh0H3DQd5BxACpCbJbIwQhn/RUiaJG02rSWAdnNHMcPgAhr3MZUEul3IFBY1gglYs7X
      HsfXLm4k//zFcADoHvX6DFOXb6a+NioMcccjOu//CO0XFMpFDgZ0jo+xx2Oy3gB78hjv9L9G
      tBVNcYbz8ARjNMJ1cT/4AOfhKbLTQSgPIYY00ZRWk6D7fSpvD92uUaNgF1EiFKXfIdukWJ5N
      a9TBbXm/h1LdWR6F8rD8Ll6rIJltkNGazuNTkvmG9PJqF1n+ppU0RYxwdhDyermkXix2d+uw
      hX10RBNF6CzbcYHHY6zxmHo6w215GGMokt+pZHeop7qoKLMSt9uiyTKEgOXrGdqAF9gU2RbG
      Q/bCkPj2Kf3Dj8lWqzcJegXC7tAsN9CqES1QE0X5/ILtkwy3XGPfP2LlHRPGl4iyRx7HhKMe
      0rkkWh9RN7e07x8g6i7JF/+AWYLyXZJlxfTFNeIQGPeQFNzvQdduEE0HtzWiNRgRpQG+U2Pt
      fYJ9/AOqM4dw/D9jmiP8eE7srFD7J9T5AGNF6G2NjhKE2VBEA65/dY2/cjg1XSK7BQcf/CUU
      gEB7Ifb+e2BvEYGH9P1dG2JZCGnhD+7jhRFFkpMso7cOrbgxUJWYpYXyjikuf4YRa0ydU89m
      NLPZLgQ3CLDH+7gnH2JPHtDv2RQtTVP32f72OWl0TW1b+G8wS5bzTQeYkC5CBTtGsdVGKgsn
      n1J5bUzdMFaahXIo3kQSGqN3QLcso765Qfo+9niMKau3qc/WeEx1foHwvDfHrxaq06ZZrfA7
      AU3VUL7xRbstj3ixpYgzVLvF5sUVttT0AqiEYiUF9vEpo26Lzeef4fc61FmEciyU28c0OVSK
      Jj1HN+eYGJyTDzD9gOryAhnHJMND7Ewg8zXl1qMzeUhtXlPFAnexwB5J/E+/R0MGKLKbBfOF
      R7xJaB8pDg8FQXVJVRW0+h/TLJeILtTJC1r1U5JqhttIFmdniJnCPzwmv/6SzvBditZPcPKK
      7YtfYdxr6tUKvWqo5hbr53fkz/+ePc9g9dp4Pxix/+Ep0WH0FyCGe/WCXlPRRAVKuDTbczDu
      Ljb9bVy5REgbpSLsoE+2TrAaTZlmVD//KcrrIFsdVHgAVokIFdI3qFYPFeyi13k7Sbax7B7L
      y6eo1Qx78hjp9/GCDGFKkP4fHZgJ5aHrLUIomnmK6rk4gU32+g452iPotUnLEp2UWDpBryKw
      XKy9PUyWUb56Rb7dsr06p2t7oDXSc9/CMIRSCMdBpykIgd3yKaIcjCHfpkTTDa1Rl6AbIGa3
      1NKmGY/IjMZbbnFHu9Tnu5sv2eseUizu8Pf6YHIQLuX5L7D295FyCFUNdk76my9olI/zg++T
      byv8+CXx7Yr2wQR7MCC/eYJbHWP0AjNWmHyPRbEiPZ9jNQbvRz/Abp6hRIVYX1CLI0T7Ae5m
      A60lJs2Z3Y0ZlQHy4pb44hXpbE4gLhFCorwatXzBncwYmYDKzigXc8h6bD2QwxZt30WYKd7R
      MVZPkb78W6RjkLf1X8AeQEqCY5u6LMmrNn7/FJ1dIcUEqhpjNKZu0HlGs5lh6ldIQurNFrOJ
      yCdtVK+LEgJqjRAddLZA2CFa3oGoUf7e7u6tNXmc7zRH7RNWo4yOm2BElywK8LsWJr9COgOE
      Cr7913XGlBe/wd57B2G7lBefEz56TFVIdFJibIld58RfPcV/51NEVVCdvcbUFc7pKZvpFXLV
      Qbru2w2scJ1dENdksnsKDAbUNzfodg+jNdu7NcpWHHxwTHJ2RdMJsCdjpli0q4ahrtm6AZ5t
      kV09w50coj2J67Sp7xbgrjG5wr3/Vxi2NMsc0RYkT/4O6b2DN46IsojB6EOSL3+GwkcZTfzs
      59hWC3swZHr7BaguW6+gX0UIKyf80X/PxYv/Hb+zT9heI80DkiTAv7jC7LnotKE+E0i3hfvu
      Qxw+pbl8QW630O0UygKhQ9yWQ/j0Jc2oi5tlXGcN9iBnmK7wvBod9LHFCdXtK+r5FKKc7OVv
      8T/65M+/AEyjKRcBSq6Q+WfEizGuZ1Fnn++I41qDMQjXRXVGNNEU4Sqc1iHB94aUmytmhWbU
      beF7uyeYMn10ucWUW4Qak89nVMkCZXVRWYXd3Wnr/UgTRyW+uMLWmnjh4IY+ktcgBdIdIix7
      Fz+iFKgdhMLq3kPXM8zSwrn3Mbq6xQn2KLcV1tkt236Lbi+kms1piopgf4ga9FldvsTUDRtV
      7sK7tN4F2oYhTVlSfPkE6/FjiqwGO0Au5oT338QWbjZUtwWy06HsBMSLOfv9FvkmQ9Pg9jqU
      ywXrNGHv3ik6XyHUCjoNxEdQNwjLRmcFOr9E15eYxSFVX5Ef7NM1fdIn/4hqfNKjIUFaUqcp
      TfsR0dNfUpkFPf8nBPIOs55hf3xMnvwttgzQwkI2Arc3oZxPGZ0eUpz/I82lwr3/Q/TNHXqq
      aKJzPMunrq6ZrjWHgwRpH6PjBtVvsZm9Bs9iT+2RXJXU7SPKQoA+wx09RCgP5YQ0PMUUCcnP
      fv7nXwBCCrKkgsoh7E1w5DVls4dz8B62nyK9I0yW0Ww2uwnrZEJ5+RTV9cC2sIMWh0Yyu5uR
      1ppuv40QvLEDltA8wfLH+P4+9eoG2QvBqhHs3GOzeErQGiNMhSdXlAVY/gAntGmKKbIJEaaF
      Liua1RJhO2igni6QPY96boMWFHf/CDrEsV3yr56QDzvYRKhOj3i+obh4QXtyRKMETZrCsI83
      GFHf3FK+OkO3uzSDfYrffI5/fIi9N8KEDsmzVzth33hAmmsKV1JvYvbHY5rtFrvKiLVNb8+j
      2JxR4FKuznDcJcKZYAXvUxcL7MM9qpsz6tUFclRQPZN4J6dc1WdM9AF5ZNCrM0zLoUxh4dsE
      DFF3U8ziAvf+O/S6Cq0TqiSiNhVYIcHegCR+hqpblKsKq/Zooit0kuO88y7uo4/g6gLTusY+
      aSH1EFecMv3iy12Pv/oNheOB6dK4Y/YHQ5wP79GThotpSBA9odMbQL6AXKC6e6iOBnuAVtd/
      /gUAgv7DAxojWV8tcIIP8IIpdTWnXnjY9a+x+g92tkPYYT/3H2JUhLQVBEeY+I7J+D6zKGIb
      V4ha47YCwocjpAXV7VOEbON/+m8A3rjHEqTdZjh8l02xZRgcgT7AyheU0Zp02yHoHWHqlKa4
      xmQOwnJ2uvzZHGu8k140y2uaVYZs98BJsLoTusWceWLYOxkimpp8+RrHG6LXCdNVRBXD1jX0
      q4bSa6FrsOoKz5dwcogpCurliuJ6F7Tlvf8OteeRkWKlNS1lY5RCxzEqbKG3FdXsjMiy6Tqv
      0JXC6j9AuhPq2QJrPN7FPPpLzCqhvgZpHbKJL/DG+5SrGL2YkfldPKdCNSHd/Ba19ZEnmiRx
      GAUDtL6gvHyGfHAft/8Rs1ef0fhL+qM+zLrMr18w/vEPKH/9fyD9EOfehzTpBcLyMJlLtYzQ
      yYpa7TEZ3mPWHGCHCruWDKwNZ53Rzkc8XyMDm2H+FaskRVWK4OAAVUiq1Uucg/vY90bg3vvu
      BZBFa15cTPnwg3dZza7JGosmXeP3xoyHf8KBmADp7dz9o0cT0mXM9srHrq9wei0KZ4iyE6BL
      s1ojPHeXrGaCN7qfMeiGMi0ISlgrw7DXpklL6qJEzteozn2Ele48r3YfYfcwVhdTb7HqObrK
      qHQXRzmocIzn96mSa5K4obU3QdgBjblGdV30qsb94H1MUVC+WmBUif/9jxF+i2Y1p4mucR4+
      4KB7wsXzl3gmY//f/DcIIZlP1/iNwNzaLF5d0rrfIui1EIM2TRxjsgw1HFE8f0b1+hwePMbv
      BqyefoU5PGBvfx8TGKLpmnyTIqMI3RnSGRWkL5+Rhj4Df4IT+FSFwqk1st0GKaniJzTrBHsy
      If7FFdLPuHPAWmukrnDnnzM87RKFH+JfPkdsC9x322RPr1GPTwg++ojks/8NozVSHGPShFRL
      /DLFKly0+Qoz7lH+/G8QXoB7+n1MoshfPKHJYqz2Iaa7QQQVNENMFXP7s8/48OAhwT0XrJzg
      bk2xAdcbUy9fYLVLWp0Dmjyl/O1n1DNB+MNTrJMBevMK6tF3L4DFJuZ05LMqYTqdYQVdKEus
      qvrTB2O9+bk6jrHyhNZej7zuUeo56C3bO41rrbGDCdL33369USOSuxeQ1dh7Q7xewD4B8zSh
      70rKm2t02MWTCqX6mCamSa8Q7j4gQIRgh/TElrv550y69xFWFxBI/whPrdi+/gLb6uJOHlDd
      XiH8iuzJZwinhf3oEViSKjrHLDfITgc5PKAp5mR312CV2O1jsm2GE3rkCAYHfZJ4CLWgViWN
      dkCzU3rGCcUXn2M9OKUJ+1jxknmd4Y33cJZLyqYBz8Pvt1g+eU2nrajWzzHFFeXgAWaT4YxD
      hMmo8j4mjnCO9ik3n+30R7hEX7wi6ZwQmSXG6tNbrpG3r7A+HKIdQ76qGGYp0qrJ7q4xnRbW
      4T753U/RUYV65zFWsMf6p/8X/tiiYYFWh9ShQi176PgrrPYhulQ06RzttGnchsq5w2pNWKxf
      kt89I1xbHBw8YlOv8fI9jMnoDXrcFS84tF10z0PfOATBms06pVwFtP/1EbXrUUchfvOQ+upf
      oAXqt31eXs44baWMRiNWSYXv+2ht/qSQPCEFIk3RSYJqtVFHRwB4xpBtPOp0CtWaZHZF5x0f
      Ww1oyno3BZWCcPQQk7xAqgJp7URho7phEa3Ye3SKFIJ8m1JnFX63swuALW6R7uRrHZE1oIdF
      2sS0uNsBMKweUnUIg5JKpmSf/wo76EIucU+PQFZIR9EsN0gdIEcC5XXQ6w3rTYXwtzx4+CHz
      JMHC4vZmzajrUswX2GVJ5/59iukt7dP3d4aW+QIr8LHfe4/o5QXW6TF5YDGoaqxel1prTJph
      tds0i2vC8prNNqBtL3HGnzBLSzp+jSTHCu8h05TC99HxF1jhYzbnX5JvVpg8QFlrwvA+2+0U
      O4lxPgyo0wRLPsSNnqJEDd0WlkmI2gGjYED58nPksMGxD0mf/IbmgyNkPsdfDmGYsDlrEZS/
      xv9XHyBVnyZuo6NbvP0eblGyTUvK+RO6OqRV2lRiQGd8iuo7rKOn7PWOsaoNV9sYRE29ynE6
      DhhJa92wee+QptWi1euRvnzO9rrAPzz57gUQdod80h0C0AoC9v4TX/9fbGlDts0QfgupBU5V
      Iy31VhdUCUOySmg9fIfo9pZ4tiCcfEQwaL09rzfthzTLLxFe7y02aO/kHos0YRS28LshutFk
      mwSpJF77CF3eIqzO24CpltvmNoppBwfQZDTJBc08RvpDxFWEdGzqoCI8eR8hbXQSU57/FjXc
      w2odYOoNTTZnefGM4PSH+C6YakXHCYmmM3RUUDXe7thzcY0Tb4nqkvbrM1QQ7oDWQpCsYvK9
      Pt50yvDkBJPl6CjCPjmhnl1T3X2FKRqc/SGc31AmBerBCBU9pz32KOIUWdWIjkuTPec2OiRg
      i729w58VpO09srIiv10xNiucRwOwM6zGR+QF9usZ4ocfoXormhcxjA7Q06+okxin85A8PcA7
      SImdJfI2wjI1zZVLmUWMf3SI1b1PsSnQ6wWyMYiBIPrZOdokjA5HWGEPbYeI8Q3WwGaZbrHs
      NnklUZtbvHxM7fZwDiXe4APSv/v3yNaWwT4siwb16gyVGoKwoMhe/wVMgqWgdbxPOGzjhB5l
      VpIuY5JFRL7c0Gy3OIen5LGF2+7RmeyT3P6SIv4apiGUC41F+fpzrOEQ1WqhpGQQhMyTXTy6
      VJJw0Mb2HZJlTN0MQOfocr47ZhWCUThikcyhVlSvNgjpUrz6DWocEHz0Kf7R+8S3LykunmHK
      Cuf+95B+F51foQvN7Vc/o3PyiCDsQmlT302RiytW2mL8zj3Ckwl1O47yAAAgAElEQVTJMgZl
      0Rv1aBYZ8fzNLEBKoihhU5cMBn06R0fUN7cIz0W4iurmCarnIr0BMnRprB6+q8AZcPbLXzEw
      GeQbkIfMVtcs0guszvc4HE+wL15i1inbXBJHd8iqha8iWidD7HBJeTNH2Q3xiy/xf3CC0LeI
      okSOf4IsBNlnzxA9FzP+b3HFAiME+skz6jrGPf7XmE4X555A1A8pbi+RRYCyBfb9EfNf/D3h
      4Jjxjz+hsWqq+RnWfhdv8hHl/G+ok+e0syvmX/0cq/cTRg8/YmGf4LYfkP7Tv0OEPu2f/C/I
      ZUnwasripkSEIc79H9MePfgLmAS/fsXRg1PgDTPYtbF9B2E06etLaq+NkBLb97G8DnW2wu+P
      SKdfUmYKabuQxOhog314DBRvh1hSCFylWGYpgb1Tm0qlsH0HXWvyGKQSoFcIFSLSYtf33k5x
      D49oFhu8j36A6nbR1QwdbbAan1IpsBIst42ULlVcM717wqgfIvIak2qEZWPtHVLLEi1sagmh
      64LUzL96Sru3Txb0yEhx71ZsHZeqbpiM+igpEVIiA4fy4rfItou0+jTRAkyFED0qmeF39smt
      kDy6Rto1WR3QXD7D9RuGJz/GtmzqLCH9/P+hSBRbS+CkHuP3TxHNDLd9R3p1hesomuuS6CCk
      c3iA3ZXoaUiyznDzWyBDDN/FrnbAjO3mHzBG0jv6CSSviYIeg8MJdZNiVR30zQL7sE8cPUWZ
      Y7ba4vDBh5SvDM6JC+L/5e69fi1Lsju9L2L7vY+31+a9eTOzsjIrs1w7kkM3dBgDDPQiQP+f
      MC+SIEgYDGYgaprTbE6Tbaq6srKy0pvr7/FuexOhh9skh2pS0xRENdnrObBxzkGsE7HWXr/v
      N0UXa4rxE4rlGnf/X9E6/AbT5VvqhmS8OqcVStQyw7ppU5xfYVg30NEbBBmJ28cf5FiNg1+F
      Nuhfh9aaLEwpkxSWC1oP3vsrlxatNUWSo6odotkxWjSRekz08hKzuYvbP4QiAdtEFSukdU1s
      MA2DpusxiyO6fvCz4TaB7TtYnk26iijnOSZfYHdu0DBrzOQIezbDuX/vms1ZlqiFgfRdCDI8
      4ZKnTeLpCVWasEkKBo0jSK6Qvfq1RVFwzR6apwE9f01hOGzSlGo0xh32qO0NkWnB6Txjsoyw
      Hj2lcecW8SLEcg2kWCGkxL7xAcXFMbKZI2QdlSfQsuH4jPzOQ04mJ/R7Dk7bR5xOsQctpHuD
      xeOXmI06LN9ieR7noxkN16f7rbuUkydIe0W20JA6YJSUfo45fB/TSNChD4kga08wnl9idOrY
      1BBiCkFOfmFhtAfYtokWNbJsTpX1MMUKIXoY/YJ0+pqk6NDZ7pJ/NmL9o0eYNwzyso4ZL1HJ
      HP/GHyHijPnqS7btHQxtsJ6UOIVJdnmMNexeX0MbMcXVFLt1D80l+XaTTTimVjz+1UiAqqzI
      NglaaWzfxihizNuHf8Oi6C83re07+O0PyBcnrJ4+Q3QGoGaEC4GRzfFv3EWqBaqMkOY10NY2
      DOqOyzyJ6XjX5DldllTzBaZW2FsD0rjN5vnneL0htaBNOuhiC0G5WKDzHHM4+OtkVBlWfsX8
      zTtSLdi6tYvZ8KCxjwy6VNmEMvya0rqJbRqY3g4yPSe8TLC7HYgX18IbUZGXJk7Npt/cR1gK
      nV+hTZdcNdGVQpfvkL6HsQKhclTgM798h2M30LMVnVpOI1zg4pAPtyiDA3S8QYgEuZoTf/09
      NqGgv3OAHtzDShNWRYpnQrEMcXcqqmUPtkLcokCtKqTsUKp3yNNXGIdd3K1dmFlU6ZJi/Rzd
      bEOzi86W5M4aU9/AMs8Rmy4qWiLbFUurRZ+AImogq3d4WzfQUpBMK0T/Lto+pygzpGEgjG2E
      1aJerhlfPMaLE9KGj9fbR2hBfv4S6RkQzLBijXrxlLizjYy/+hVIAK3I1mvcZhMhBeXl5f+j
      P5fWGrVeYxQevW99h3T5jqpqUuVLBCGryzlocP0rvPYO0rqeqXdME601i+WCepYjDAOj0wbD
      QIURxtUp1s0HxJfHeAdbLJIN7jLBareRPyMt/yUFulosmF4d479/j7alSVYx7uIVRnv/2onG
      ubZVnY7fsTPoAx46tGm2Ei6zDKU1szjCs2waykTUTKQDajXFaO2iNglWp0LrGGkfUhSaRTSh
      uJxQBQpvVlK7v8Xo9ILWYAyrkGRaIgc+lCPslkfh9Nh8/hn5QuDuHGCZBp6ak14JSrdAhSvs
      Qwu96FKoC3RxE1eFCKdJMT1jwxiruYO718Vq3KWMxuRPn5DXaxg1hZuk0POZT00GwxJWDmqd
      YnQbLFRKp7lNMVtgWRHCLFFFhtXbI6iPKIsMv/9tinhKmUVU52+YvMlxvC16nXvMkhekmxDv
      xfdAOVg7NzGHRwhXUIaPwY8RV29Yvp79CiQAGpn/KTr7mGplY/Z6f8W9+bmVP/PDlZ533TUB
      vO575KtnZLpHmabU2gus1i2imc383Quc5h7StDHLDFkWOLZJ1GjQ8v3r9uPVCJ2mWHt7qCii
      +cHHpBfHONGE+WCX7Z+tq5ZLdFWhgUm+oPXRp3/FHjW9gvj4x6h4hakSDGeLpGoS+DHC8CjG
      z5FWE7t1iHf1lHlR0PZ88k1Mp1EwitZktT0cz73mHtULivGGsjEkqTKkENSlwv3GXVZfPsE/
      2ie8OCXJ3xG8eUZV3MLY7tEe3CSPMsLpBitZwfqCZNCg0w/w7W3UdEaVnKCdFPP9Q1gsSc4u
      sIZtUlNSa143C9TpjLAw2T9qIS2TarQmO3+MedggzECOJM7ApspnGME2RpZQrSuEYZKZNtIz
      EOcjjMpCqWOE5yJrJvnJW5w7tyiS51SpB8kGphfULs6ZOTbd5IxkBGatwagn6dsFZttHWy/J
      Lp+gyxhpd1CbhPJ8Ss37lagBJGb9Acnr72L1b6NFgMD+uVU6z6+NMfr9n0kIr0MYPnbrIXLz
      hMLuEV5OcYrXBL09gvY9wtdfUNHB6HUpXQc0FJuU2XRGw3Wuuyy2jYpi5M8M5ZzhHq65z8Wr
      HzK9XNHoD7C6HYrlglE4Ynh4D9v8rz5jVeH1b5Mrj3Qzxi5esAgD9rYPKFfHSKOLrBmofILv
      b+HLCVU8QZcRtdY2G1UnLGK8uk18+pxs6w50DNwwomWWCNNA10zy1QsMz6AoVqR6jV+e4nW/
      hRncYjmNmL+b4NQ95GbB/NEPUMYKq/4Btq5j2CaVuyZp9/CKBfF/eY5UCuvBFu62TZwnGN6A
      4vKMODWpD9tIZw3Ze2SvXmH0TYxhCzUv0NpAGxuqeYYZZJSLOSRd5F7AxjPpzBPSyRLvTgNR
      7SHDGfbefVQnInv2GCF6RG/e4G7fQWqL4OP3mDw/RcyfY/Vygv1dFi/GJEf7+NIHaxurIzHE
      hGp9Rjm+wKwrdOtXgQ0qBCRN3Bv/kjJ7RLH+HGk2MWvXWl+tNepnyilz5+eNL+BnM/6NDyF8
      itkThHGd9NGX1AdNajcfUBVT8sxASoltaqwkIXQ9puuIQEVIVWHVPGRVYfaufbO00mztfsJl
      9AqHnOj1G6KaZufGPQz5N+EBOpkjagNcaVLYDuPRgkYtpFg8Qkc+5lAhrB7kKcX0CUW0IN9M
      CbbuX9c2ZsnV/BTR2sPt3aYRZ5idAGVqVLwie3mKfadPNm8iG3WS+IpML9nq36QKW2S2puZL
      aNcwkilVcond2BBVewRhRJrmVOEF7B4hZ19h2galW2EfNdFpSj4qsOotquSK9ExDd0CzPUeo
      Q/KXM2heYt/4iDTVlHlJrXmKIeusa238q0uqlYt1pFi396kfPyWbKryHDWTZQzsROi0oRwvU
      cg25h3XQpDg+J337Q8zWkOxihX0xxfhn/wLX2pCff8bOJx/wpkr4ZK933YErNckspDpboLMA
      a7+PkPnfA4tSpBxfTLl5sEeyWbKICmxyrFqHVs37bz/gHyrUz0ad6z1k4VLF7xBWi2L1OcJs
      oEMXw+9iDYf/jQcJpDggn/wJtZ5L2X7IajyhmY2x/C4OS6qFJK7A7LRpGrBOItQ6xGm0KErI
      R3O0XOEMe1iBhzQkbeOI+evPEa06Lec2ZVIgfflf4Qw1qPKv3BkNx0J7LrJyULGBdFfkJ4+Q
      zh44PfB2qeIrbFkjjC5ISo0AXHOASUTgQBUuUalG+j10aGLf9gnfnqGyFLuW4/Uc0kqRr5vY
      W1tYpqScLYhe/RjLamB16uSvKoJ6hRUVmI5NKS2cako1dMhOIpz3hmTCoL7dJFzEmKMTko2P
      0F0Kcwxhii5NCFbYN7ZR+Zr5FVgDm6a3TzW5IA9rNHQN0ddkxhY8+gIaPs4tMINDissTBAbl
      8pzk7QRZdzC3DiguXmL6NVTDvTYsnK3pPGgzO3vOzmAb/8M/pMxeoCeC+fqUdm2AiOYYsxS7
      9yGYNiUXKOvvIYi5uhrTMhWrHM7fvqXe3SJWCmZjGv7+L28WCNB/Od8jamDvUGWXCPs2xeVr
      ZLNEi4wqiq6x5cb/zapIa9RqhUpTZK2GefM3qOKXmLZH63CXxekYp3iO45kYvT6eO6TcRKxe
      n2JEG/JmDVD43RbSu/4jKLOCaHF96qxnZ8wbNe52byHViqpqsx5fC9YN24Qyo6okOk5RZcV0
      usYvUqrlnEibGI0GdmeIKB5DmZCqHkW7zqLMMY+/pLE1RLo7pEKSKIuG2UcOehRXI6TIiUdT
      ZAeE7WMHIcVkxtzUdJVP8OCb6CyiXF0Qnp6hIoX5a+8x/eP/EduzsOZrnL27JHKNtd8ls84x
      RzZev4HRS9CxTbS8JBLgt45QkxWmnqPfHaOHn1CUU+T+HOxPyU5nyIELeg2iSxEE8CJD1XKM
      7dsUmxR/u0Zxdom9d49iPKGK55TTDN24AUfvo3REMolgucbY61LmEqZrgt/+mOpiTjZ+idqt
      o6oaWNvUja9ZLSzM5SnGJMBs3ULbJqgCq9+mHL34xRPAcyxOzscctmKajQazxRJXlti17i93
      Fggor8YYpgFCIAC9LCnDz7G276GzDaQFWizQrACFEDZoG52U6DzDaLUwXe9aPJODmTdR1Qxd
      Lmlpn9TsEyUR9WQChaJ6eoadZRhHt5C2T2yCY9tYhoEATN/ALHPGqym1o5s0MsnxyTkds4UU
      b7G8IdG0oCoUrlwhrTqsxtciGi1oNlyMG/dpuR5pmJAXJVXjN8jWTyjjx/jFhHZQw+z+LsXo
      FCNwabXqzOIpWmiklhTSRn39nNrdDuCQbC7IpY3V7SNf/TnBe99GyjXahs1II50WQcdh+n/+
      b9ibCBG3aPzB75Enz6n1O1SqxWo0opkbuLc7JMsrvFpBmeSskxZq3qR2aDI7f4pn+xQLEPI5
      Mr5PNnuNefQJ5eS7tPu/gY6/IpzepSF+CkWdpWowuG0RHz+j/uG3qOZj8jePkXYXthtYVxLP
      iqlGAqO/g/3R7xN/8SPQJdXWe+RXS3QK/gcfs2GBd7FAx6c0Zcg8lmzCJu1OCrJEhy2cuzcp
      ro7Rrf4vngCdwTadwTYAreAWe/8Qu/n/VSgqe0NlboMGtZiDPcS82QMjxa7dRuv82kVSmOgk
      QccmWmSYuy4YDaTZBMxrYKzWqGwGWQeYI1oZNadPsbGZ/+gJZvhjvIOb2Pc/QlUKmadY84Tz
      lycEvkvgOVTLBUsR0WxvY08jhCHpWAauXeDIPtnsGLHOsJ0G6fgt1tZtgu0ekzCnrTJUBJUQ
      5LMZaVVCVWJla9oNj4gukVnDMA5R+QKj5ZOfvsDbuYPIHS4vz+jVBgTdJtnyFFUmrF68RnTa
      NHfuMhl/SadtQZVRLQM2l0vMWg3bg8WPvgfvLtA7NVq/9Q3K4jWiu0Ww/SnRxU8pL1Och7co
      k5cg26j8BWWRUaW3cdUprD1oFtTbv4ninMraITtdYtBi+vg/odtN7HSMDpskr17S6PikRx/Q
      9gPS2de4/jZGvUPy9HsI3UBbJcbCpjw/oex1MHcDVH5G/PwpImhTXUbImoOR59gfdKkFdzl+
      8X06B4dI8xOsk3PWz3+A2dSs0oxgfYq8UbJ6ekbm7mKV6lejCC7TDaYxwSzaWHtHCNulzAuK
      8Ix88hpkHxKF2rzF7gwwm2BYLYR17W2liiXoHISN2mjK1QZj5y5KdSknz1HJY3Rs4dZ9Yv8j
      Si+jpqbYzUMc08QzDdpScDWZkVyNSHcC9nY+/CuYrlYKJ4oYjd/iBoPrzXpLgU5QN7vkusl8
      GRGGOWbdQAx6WKZJYEmCYga4IPeIJmu0kujqDbqIr8exFeBssf7pT8lLhTtsYFke2emIginR
      Dy8xe3VMu4/avCQ5ecXgo39OlVisv/wa0zax2posishnM/y7PRA+wnGppEFj7zsUSUxy+pxg
      4JMkEaYZYJrvqPKIWH5EMz1HJVCIS6xagGzUKMIJ6F1qtzvgrFhdWDgbh2J6SnySY7R8sptH
      qNYeevYFMiuxjz4lfvw/U50q7KMBlbnCHvQxZjn27gOE7WJYIDqS8MvvIsoSmdnIoy20WpOP
      /leEHFCsH2PyISIyMB/8Ls7iDcu0SWUnsExotnepe22Mov4rkAAIPNehXOYU/pRyscZpDDCc
      IWZrj/zqOZRnGJ0b6OGn5OGYZLKhLHKkPAfRQBgBhhaIaIzZsdGeRJ19hdncx2sfUBonaKtE
      Om1aB+8RLSLy9SsM8y129zZCSlSeU0vWnHQt9v0tsvEKLRUCfc0FCnza+7fZlAkd//rFmFod
      g63Rlsl8o2i7GmEF2GGKIVdkWmL7PWSWo6sVviOZLiTFOKEcrFDWnLIsEZZH8+NvY47PGecJ
      q+gMS7zFu/ExVXyJ8Fo4/pT5eEOr1iL+4g2FkjjDBly8IX4zIkrW+O0u+CaWWWP5gy/o/5v/
      gWIVEb76MYW2aN54H509ZjMPqDczMDpUU5NGWaItk1l2Qv/mb5Oc/ylGZ4hRmsiGRboeQf99
      LGOJepST2C7dTo3EGtKKZ6SrU1jcYh39R8rn5/jf+h1KXhIc/QG6WoMXk58/xz48QLou2fM3
      KF3H3RGobI3SGY5/E6v5DfzqKYsTAy/+KfRuI6YbRp0+7WCCdndoqjVSC2QiMHb0P/0E0FVF
      +HqBHAyQUlJEKdF0hVm8QRomZn8LZWwQ69cY3j6m18WpdaCaYrh3UEVEdnYCVpfSrVOtC7TZ
      RdoTivAKjYcw6teGbzsddLWg1u2SufeIxi8ps9d4Xo1wk5DZkjuywWI5o1WvU0kXpQVu00ea
      Bh6wztYUVUFRadI4RTd3EeEV7SRj+N4RKp+STldUsYUdOKgooTAdtGnDeoEduNAfsspc7ELT
      vHMAVYHKNkgqyotj4sU5g09/jfzVa8oyw1mHFLnN6t05/WCA2uljOSEcv0QryXx7QHdlUdol
      Tkuigh7ucJv05StKz8UqLlljY+YZ0eUcu3hKujEx5APsOKYKQ4St0E2L7OU7nK0OrAqM/Q5l
      +IpEbcN4jH0ZY273QRrE7QatTUVy8h/xD/8AOjHR91/ivHeTypmAc490FaGXz1HhGn3wFq16
      ZC9HlJnG3uqgiopKQBUHlOUGyxoRhJI3SY2trQAdhuy8f4NjpWlvOqTVM8L+bZrrEMWS8uvj
      f/oJgJBUIkWM36FzB6IllmtT1LtgNTE1+J0jIAIdAjGCAAyL/OopOlSYwRAIsds1jPohar2h
      Gk8Re/fJzi+oNjPMvQ7p4h1YQ0wrxqrtUu/fJHr+GRfhG5xujf7Rp0i/Rh+YRhFd30cCyep6
      9FoGDlIEvJmdsd8Y0goaCC/g9PiKvjcjO15gBIe4rT3Ejk+yunZq8TyLajZFbg3IVmss12Lw
      8BZVFBO+OUF0utdGf/1dmkoRNZcUm3eUVQOjtoNdFyxfHuN2LazdBtXkS/RbEHaTZTegvbge
      xzYba4pTn9qv30MbJusf/xQvSKi6GVbniEq9QjZtDKNJPPKgsNBmiLV7SK4+R4k2VnNIMXqC
      u3sPHQqyp2fk1RpzWYJdkns2lS8Iug+p5t/Hu/sx+es35G/eIX2B2RtQmQ6OqFHMfoTZ7FI5
      O9DcZ/2DP0YYPfT+Lq4C4YR4wyHF1Tmx6FPNBNpxcJwxflRh721jeDWsR48ofTBMCV8+YtP0
      cNMKw9v9p58AQoDdPqCKFhT+Cvv2PcjWmIWB2lyRvvHYJJe4HYG0KrDa2GaKmm7AUMhAoIrX
      SK+PSkKK8z/D7B1gDrepVhMsKoJPvvGzqc6M7OpziqkmzZ6i0xbzWg0jcHEbR2ymJ9S39jGc
      Br0gYBqFNFyX1JFUVQWrEN+yMYMmanVGpRxWL/8Cr9HC2foUjBxdJUjnWqwTtAOKxZLw7Qh7
      dwvTu2b2y7801LNsZKeLXsxQNUElJEF2Qey+R7yYoiKH3q/foLh4zjw6YbveQWQlFj10IyO5
      tY21WCCOlxj3Csh3sbc+QNommXRx7x2h3/2ITWzQ2oPk/A1SaHSxh5VYROkUJ6vQXsE6nNEy
      DpEqpEhNyrGmCv8c++guxekUty/xbt/hMo4Idj7A5ZyyUcLmunFhHdUx6h2iL95ie23y3WdY
      7bvEU0GxvCB9EcEEzIceVrAD4RQ5eEA4n5JtPMrHX9Ic7iCUS2OqWLKmFcfo8h12IogcAz/S
      WGZOEmuCwyMIC4T+/wjqv9lsqP8dvlf/kPGj7/4xH3QWmO3bCKtNupoBNkKskAJUVYIcUqwL
      8ukpMhyhMODgAWZ3G2mZGIZALN8ipYXZHkC5ohy9Ri9XWAcP0JlAWN41G8ezwYioQphyTKd/
      iOs2COchwt5GlwuKqqTwuhSVIkVxs9/DMg1UHFOuNqSbNavVFwz3HjJO6+wd7f21Oq3KUPkE
      aQ+pZovrl3zNJkWSk86WpNNLRosJN3aOkIbEG3bBWJOfviMfn0LjFlPRARYMei769XPC2YS4
      02VQfw+5niJcA31rj8l8ROv5E5QTQ73EdH6T2vsfEV1OsZI1ZT5H185ZPCtoDa8ozDU2Q5Qy
      MVSdpfDx1hKVPSWyQoaDPyCP/gSn94ek4SmGHLE51WgroN4skaLOy6Lk7vYh+fTPMUSH7McT
      7Ds30Iwxbhxgdr9F/up/wqr/GuniDNEb8Pzpaw6LNo3f+nXSk5+iwleozqeU2YbAdGGyQQYO
      eR5hCXDu3eV0EbHtXVFdhrBdcXXZ4GDnY2SrTTh5SbQ4pbc/+Kd/AiAl9tY3KZZfoaNX2P4+
      wqooxAAtNUZ1DtFLBOBsN9Cd30Blc0y1QmQpeumRzZeIdpfKgfTsLWqlYVbg9GziyQxRayF1
      iPRMhKgo5iELL2a7+xuIcoaKKxwT5uPP0aKFE9TxF+9w/S55mHH15i0NxwXXxagrDF/QEEe8
      PF6zfWf3b3wdYTgIo0d28hXW8BDDb177DMch1mZGYjtUcUzt9gECTfrmL1DrDFSOQRN374h0
      MuV0MqUxn2FkBUmvR9/bQ27WCMPFevApp9Nj+tMZmc4wOz5qaeHfHxAvTzA2M8ydXViFhOM1
      3HRJnlxhNxsUdRu52CAPdjCeTqhu3cGIRjjB75Kv/xz3xr9B1iuM7JLioqK6cYjO1pi1LiNj
      Sd/apkg/R1Y2+dOY4Hd+kyo7RrhditCkmv1bDPMWm+dvsDoG8nhDOZpjPBxw8fILjKiid+cb
      mMEMq/4pxUmI84e/Q3l5RfHkGfYnt7B6bZxiSrFSONs+1TylqkvorUEUGJXA32myWYW/AgkA
      yJaH0/42VfQKVawwnA9gNkXFFtm6hsoy3N02ZtdGOAJVWOShppxvcFohwcEO1TRGZwqVxxTx
      Jea3P4EyQda3oVzgBG1EYhLHG9Jui11zQDZ9TFQ4lFWEIR08u4dMNhSnU3A91mcnuFtHtA72
      CLMZHU9g2APUeozeQGEa6PEl8/NLEODUPIyqgCzFHO5SrSfoJKQch6A19s2beHmOvbgie/IZ
      olZib92FvZRyMsdobZG/+hJxOsWJY9KdGu6NexQvfozRGlxPyjabnB8/pSdD8ssR3nu3iEcX
      tD/8F2S5wDZDKqko5k8RtQWZiBCvFpimQzUzMco19p19qoWH/eE3cfma1dJDnr3GOBpiNnrE
      L/8dalEhm13UuzH2sEEcLtks1uzIJVWYQNTAuXsAdkq1OUb4e9i9GGF9RFrex+u/xJH7ZNMz
      lHEP7vRohRZuLNGWxLDapE+/wL3/IdVsRLmY4B8NycsYuV7hZRnhqkKGY5w7N/AKTZwXuKsQ
      y4uoJiPyxq8CGxRNFiWYTgfp3KdaPSa9+j8wW4eIekAw2MbsfUq6mJPOjzFlhKx8xHiC6Uqy
      uaKqFnh7BwgdUJyOCb7z+1TrK8rpS2S6RpsB+cU5a5bkbh1f9pgJgdnbpmEk2HpAtRqhigtE
      18U73CJLXVr1A6romDy8oNH6iHkKrUJRjq9Y1g/YsyRhNqcb9CnijM2bU4RpYraaiPMZsipQ
      F0+wt+rYw5sU4xPyzfKaZ3R4F7N2C8wIlWUgK1AlVViRGw7edp3CsEg+/4zBziFVx0ZJi83o
      lJoZU756i3f/I5LpTwm69yisOrYh0JMIHUvIITl7Spb61JgjTP+6ZRsl5K8gKa+oD1okP/4z
      8rhJ96MSZX9I/Pw/IZ1dxP470k2H7CAnWE6J3Iigs4WZLyHPsXYOsO/eJHn57zF3DtBGByFL
      kriH21hhGXuEj74iu3mIPX6GkxlUqzHm7k3yU0F4ElF7uE1++Qy1TJAtiexvo96tyA0LTxUs
      siW9b/4ewrhi4NY5f/o5e919pFvHv3Ob4urvYZCxmFxxfDbm/kcfcvnuJcKpk6wmtIf7v2Qw
      lsQSBvnZI5RWUO+jHEU5foU5fA9hr1GFi2XGSMclPnmFMixq9x5ieg46U1TRiujlc6rLBf79
      Q1S8xGhuYzS6lNMn6CJg4bcpigY1rXGynJr0qDKBEoLUTjA7H2HZFUKNgQrXiCiTCEUTb9Ak
      W/4QRzusly6tfQcpStodFzNzqaoQ34ipHwzIC0mRFOjZDL2JhSIAACAASURBVNMwML51jzJN
      2CyfUuUehRaka5M8CkjP/gzr4DZqMsFqHpA8+YpFVafz6QHrF1csn3yJ8cEejfvfJH/7mtXF
      Z+TKwD4bQ71BdvkVYm1TGhXy9Qt0mWO02uCuKLOvSeUubt/FyG2MVgNW5xRnJoYVotw6avo9
      NHWMb26jnQFWdUFmBQj3HNYd4mREkJssWxsatmTzaoIIEpzb/xwZNMnHP8RsbVMqD9PxSMMI
      t3OIVc2I3jwhOWxQX/0IIeroLMF0PZLjl8jQwr3/gOj1S4yywOrvY+8/QBcVVnpMWfOx9Br3
      yCFPLvDbW1Rf/QWl5WH0faS7TTxa4FT84kXw2dkpNanQvQOS0Ttmm4yapSlNn1sHe6zXa2q1
      2j/wbv/5+Mn3vsu9/i52p4UwNGp9hWzVEI4ku/gLVOagtYMq2gg3wBzuYpghKrtAaxvDMjDt
      PsWbE+TNQ4rYgPQSU0SURY306pxpI6DT6tG2eyDktehDr6AowGijVYQ2SpTVokzOEdUEYQUY
      3g5aSaqiwmv6FBevCNeXTMwWB9t1TNOBPGAyHzPcPwSdouMVxfEY0W5SeQ6ma2M6HggbXS6I
      IouTLx5xsNvDktukjz9D1GtoAalqITt1jPOXCLPOcVMTSJOdxi5VS7CycrpXl2Tv1pBHlJsp
      7vsf49z/DpYAWa9RjF8gaks2P/0hur1DUaY4vovUS5hG+Pf+e+I//TNie4qTf0W6dxe/5WOq
      XcjHCO1RLF9hBe8xrikqHdPQ5yzfDBn2M5z2A2TQAHtGMXqL6O6i8VDKxGrcx8hD0vFzIiOk
      1ayQVofP//SYh7t9pG2SlyXO1obyVCCDffJqg3/goVagFjnWUY/o8znBwyOyxg2S0Qu8q1fY
      N4ZcYNHTAWpV4HZqGI3g72GSN+jy7nzKThmjXZe2FSCLiEa9/UsdhpOGxN5WFIsUFSVIbSPC
      FMMqsZwjlP8OoTsY7QCr+x6qSClTG2300fmMeJqiTt5S+/RbGEYGtYy11SGZSrxoTmmfsecd
      YesVOpsgzR5oH6ELhKXAukTYNVS0QayvsL1DhL2DlhvKKkaYh2ilWL66JGjvURs4zFYpUdmh
      naRgbuj0BfPNa9ppC7XK8R/+JtK7Jsylm4SiKPHqPjpvIqIT3N429Z0PSWZvsW9tIZ0BZWnh
      WzbV8x/h7d7C+2SXi3cXtAwLNR0Rz32aZUxxFWHs1ijzHHG8Qxa0UacjCgmGfolozKguc1A2
      lTBwaxV2UJF+PaZ2748Qiwzz0IHlAkY9dMvE8duUqydox8TqLrCSG2TDI/LVGWb2DDfZwmzX
      kdY21nYTHUqKxQlW/4g0GuG0b6LwcSqIoxG5HtEdbKOLFVHaROk6Zv0ImGP7JeVJRjU9xqgb
      BMMDsosNplC479+kmq6xGyPyeYidHjM/twlufBtZjemmCaPVS/Z7O5hGjXhR/OIJYNo+t29e
      e9f6vk8H4B8DHktp1PEYq24hhz5W7wPKUlKkOeV0ik47CPESPZ1TLc6w2h9iBXUs30fnAeLs
      h/DAYzL9EaUa4BQRfhQiZJ9V3aBjP8T0C4y6izBaaJVjOD7S2UanCeX6DBUlIFyk5YJIEK4F
      pYHcRKj8+1jGECtwyI0a45HJ3vZDwrNnXHottg/v46mC6OwLyprGvXsAMkbl2XXha1+TqsOv
      XiO8Gpg1dD5F+BHWJiO1b5CGGXbLpXr1FbV7H2P1+8y//CHtCNY4pLf3aGYLrDMLNWwghy7q
      0QX+b/8+VpqjpU3h5FBWFLMMnZ5RrXIiJ8My1sSvQ0xnn3AkcYMRsbdGvM6g7qKnK0pRYe61
      Mfv3ib/8CbUHHxJePCOZPOXQdCk723hxjn3Yp1jUkNYXCNknS2a4/V8HUceOV6yzR+Szr2ns
      9tBlxjR7D2MzR5ZXzCuH1s4WZtigqjdxgx2KyRNU8uU1h6kdoE9CDKeDuTMkexNSVCu0sChO
      f4C5NYRkRNU9wN7aI55NyBd/RxFcliWGYfydTif/qEJKxL5HlS/Q0kDNv4+kgZk416/krRZl
      9jEqeUsRjSmWP8EM+xjmDpuXZ6it+7DO6BkhhltRZbcIg4jc23DYuUOZFmSjC+J8gGGEWFaK
      kTxDF3+CYTeQ7i5GY3B9RSk2qCykSiJQTbB8KH2K2Tn2/jeollOYp5TJG9q37rLOI85//D2c
      wsfs97lAMZg5yHyJKNegDaplirZ8jHYAVkW82pBlEenlmHzu4989xHz6hPl/+mNq929i7+6j
      jTFJr0Wv3+W8DMimj/CqHZLNOYbbRU9m2AcP8YaC6tRGBCHmbE1lSwhMtHap/dpNkpcnyFmM
      nEuCb/426XyFWj6jXIxxlSa/tYNnK6rTCXq6S5ksqdwjkoXi6uKEhplTmFtsTl+y8+n7WE6T
      6Ow/Y9hNMiKcxhGqsjHTJRtGZKOvaW7bFDRYJh0a0xPMKsIZ3GP7vW8wO3mHqVNknCJ3d/B6
      v0uVnWENb5K++An56hg9eYFZ38Pwu6h6i85hD6wW8XxC/bCPfPMTVtmEdb5mq7v9t4OxHj15
      zmePvubO0cEvnAS/NDDWuzds7w4x3CEqD4lPJuSRQvkGGB5aNEE0wNpBIUhUymIJ4eMvMRse
      tu9jun106VJeXRKpC3ICgqJGkUzRwsWSG0xfoKuYIppT5RlF0acsW0RLgyIKydZjyrwAo4Zm
      jjIEsjZExRXWjQOq6BXj8w3b21sY9Qbp8Qnuao1Icww3wcLAc2yUyrCET5WZsE4wGjZW3cCy
      NLZZh0oyf/IIZ1ZiegHZV1+xHK3wPtjF3rqNrnkU6TOSqYO3fcRCXdGQXQgjjCbYjTrxZy9o
      fOufUS0uMXqC4mSKMgxkmWL5JgRrJvMSe3KMQwfng13UIkSnY4qLEUUp8W/USWoutTjD/+QT
      WED55imNT7/D5OvvEtprhu0adhYQDt6jHtTJTn4ELqSzCSJoURY1jHDFqvqa/OJrGlst1ub7
      JAuP1sUZdqOBd/93uHz7kkG9hV1VFOMlxeE+hmWjL1dIt0729jFCdRGxi3G7jWKCvbNDldl4
      bp3xfEkg2zhWF9EacrYcc7T7EKNe+/kT4LNHT/i3/8u/5/d+6zskaYbvuf+/b+q/X0iwDlCb
      BYQe9VsPUNUUrXLK+IpyPac0AqrKQeoGvtZ4s5/g/taHGPUWqsrJF8eUm5jVbgNbNukZI+zg
      Yyh6JIsxVW5hOzZur4vhf5N0k1FlEbazRpcX1yozeZOqUGiVoqoaVXxKef4Vzo0PkMJmszQI
      zAsMhlSTS2xVkIUJwdaAzDJQmynG6ZhlqXGbPbzBAPPGXaokIw9jisWGavWCuMiQ2/vUjx5Q
      nJ2Ru3W679chtyBZkT7/jMt1QHd7wLJ4y4HZZ7SaUxXv2H34r1j+l/+d9r/87yguXiFsSbG5
      Ip8nmD0L2bIowzFVVaInC5x1hjrMUMYush4i8hi508AwMoTcwlguEEFAeRmjRYK1fcDmu/+B
      dTehFkjc/IjqEJqyiUonSLtNmbWxt2dUuYmTfMXGB7EM8beOGGcN3NOEYHMKB230oEM8v6RK
      c8rRBEqH+o2HlESMnz2m07OoLjRm5xBRF4i9LtIakPUyyuIJzqHL5uuXCKuL0bgkC+ekSYLv
      95A+VMvVz58Aq3VIp9XgX//R72BZv3hR+0s7Ad68oh1HWIaJWe8hlA2Fpgg3JIsJZTTDVnMC
      v8KyMsqTMfatOwhrDNJEVD1Epdls3aDb3qIeNK9pZdFblFXHqNmYtRRd+KRLAx3HmFSYQpKn
      DoohhgQdn2PgI5IUsYlhnKDTNfnJW4rROdNY0qCkZIzRaWEOe9Q+/pDSbeK22+SNFrbr4JZr
      ZkWBo23UdEI1nSCzBLteJ/jgQ2R/i/WLZ3QMk8z0kTtDZJleX396NtVsRmp5GHYKxxlGBtNX
      X2H3OhjxGllaeLeO0GKDEC7ZJMfalrCZoVVMevoCNUlQWlLfP8Q93IWiQTaZUSXnFIGBKAVF
      rUFwMMBu2KhLm2pxCWbMehNe/z7LGo0P91gXDg3rinI0Q3tHGPIC3E8wk3es6wMcZVJKSVEK
      GuczPHeG834Nb+c7mPSpXr7k6vKcpmth7XnIIEdPpgT9IxYbE6PK8e7sorMYKo012MFuNqnS
      gPTsAuH5WMEE1akzGZ8zbAaEqxDnfE05OfmnPwv00z/5DwR1H+mYSLOGVWX4XoDrudiOogqP
      UUWOUB7F6QSzv01pBVR5hghfI2stNv1bdH37evbebl5fdVaPKDdvEeZNVLVFOXmGrN+lSAuk
      aeB4FiJLUVFEtlgjLBPTjTDaLkZwE8Ovo4scpees4jWMXlHfHVJOUrRhoq3edd2gFXkSYpQl
      +bBPa/uQ9fodxjTHlk38rR5oRXF5RXl5SZgmTHXBjQffpowTLDEjExado5uUq2NOns5odhWq
      vkfbHzD5wQ/Q7YJYdHHffUbj6CE6X2L2OpSjFdKtMJwCXZXEb04xD0Ky6D3E5Bn+wRCzdkS1
      WqKKKcbWNtPRU4J8m+QmbHXepxytqSZLtDVhuQ5xD28w/8+P6e3tIK2S1WCPtmtgWQeUq9dk
      KsWzSqLeISLxSUbfx1cdzEWBe6ePFhmGfRutQ9RyA0Lx+MUVH9wMwPOokoDg1gPUfE2W5eid
      Har1FHv8GuuwhzQCVCTJ8wRZD1DlBuId3m6OueFH2NJlOY8wuhbt2t7fXgSfvvmKk7OCb/32
      J38LYecfVwigZrco8hLLzFHBHhtpscnBEybN3j62npI++wuswy5mr4ZZSdTEoghuMh4/prVe
      kNp3yDlDmiGG3QURIMRdVDUB4wLH8xD2CsvpUhaKJMyolMDdvkHjwxZCCOLpkmJ2RXn8OUJ5
      GM1tdF6yyQp26ruw6WLvS7SYAxuEtCFt4bgNlNulOrti9O4H+FSsqwVNaTM/D3B729i9Ac7e
      HmWeUT7+Eh2GuI2SMq1o7L5PvEjI3r1DDLvkwqevPdKrK/yhIpc3KZdv0AMfp2+jtUEx0ahN
      BJVFMcqo5BoxWCHyfaqaS3v/FtViRfrT59cby6qh5pfY7iFmfURRfkTy7jFyswedt6QXEtka
      kr85wf6Nh9jJCbn5AH18huzdRgQLyvlTnO4HLGoBkg7y+N/hrurYrot79wFKjbHq1xqN8mxF
      NU3AW1xLWw/vIaoBVbog/PprnJv3sfs20sgJXz0jeu8O9c2aqnoD9S6Gv40TuCjV4ez4M4Jq
      B7dxQDJ5RS2YcjZaUFv+HZJIpSpO/i/u3uxZ1uy47vvtvb+55unM051vz41uNBpkGBQVVFB0
      yBF+9N/oJ4ctmwxalEiCEkEA3Y2e+96+45mr6tRcX33z3tsPh7akIBWkFGGBQD7uiHqqXJWV
      mSvXurjgY37w3zeb/xtCSMHgQR+roUygWI2pNg5BvYMpC0ZPr0mHN3jBPnUJ7uQZSkPeb1FI
      h4PHf0CVfAv2FKMeUZV3qbIRrlcHHEzugimosnOEvgI5BrWN4zVQ2pK8OGX19fc4nkI5gmo0
      xkZtVL3EK8csvS7RpiKbLBHNOubMR0gPYdbY3CCcU3Sisen3uJ0W9UbESoLf3CHzIxoipcwt
      8ewaP5+RZjlOmYKvEcUK1XsTN6yTv/oFm9oWWhl60TZVnFIOn+H0QyJnxvzmiqpxgo5T9KaJ
      3WyovfsGpqqonAl6YylfVBSlwTjfUGRbSNvA6QWgEhAKHccY5VJ0mkQ330LVoopeYGchm/0D
      2pdnzJtdlHyNs/0G49OE/p2PMeOfk0xHBHd/zE1VoF9fUDv/DzilR3DnLrrbx9gxQvqYjcHG
      CmkGqMdD3L3fw/30HL1aoudnSBkQHPgY+S1Vfp/y7BrPqxPZgFV/j1C+i4y/w1UTTFpn9eqc
      2jomnf+CZXCfsGcJtj7AuZgi2v8FKkQYdWjWLqngnzxZyBrN6vPPUaaGtQLhWhyZsFm+pmQH
      udywtdNDHRyyXixZLpvE7oggGdNXNeLlV0irUFJjqk9xmo/xtt5CmyVZnCNbBzhqhe/soidf
      Y2WEYIVwbyXIa3tHyKBJvopJPvmMaHeASVNMFZJMUjaL7+n2Lc7OfZAV0qlTjSrMxsGYISrq
      4B/u4O0/woocbIm3zFloCV5CUOsTVEtq2pCndQK3Qbr8BXoWk27/hFajRn79EqcZsEwD+qsU
      tQ3rr3+FG4DbuI+Ov6aZtUltzlRYorikcf8QohZl+grFkqKIcXfvUc00XhXh7froyS7afose
      VpjlBB4f4mYxujwk3ORYKZGpZhkdEV6NqdqQiYytUpHnLVS9gMt/TzaZorwa49c3eHZDbTRE
      HO0Tbr+PW6+TjX5BofeJtg/AeNBU2PrnuINjpLeFXj5Fbj9A7UhkGCAihdUZxcuXlKMZ3o//
      J1SR0CoVk/EVUdRGJXNWr79EOgtqR/v4Dx5xM1rSbG9RxuCKmHiZ/t0m2GjNbHpDUsLJ8cH/
      56Chi5RXZ0M6nRaLyZCbeUy+WVDgEPrur60JHp29pPnuB1QdSX3Xw++F+IM9ov4hXnxK2FRY
      15I/+RpvOUO5Jd2gjp9IkhQynWOcAOluo1wLzDDZCsfW8JSDU02g9CnjGVVikLWtWz8Accvs
      tMWaanmFfvGC4OgI0ekiDk8I93dY54bB4QFlPqcQDUxeUg2f4A728Q6O8Q4fQKShguLiKWah
      MWuDYwVeGbNcp5SipOHsQyqQ2ZA8SciThP0P/gVVMSOfXpOPfkHWu4cZn7H/6G1Gv/iG2vbO
      rRzM7JxiHBN1B2SH72Jef0rr+C550AVucOQl+TpHbkZQ+5g0uyCqKVgWyHqKv3+X6uyG4KMm
      ybKBk+Rs8hi/jNDcYJwtqrNXuPkG7TfINguidRcjppjkGjH1KEzJfOcB3WqKWsxwj44J+m2M
      U8Nyib+3h5TbFFOLKCqq9Wd4R/ehCrBxxM1yxf4bPwBVoZotzEpTfH+O1VPcdp0qSchGY2zU
      Z3DvLmWSMX31EulKWgfvY5liN1PiRYETe+jJmmbjgPnN3/MXKN8sOb8aEq8LzH/yPhxP6Pqa
      RQHT6Yyw2SerLOnshlbt1yiMZS0NV2Jkg2VeIKygXqypXn8BgGxb1Dqm/uYDhnpNmK9ACWr9
      Q1pOE1GlJMsxy8WMKklwVUikv8WRFwinhxEu1o7wwhBllth0QFHugnmNW21wwoeU50MIIoxc
      IciRN3PWqSXzGvR7NcLBx2SnrynzHPfxP6NSVxR6hRS7qM59lFzhHd1Hpy9RQQdbBKjhiP7N
      iutvX+HWnhM0IoQbYMo1ODXSTYzjFZQ3L/AOd/j66WveuPMuy4sZzmJGnA5p7G1hZQduNjgf
      vk/xyV/hnTyg6g9wpKKa/pLc1BGzZ6juY6rRl+gd8Bon5J9cI9oF+bNLRLfAFn3M/BLqhzTW
      U1SrxLo95qdjml2N6u+yzpcEyRphSsbDOu2gTrbtsDYn9MaXWLlGhg2cVgvZ3sPr77AZXqHK
      A5z2FmV5Rbl5gtPZIns+xWndR9iUarWiuB5iizX56hSTxjhb25hkg+psYZZrZM2jfPZXzF5r
      rBZ4UQe9c4Ju1JD2BE8Y6uGY5PQUf/ARrm1i7ezvAiBsdgm9il999wrzr/7je+Q7nF7OOWkl
      tFpNhrM5vijx6t1frzCWtRSn3yG9Hm3HYlCsJxtsc5/2wQAzvkJvx4xmf8nA28Fz9inWOeV4
      iPbnyFDiOh69Zoi710YrzTIuSXBxwh6NKCTw65gip4p9BCvc+hFKNynPv2D16n9FHX+M193D
      qYeY2QThWWKj2VMzis+/RJsm4b07hHseeTxC08ML1ih7TbVS5KnFrC9QqkGef4Xjadz+G9Tf
      eMS9t97k6fCMB1uHiHiBHJ5i0yHV9RV2HROdbDOMI/bCIXJ1QfLdK+RBj5rXQHuW6tsv8Lff
      ohw+Y/fhFkNapCxp559j3G3E6AxjfapJgHcY4+Qh+lmMe+BQPl1j8mtErcC2G3i7D0jzlFY7
      xL/7Hjdf/jXtgwz/4G3M7CmbdMjO/j5u612Kz87INzH2qwXbvQLDGBlt0fjR76E3M9zWDvnp
      zwlrjylMBxFfIxe/pHK2CTp3iB7eA+uQ/vIThDVIAc7RffTqHKf7EeX8M/yTH6HtGJJTHC1R
      vTq58Vk5kv2HP0b5kpubz6nVj4gcRXO+5krv0Rz9nI3Zh8O7fxcAm/kNq0Ty9o/ewv1P3juD
      XTqDW2EsahGDnf9OGf4PhQCnK6l0ha62qE5f4VUJVpZMzy8oI4vyYbf7HjgpqDlBb4BwXYz1
      qEqJEA7K26PKC2xxQ6uxA9U5mC/Jk48YXl0gnDq+SajZG5yOoLxREB3hf3iEbFwhPZfkZolq
      DSizFKeIEbbE6zrIwQ5lllPODY5q44iYcpKQLha4fhM3UhBqZE2i7SOqdI5ePkFle0hC9q3g
      1XdfcXh0D7H3EL2eU17dUNvqsTy7psga7B7skk4vCQ89/IbCWsnm5ZcUU5DHFZ6NqYTGdTyK
      xTdY7wR9+hxhfKR0sSplPV8R6n1orpBBH+fgdvMqah6VtKiVi7RDwh/8mNVnz/A2MarbRs+f
      kwUVclCjufW7XH32Cb6toxxofLxDFV9i4jcwaNLvLnAalnz2GcLpgNtErb4nWX9LePiY2vEH
      JLMFHi7pp58gPBfV7eA9OKS6uUbWfariS6hqVOUp+Y1Do/cx2eqUcpyS7EQcHt2hjJ9RzGN6
      4SGrq1MyVadRHSLqp3i938FOv0aEk78LAOkoAt8njnM0oP6enPsnFQbKJzEmf4UtM5xWB9Vv
      o4VCHO9g6CCdHitf0qk5SLvGlrcHHqKY4IgEi0++UFAaXKVAexRxF226CPN/0+8f4jbvkpsD
      Zs+W5KdPCPe2acodot4OJg7Inv8FqB5WHzKaxPQCl7zXxmvs4G3t4doYvZ6QTxMqHeB0mwQn
      WxR5jpY7BI0AW56hbIVXHmCzDrq4xnoWN2xhiyWnVy+o6YLN99eEH/yQzBlC3MTr1knTFW5m
      8FvbVFdjTPUN9nJN+NYPKNOEcn5FdPd9gmJBZpqspxdEtQDbyjFxQHiyzejFmFCXt1ZOQU71
      eoqz30Q2Pdb/YYbYL4h6bTaffUWVjgnffYCevsKahDyu4eou4/NfUag67d1twmaJHo6p7X2E
      88GAquqwevI3OEmAzDxklSHVJ4h6hss2pd7GWY3xwx0W//Yv8Xtt/Hcewl+doSc3qPoWIjBU
      Zy8Rqk0x7RDtKMgjbLnFbPuMXSUwqylikyF1RZa+oDa4RxWvWKSW7oMfMnvyU/p3P0auz//u
      IsxoDVIi/yuJcL+uRdgXf/mn3Hv0EWI5Reox5eQ57uAhK1kgsTSjCBHUqFTILMnAhLT8ELIx
      nttCoMCk2CLG6AVFtsJageNFSLvC6ASdjtCVi7mxeO0WwcN3SYdnxP6GMj5B2oD20SG+fMl6
      vEHtfECr06K4fk6WeJTrBGMsXqdJfa+DVBvyeIMuXVy/Quol+bKNrQxeuEHWNDJoAg7p/AIh
      XIS2TDaQryCP5xw+OCE9/Q623ka//hnOcEr93iPKq1NE5FKOM6groncPqFKJGBxhJ+fYesnF
      yxWtKKdz2KIcneLv/wi9/ITVokaUTRDdN2B+heoJjD5HnzXYjGKqbZ/e7h6r6xGNe/cp5y9x
      3BKdKF4KTXcT0traY5T12DEvEHJI0P8J0muj+g4IRX7ziuyJi2iWSFkgTA7qEBGGCKPJ1yVi
      tcEoF7W7jVsv+fLzp3z4ex/jdUJ0fEN1AUVkqfePsUWKzm4YF4ZG5eDGz3F22shmExXsg5CU
      qyXJN88IHm2xvBIsow7H/inJi7+HDi3VP/nf/P88rEYtP6fIM8w6o/H+HzLaPKHVfEgt2sNm
      GdVsCKMz2nFCqUviokK5DqbmYB0g2EZ4Tdz6PrXdCOGUFMmcKotxPIlan5O//BzvYRNjbtg8
      +feo1kPqM4mzdYGo3zoiLmkxSkoORr+kyB6gqpzm8THS87BAmZUki5gqF1B6uGZBVsRYs8Dr
      XOHvvEWe1Mg3U1QJZjPDVR2kMkgvIlpfgE3IKVg++RmDe+9yevZzWgnU736IXtwa0llTwzRf
      U/vwPYqJxm9UiOya3C+oXq4Iwn3yzivSWYIjG0hVsl7miGWGf/gOhiXpdIFx5siihVAK0e0i
      Oh6rL18T3eui0y/wd5oUps1skxKexrTe+YB1vUF9eYPwrwh3fh9n6wh0hZ4sqZZnOPU38d+C
      8sVPsbt3Kcs3YTHC63awo1cwL6iCOsHeFqap8VtNvLZB24z8co1IDWV7l4AYk0wxsWZSJvT7
      CiO7hCe/T3b2Z4hIIqSLcHswHtN4+w02L19Sa0oWTpv1tE7YW/7mUyG++PM/5p7vYNcaud9h
      NH9Fy63jVhOk28DpvIGqd5CNBtL3QVmsXlPkG5arGGUUtWqJVCG60JRFCcpFRg2U30BfnWOq
      HLUbIeKvsasalFOoN1Fb25TTl+jxGhm6bFQdr72NW6+zWs1ADQj6b9OshXiOxKYper3AljEo
      TYGiyDW6EGATlLhEefcwGwfFHFHbxVcV1fTydgTY3eV0POL0yef87h/+z0xGS6rVFYOyibQJ
      1XyINRWFKG5VoKN9wl4bGuPbCcrzFfnwBu7cZ+WO8FcJzb07mNETNjeXNGrvoroas0kwzjWm
      SLDxAVW5psgCcMEZTHEdieNFbKghlgnpWpNs36MfKdYvUrrNV0Qnv4OMBuC0qWZL8tefo7ZO
      kP2H6Ov/Hbn1QwJnHz29QLQOyF59hbt9j2Bnm3J6Qzb+ClWvSFclL643vP3mPUpSypcxQa+D
      v7cLecyiM6BVdwi8FmUyo8rmeGYP2ZHo7By78FC1g1sbhniO6MPNd0+J85DOG4/+ye+5/uEw
      FhuDfPSIVTJnb+8jytwgonfwmkusvsTICULsYOkhRAPp9gi8Pn7dUpQblkkNVQ5p9joE3i5U
      kvLqnOLlV1ALMEWJfp5RZG2kfUHYkDi1B1Qvz3G7WySeDAAAIABJREFUjwnf76P1kpvRnIgY
      u76iU82R0ZJy9JybTYvSSpywSWv3mHpvH6FCPHG7ZanSjNXzc3R+jM6/Q5cWhwZiMiLrPCbs
      P8TZjMkvXhLqgqbrs55NmA9fcSz7uK2Acv4Ktd0g1z24+hRl2/it8Pa+93KIrQZYr6D9Bz8i
      fvJLsvM20r1E2DZ6dAbuMRx54G6jh59h7AapejjbGfF5nbKtkNMlYU0i3A7Jqom/OAWnz/De
      Ni09gwtBmS4QnR3KTYjIDV6nji1+ReODH1JNVujpn1B79LuY8oT8xVf43T2snhDd3ae4GZGs
      U+zsG5yaR7WMaB0/wl78FLFaY8/GBI8PkB1FGV8zNRPq8VOsOSYxGlPEaLuLU0shdbC5Qzl7
      gXXWmIWLf+8Yk+W0XYcVCeK7v/7NrwBf/uWfcuetd0nWM7phD+E4yFoNY2FzMcJzNigPCCqE
      7wAWrEE4DaTTQKg6SJ9Ca1abG1R8RrgR2DhFtXrIRg/V6qLnC/LvvkH2mhSTX1EkCU6vhfJK
      nFqPtXdMvRnhySU61pSjc4zMwNU4LR+3toexgk2hyEwTcPErhbvOkBqCfv9WZDeNKZJr8sKg
      l2skGW7ngLhsIcMIWdswfPUUJzUEwqXruPj7OTZuUkUtrL7Bq/VQUqJXU0w5xN16j2xyg9eU
      2HKCLjTnXz4jPGrRzHKq6QXy0b+k3nTJr76hWl0guyX+1g8pzy5ZGY9Rec5h6VN1tvB6j/DW
      z8jXBXnzhIvsa95svUE8X4Co6NTuIettgocfkZ99gmyW2AL0+gqbadzeB+j4nFL18RyJWdyg
      avuICPLvP0PubWH7H2K1QD//jCfDK0527tM5uYPTqJE8e8pajgkPt2jW/lZouIoRqkW2vKTK
      Mpgr7Eaj9nuY2Rh3q403eA99dYXTqDO8GRLET37zK4Cxmk3+Bb3+Acr3bs2gNwk2y4iaIVmi
      MMLg6gy7lGArZGMboSS2itH5CBAoVae1TsluFMsixt/eox5GmHyOPrtETxeEP/oAsy7w9vYx
      1TMqHMp0RZHHrF5/gW+nFKqBE7VwAhdn8BOsXVIWE4p4gfTvUbMK/+aM6m/FdNNagBEKdTWk
      jiTsdnGkg6oVqKP7rGZzkmRC2KnwojXx2iG7muAM7lAfvyQ/6VCd+jh7dXDAoUA5AhFapKMQ
      2R7pN6eoVorobGGqFcV4Q3ugWJ9BXH+Ge+/HtO7soy++RQ8vUbsaGd0hO39NtTAMmwld7w65
      WFGTOzjTMcZfYx/epxhfs1M1USZhM83YPrlD+O57UNVJPvsz5F6M2TTRyQghI9zuG9gqReht
      3MohX4zxWw2MHaKiCO/uI1T9DkJAsTmjOnyDajqjfXRC6deQaUJ16OPwFl5sbwWM7Rhv7yOk
      16Jev8f66iXi6ju8u4fYIsV2fUTdkD79P9HrOs7uHm6Vsfaj33wACKDp9hHCR6dnINTtFKvZ
      QvoD6lpSLpakNxu8IMNt7WGLBXpdIN0ewmtgiw35+QvMZoWqe7S3u1RywdSsCJ0tvNzgP/oB
      1fQK2dBYJbHxGmEcPO0yTrcZnOwQtHeQdoxZjrD1E/LNN5hsA7GEuaGsfkaRZtjGO9S2T2io
      W0KbbAZUnYTFzYT5YoXT7OCJhFqW0N67g60kRSZIzyuK2TnWUbQX5/gPjgmup6zCDq4ucOdX
      yKhPtppgxzHKa2NLB+9hA8oN+esvQSqsKfHXXdbNBWXlYTu76OQF+dVniG2DKTXMEkTqUroZ
      Ouvj7tZoiwCxKCjdUzaNXfxJSRGP6XV2KS42yEYTud2gWs0w8XOcuw7lixJrLnDaJ6ioD9Kl
      fD7C3b+DM3CpRili+wjH0ZQvr/Dv/QiTJJTTF3g7x/ihxfnap6wsXj5nlg2RW8cMajWKeI4u
      B/jhA8wixpgxwh/CZIrqtTGL6lbndatDcfkEuRG4hxZpC0T1nMz9L9Ch/76wVrNaJ7SaDay1
      ZHmOLnNQPvXo13c1JoTEbx6STr9DUOEEPk7tLkIG6M1LrM2RUZ36/T2ylSbLhgTBFlKllKNn
      VMP17ZjR9/EO38Ld2QZP45ZrnOuXbK7+jE19m2A1p9HsQt4EAoSpcLe2KLJzlFNQ7/ewFtKF
      h0wdHDNBpV2U7lPpIWV9gzZtvN0BNnmCzS4w4TZVIWCcI5SiN7hPWRqs0hSizmQywl5/Seh2
      8K9e40c9dGuLZJLQP6jhNrcYX8YE2TW+PEGbGMYGp93Ev/8x+fxLitUGs54iZJcqCiherLDr
      DcE7dTwTY7M3qMaXpKOvcfbAbEqCo48pz5ck5ZSx2mfQ8mksXyGad8ndERuT47wska0ZedMj
      qrVZuyWto11U3KQo13gtl+LVDTY1yMYuqraN7DjoUYH/5kOq6ffYRUD90T8nHr0iajdQ9ROK
      589x7/Xw7t5Dz2ZIO8AR4HsZsckp6jt00oTKcXEDB+lvU+QGv1Migz2KV69xKo98PseNligV
      UA5LylczZLODEIpi+kv8O49QM/uP7wGGl+fE65id+29QLYacDhfIcsP+3Ue0G9GvrQf46qd/
      yuP3d5FOHa0V5WaF46YIqVFeFxkegynR+RhbrihnOcXoBtc2UJ1tVMunml7hdHexVmPzGLRF
      r2OE8JFRA4INWZGQOS2iXo/Id7HZAuGEjBOXfpRjNzP0Yoad55TXTzHBFqa+A6zxe4e4NYFZ
      zajWI4QbUK2usJUEpw1uh3xzS+32QgfphnhRE6ygGp2zmV2T7x5QyQVlFTP/6or3fv8nJC9u
      2LTrDPa6rH/xc4JmE9uoIQ7vI9bnZNM1wX6EbO6CjdGvX1PONjhbTWxxQ7WcMwy3qCVLWo0Y
      5iWq4WLWOywbEYVnkNGb1PM/o+ZuU1U58ashXv8xfsuwro/ZuB8zeDlls+0xCPvYtCSfLXBE
      gXPi4+29h5AeZpVRnp8i6i6qt3VLBTferXdwVZCd5QSNCNn1qEYXyDC6lWZZTfji80955ycf
      s3AtXQVlWcMUc8LOAY4fUOYlVRrj5GukalBNppRuiLh4jo7HiMDBPdzGu/MYfTPCqAuQDutL
      +Y+vAELcEs/KsmAymRLHG/YHbYbDEZ3m3V+fgoQ1mOUaI8eo2jZBs0mxAVMplOdS3PwMm7nY
      xEGUHk7YRg0UJZfoco3QLdw7A4SoEDLCrJoUr8+oJjGCDaovULZJ6DcJREq+TJnkEwJTYWcv
      0EVAmi5BJ8iWh3Q13jt/RLZ4hstrjOlSDD9HOyFeaxfpbaFqXfz99zH6knw9BKupb/lYsYc1
      ITaPiacT7HiI22vRfP8dRFVC2mG1mqAeRyTffguBpB5KZlcFXntBsVJEDz/Crqckwxtqbz3A
      7/Wx2pJ//z2UAu9oC6e3obwa47UjWDdRxRmiAuvWiIchOipxvCu8+SEj9Slbqol1t1lNn1Pb
      aVO/N6Acv6a4DohsjM1SNpcl/Qfg9O5i9AYrc/y9H2KFBuNRTj5BBAOUd4gwDrKTIESX8uoU
      qSJsMkPX61SXE5S3jdnkiKBENRrIwRELY+nrOpIWohxR5H3is5xou4bf7cDSkl6f4myucE/2
      UMsVHD/GTe4i+w5oh/L8gmr5Pew8wEwLmv3uP74CWGuINymB7+G6LlVVUWQpyg/xXefXtwf4
      iz/m4VvHuO4WOr5Ex+dQNtDrBfl8huM1cGoNZN3BFEuwFtloQhpifYeyTPEbDWy8oBovMeka
      d+sIZ3AHZzAAbTDJBptllOMRej1CWJ9MC67XU/a2B9S26uBVlMkNdrNC9QY4Qfe2Ga8WqOiI
      cr5Cp1NkIBHWYPQAa+u4YYa1Y5z6HtZqTDqGpIGJgVaPsrLosiTbLHHrmlKF3Dz/hv16iNdL
      kZ7P7MUzGv4B6vA9/F5JFY9Q/RqShxQ3Z8hyiY5H6CDC6d1AOcLMXVRtn/O0xB2f4l9qqtaA
      oL1DcBKyuVgROJrZ6JrW9gmpvaDW6OCrAEoH0ZCcTwK2xwVlI8XW9wjaJ4jsc8Lj+5SFhy+6
      VPlXUFQ47TcRIsAUG3Ryhn/0PjqeUp2tEW4D2QzJmVLffw89n2GzNcJrobb7/NWf/W/8D3/w
      r1BuB5NfIb0+4FKMb1g8+QanWhO02+h4g63X8KNbF5rCCfBFiiVBtBPS10PU9ns4a4MgoUr+
      HirEf2v8ugDw+V/8Cd2Wi1xc027s3cqJl5PbO2BXItst8vEZpCXeYAdBByoFQYotKkxZUWwc
      XOuhmgrV9KgmV4imi9BNzLIEoxCuj3BdrKmwxYI4W6C1xt86IHFDQlkjFBncfIHRNcxmjfS6
      t59x5qioC46iyCTp4gYvjAl7e6joCKFCTHqOTlaYG5/SFNBMcbodRO0O0mniKJdqesb0u29Y
      vn7K0VvHBPc+JP7Vv0N2Q8r+XeqtmM0vn6E6Lo33/gXl5DtMuiI7v8LEN8i9Jm4zx8wlwhGY
      3Ttsnr5gsW4ik5SBVye432V0E1MfrcjuvomS32Mvl9T727gdcLZPqGYVm1Bx86sbduIJi4eP
      OLj/PtXzn2GiiErEyFodmS5w9Dbu9h5UPUQgEeEKoXfIvv4K1R/g331E/uxbRC/D5C2qbER4
      sI/0WpisYDS+5PpqzUf/7A+p4nNsUmHyDIRB1RsIr0F8NkNXllrDxVQrsllO/XiH9PwFVAZT
      FVhivG4df+tDrLagNSZLfvMB8MVf/AmPHz4m9zIml9/RsJLm4BhZA+H00ZMFwhUUJqQ4+wpV
      TpFRA6laqOYWNispTp9jGgVWbKMWJc6gh61SUDGq28IagU3WWKuRYRuhmgzX0KlGkJQov0c+
      HqGLGUFvD6fjI70aBAnC9UBIimwOwWOCZo70XHSVkk5fILWBdAt9M6GaX6B6zq0vgB+AiTHl
      HFuU6MsMcMh9n5UyHL/7Q7JvP6PMl7jcIzkZULcL8nxM4HYx0zVWTbFqSnW9gYe/g00+RS5S
      zDzGOWizXtWoipTl5oCW/p5G1CfPFKJYEPQ+4mr1LX6QsfP+fZygQ3H1K9z671JOnzKbgLtc
      0P7wgKl+g665QPQOMeUEvakoL5ZoYYge/x721QvceoAzaEElsaXB2d/CrgtMEVPefA3GI3jj
      bfKyQ9DsoFzFaD2kURq++Q9/xTtvHiCCBk5n//Y7EA62qqjGY1SrxfrTz8m8Oo2eQrZi0msH
      r9ckm62IQoP0XNyte2QvPkV67dvxqBa/BQD4d/+aXf0NXniPYO8dljoj20zpUMdVJbg5mB5m
      tUF2A0rXQ/oa111Qna+pLjeodhtbFVSTS2wnwql1EHkFJgDhgEiACmSEDFzmhUKUhmbdQxZj
      8Fq3B/DZNYXXJo5XhCYlCBoYd0NlfJQS6M0pwj3AJjNsmqLCDracoZMrCJr4xw9wG02q+Sk2
      DbBrMLFBRh1kT+F02+SqxfUnf8zevkuRtHBkjts8pLyZsF7P6H/0E5JXXyP1GbKmyL8Y4dzf
      QntrHJFSXmhkxyMnYHGe0BEtdOmTMsMeNvEWGUHRQDYSnntrHnaaeKKFLp8TPfhfyC/+huyz
      GUPpcfRwgD3+EclXn9B95wTh+Uinj5kVWG9MPJaUT69xfIFu7OJ6a9x+D7cf4jgdzHJB9uJX
      BI8/xOns3U59ek3SRUzmF/huRN1v89lP/w0f/P7/iHT+Y35ZY6iur1HdLumnn+Le3cLYkvVM
      QL7E70I1d3C7DmJ8hax5UHqododqOkIFu2TLm9/8PQBCULtzD2NmJPH/gWPvUs9aDJMrfC+i
      E/Sw6Wu8nW0oLWqyIB+esrm8wumGqLZBFytsrlDdOlYmGJ1AJHBbGulHyHAb6bfIkxXGupQb
      zY7cYFYZtsoxxQIdD3GiBr6/i+O6LGZLJrMFDbeOV5xREeDWOzitBPfOm8ioSXn5HL2SKNXB
      qpjyOiZ7nqDcHk4tRtQcgof3EO7tlZOZbdg8+znVbETl7WCyU1T/R6BDjGOhccj63/4Jsu0h
      2l2yv3mBc19ijMG8nlOsNEQBsSrQa0F0rVFBgnRes97dJ4szWtpQxStGrTZ7RuE625TFBZ7/
      Eekn36DXGeb+CeH5U6TbZ/iLn7Jzr4GZZahejWq0xooJZBW1qEOym+Hd/R3E9BIp+2xen5JP
      d1CNMY4/hf03yXMPPZzidvqI3KEIHWylaTZ2MMUM4Tb/8+S3lvLiEhkGbP76z5GdCFsJsosb
      hF4hhEJflri9LcpZgdPq45gG7oPjW12nwRGLz39G2B78FlSAP/9j7rcLytn36HmCSeYQKITn
      Y7Iaq1mMF/Sp1QKsm2Nyiwol6ngH67Yx+QanSBEyxd09xGnsYfIYo1vkyw2uyqnSKdamSOGy
      mJdEXkQUdRGRB3KGrTUxyRwjUqoSrOjiqgJHSzbrnFI2CUWMs06pLudYXUHlIHwf/407yLbF
      5GtsuQFfU6U+1obIukHmc8hrt46MMiZ3LfNlQafsE7YaiECgeY02EW6tR9IYEA1P2Xz1Oaqx
      QjZrVMUcufJJBZhWkzDNSE810f0+lCn+PcXpfJvo7ClGHuPVm6zdbzm89whz/Rq7CrHdbeRq
      ieg9ZHH2FE+XRDuCqbfFXvMN8u9fYvUG586tpawwHarrEaK3h9AVBo0tNF6rTzm+wjgWm2/h
      338Tr1Gn2iQUN1NyU1BGHj51ooZAOpqvv33ODz78Mf9vourJGFPO0YsbZH8b0+ljpheE+/uI
      oons9Fm/fIbTjKlmkkI2aDgSt9elupmQTm9wWOMdHf0WVABrqa7WkO+gghIV9gCBXseodo3e
      4Q4mVCziKY0bTbCzhzt4G72YUCUponLJaYKnMUVCZr5Ghn2snCPDPeK4SdQ6waOg3CzI9Wsa
      zgxdW2OcLbzaMY500X4DUzr4cok0BaLcxuqUml9hygWlt0Pc19QHh7ihD9pBL2aYuaUapohQ
      gOtgSxBOjJQJNqmTV02crk+4/wjp3rqo6J/+BWrHQTZ88qu/psottYdv4fQHbDYZ+c3niGqD
      8ByKMwH4ZAcd3NDDTcdUNwbx8D6e71Kpa5azDvXZt0ybb6G6de53pyxf+OjvL3C3j6BfUr7a
      oCODqp2zqa6phSGbfItI1tDZGc5DieQROnuGdLcQ+YDg0X2E0yedPyccBFDbIV+PCU8OYAYI
      hXUM2fwMEQY4jzpsri/oeyFqJ2Izm+C3TtDiObksUU4ByyG6ihFOF3bfwdYDPLnGOf4BZlPg
      7GxTDYfUjxvEL2L8pkPxZMgcSfTiJXZ/D8ekhG//CFH7LTDKRgjcvW1MNUG6O5g0RW9GePt9
      EBprHexM0UmPKAYwzi7o5T8juHOM5++gFxlq0MAajzxr4IWSYv4ZVVqAPUOsN8TXFuO2Wfo7
      bJ98jOd7KAVUE7Jnv6A6v0DYOm7/LqK1hVU1jBqh6nVU2AWxjZy8wtMuy+UQqpKoGRBsHcJW
      gfQeUL66wcQJQmYgfKTTAX+DPziivHlG/M3/hdPfpdARxeI7/DffpDh7iW08oP3+71JdX5A/
      fYm7eEm8NjQfBBQ3HkXXwdQ7RKMrVLtLNcpw93ewOy3MzSVVYSkWG4z7AL19TF9/STy5xqv7
      +L0fUK6/hkUXGW4wjib9m2c43X28QYe0+yEdPKhynN4W2rzAXkpksUV5OcQTd1BHoJwIETkI
      uSHq7ZFvXKDAr4e3VfDwAcVywdXZM/rRCabcYC+vCPYe3W73fY0fFRTjFfnIpXL2kV5AFMR4
      3Q5m6WFLi+p20LMp5fgpXClkfE1yVVB//C7JLGF9PaMlr/CO9xF1i5DubwEArEUnK4TjUc7O
      Qa5x9o5BaCgE5XCCyHNEt44Xemwf/pCbdIm7imnnc7z9XUy+oMggX31HpjNsHuARIaoRUVfi
      vf0mxuuRvbgm0HPsMCFeLrC6wuncxz1RiEEPHI115kg3QPk7CJtgswnVZI6tMmyW0DnZQzYa
      LOOYzfQZtbKGzF/iHZ8gc4nZKIRbwxRj7Aqy4edYk+BvPcBkS6pySrDXo3pZUtEm7L4HRiAH
      EhtfoZeXWNGhKgRJEOA1eoSrG6pWgM2XOFEH3X4bMfqWanVN3AyR0fvUdrbwLr6miG8Y95cc
      7L5HufgS8gY4Fut6MJqwcQ9wai38/T/CDmO8N48w+gK9fEZ5fYq+sNjomujH7yDDHvn5X+NG
      dygyj6AhEOJWeCHPZ2QqIDCaajJh6uUcv/0h6Irs8gn5ucXnhrKpAAc9EeSTAtlt0GwUlLNX
      VO4B+bdPUNJCnKBaLcx6gv/4Xcxqjnu0R+QGpJmlyjSDDx+z+JvXyB/tolYCo/PfAgAoSfDW
      I/Q0wbv/COFaqulr9KSgnDxHNDLUoQWmKFmnmr+mma4ophXXkYu/fEXNCcEYXCLIBegFuiqx
      jsWmiuL5v2a0Vmy1OxStDrmjiO7uEHaOEG6EnWSIziHGxBhtsNWSfPaC8uwSYV2kG96e6O3s
      Ui3OEUlOjQ1GSTZBBr092CzwGnW83QOEU0cIRbV8hVlWiMDDZGuU7uNsNhRfPcG+tU3w+F8S
      tF2q1bcUF0/R8QK3+QAnv2C8btEZ7OLJCi3GKNvCpBlqe4fEHRLM5sxZIzZdgv6cWpkRdGFk
      C4pVE1U2bnsp20T2C8r1CBl4bO72udf6EaMvXuJHPrZagK0gb2OXC9yjPrZMKWdfIxoC7+BN
      MD7l1QZtHJyOSzW5Itg7xlpI5jGzZMgg9yFcobNz/J0+3laT7OkTiouCzcU166BDuNvGLC+o
      sjaSLezZEidoYh0H3niPanKBur+LrQJkPUDYJqLRo7r4JdGWYv3thHq/SbmOKX1BGP1XuEQm
      qxkvzse8+eZjKFNenA3x/lYWZW+7//9jhv8DYSzl+RzVdm6nMkkJbKEaKc7B29hwh2pziS2v
      sHaJCjy8Zp9gX+DEI5J0zGKt6RVdhK0QkUK2HRwpQHpoXKr2LqHcoNwlQhbUFZTLF6SbM5Ty
      EFl2e4Rd28MmOdUsRVQQ9X+AXl1jTAzrGbZycLpvkc/PscUA6xr8eIFsZWw6b7NRDh0h8Jwm
      Jl9D2kD1JBQSjMIUKzAFzvY+7B/hB1PK2Snl6znV/AYrB6zKIcGBQzPaQ5yN0IsLZFsi3AV2
      IRBOgPj+irxVkYT36KW7tPuHVKtPMYs1eSWpyzt4nQ165qF2IorL7wkO3yPjBiHbuNJDvX+M
      e33F5uf/BmH6iNASvP0GCBfcFDOxmNWIMnuJ0zvA6a6oqgb2+hy9nCCbBuFGrLmhVa9TZRJO
      v8U/egdLgnTq1N7/I9wXLwmmS8KGxI4WqOYhOs+Rgy20t0FbixoMsEUGskSXEZvrJ6BreIM6
      xauv8VnhdQ/Iqhn2aItaJyGbxMyejv7xAJitEu4OaiwKy+TFC5LSEPZ76CLFGPNrE8YyRlNl
      zylvGlTrAGsNriswYQuKMY6/xmkMENFDMCvK0QXp9a9AubiFSz216Mhn0Z0j22/SCwYoKlAb
      CCwSn8tLSS8M8Ho5Nv0WhMRv99FlRrW4QkYGO/8a8isoQ2Svjvl/unuTJteS9Ezv8eEMwMHB
      HIg5bkTc+WZWZg1kcWixWqY2k6ytrbXTb5RWWkhmFLtJiUORRdaYlZmVmXceYg4AgRlndnct
      UNamjUzFNtFIpu+wBfyDf/76+z1vllDMZuidewTt+6A9zPKS8vZXSNEElaA7j0C2cdk10fBv
      qaotRqsMm6Q0dIyOW1RXOcJboho7SBVCJCnVCh0uSK++xHzQyFCSeGuqZEHz0KBrHzE5k2RB
      SqcfYMuc4m1K8N1PSF4vcMpjvJZs6WPaj7Yop1+AUzhb4BUNqv0mK5HSe/oJ6Yv/jAu2Sb9+
      S/70U/q1AXJwn+rNa7S9ovA7aJkgREn6zed49x+j/ADDC1TzGHRMcfkWGQ+oVA+pF+jTLYrh
      GYvKp7Z9StToUXlX5G6H6t03BPsPkbUmGIMLwIkSIWL8j08xsxn+9n2q4RDdaSDrdUQtpDx7
      T3j8lOL1S+oKaLfIyxWSM6pOg/zVz9GH90kryfoX5/jHj8id+d1l0HQ55c35iOPjA4SpGE/n
      iCrDi3vsbnX/WakQJ4fPkOUlQo5Rqot/9Ck2nWNmY9wqwyRzbFkjW6T4Xg7lBLCI0CF8CWjK
      dIoJ1sxDn/jgR3Qbe2STC9bJDaiKVphTlT7C38YLLM6kuEQhspBCbSOTl4gSRKSxqwJvu4fq
      9bHVEoHALh3mboaMm4iawZYjbLIAt7GSO7MAsUI1j6hmKauGRARd2vUeSjepkjusa7Ga3DC/
      /g377V3sIkCf9Bhd/j16uaCxJxBFTGZ7GJlhxjPC7i3cAqqOXPdZeiXpekW9cLSePUREZ8io
      i0gOKCY/YXLwQ9ZnK9oioyVybGuFXzsm/dUll57i5OkfkdkEGTrC+RyqENO3yHWG1zzBJGOc
      naIbTxAmQm17yNo+NlmTXbyGUlD/6FMW2Zxq/Z64qGOzIaIhUdH2JnlnNKG+3cOJNXax4osv
      vuIH/8N/xC6XoBRYi8tzEBLVaZO//QycxBUF1t4imj2sp9F2jW48QcUDspevMG3J+ixHe5rF
      NOHojz/63U+AWtzh42ed//I5ipv/P2/l/8rlDGGtwBbtTVSmn5N++TcIX+ENHuNaB1TJGJaX
      1AqJig+Q0Sn4OSiDqAmcneC7e5hkjJ6OWP76f+Wt7NJsx6TihP2tASDx9BKzvCU5nyN1QTA4
      xay/QpRnEGxhmzv4nsLfC0E4XJHgkoz8zTWuqND9XVxWYFcrnDIIr4bwNuF72D62mFJdJPh7
      H9PzQsrkiunkBsl7IuVwyee4uYK0iTq8T7nvMX/zF9QX79CNBqLaR2w9wkwKauvXmPYV67sB
      kZ1SzcBGhitfc2ASoq0DzPQ1fneA5ITs4i8wp/tIExDqGUImZHpIkDTIvvpA8PEP0JM7TFkx
      n0p2Ggt09x7OLPHjA5JqTDB4iLu7hHQPGYVUs/eY1w38oxjZbBJ09klWK+Zvf0kRxmztfUK1
      +BJVjxHlNnaW4DVmyG3J4sPP8DJJsP8YUa+rYcBYAAAgAElEQVSDtdhkierGlJcfMMsVutuh
      mj/HOYm3u015+R7UAbZxQq1RYsZLVHuP4s0bvH4fVc7hdEC+sDRWSyaX774FD2H/159yXwnU
      ro9qb6Fq+7hqTZWtyeZzRDpDzgTV7S16P0BECtXsIZTGFlOcrZBeG2cFVeFA7+HXMvLp13y4
      XSF8y0G3i5c3EKKG1E1sVmDyJeXoOcKr8LZ2qCZnCFth4mf4tSbKV5Q3Fzid4e01kVENJ0qk
      biDDAUKFID1cOcW5HFU7pLq9xXrnOLdE1h/j9ANMMqOcXZC5BoQNfHnFzReviJ9+RLj8miC5
      wa4zgvsfU9glXvMh6dvnaPsBuyxJpk3CUCJ6e9zGc4rlikMswY6PmRTYqy7qoEDUYdX/Pu52
      TmBuKPqfkE9/QvsqRHcGrNs1Clenlza5cdd0XUw42IUsR9Qs3v4J6+tf4ze6BN3vUt48R4gY
      sDi3wmU5du2odu8xM0t2fUE5fIlsdNHtLWRtH5zAzCaYxTmu9Mina0R9yfOLD3x8sINs9LEz
      g1AR/skBTi4ory7wD55i79ZksxvkzlNqcUl1N0P3DsEY0s8+I3z2ESYIKeYfSK5S4nqKf/qd
      b4EKJCXB08c4l+PKCcn0/9xQHCYOuVgguwNEHBA+2EIG0aZAzBrhtRDqEU7USO/OEcIQdXax
      5RAhY/yD/4lY/5zG4g3DEYTtGd3aGhlavP0BahkR7MQULqAavSd48CMozrDeHcXlO4q8Tu30
      I3T7AJzFmQSEAzJMOkJFe1hXp6pqmGyJuPwbROcEK49Q5ho7vcKsfo6sdaj3tmgEMbaKGY22
      sJ1LWskXVMMlTkv8x48xdo72LNnLv0XMM6rVDLvwCfZXLNon0CxYVnXupbfoHYl1Dm/rP+Da
      FyS//HvCZ59iLse47IL6g/+W0Wc/Jgh9RPsx8iRkPBqxi2NWXRDcOYLf/5RkfY29WeA31lQ2
      QXiW1bxPWbzZWJathxmPcWmFjNtUTcvdh1/QNj5Jy0NEA1wO+bsxIhgh20c4M8HRozz/DXoQ
      U1mf/Noh7t8DMQdviuxqrLvGzhbo9hEUkmx4jtx7Sq3pcEWF1E2ElCQ//wXhdz6mUj4my/Br
      gqwcowff37Ss/+pPgL/+Ux4/sZhcUUw83HiJlilqN0S1FWaeI2s+Xu/pJuQhvUToOqApih5S
      Wvy6BkqcSaGq49YFo9E5cTygVm+ST75gMTMsqNESMxqBRLdjSDMImshujWyxQMwKlPGQnQAX
      TimyCq/eRXp9nOxjTYgrZlCuESbBpAt00MWtJU6VuOIaQRNTjHHhAt3q4EqByxSIHFlbkmQF
      4xdv2XYSuV2j8rYo6RO6V5CGOONjRjNEPkE92gEdcF7tErRLxHJFd/YN4ckOJDuoncdUi7/C
      jRtkw5x8PsS7/wjfGBZqSb35FK0Eoe/xNi94tHPA9fmEnUEPKnCph3UTimJC0G2jXAcZNSkI
      8aIOfi0AAdVwRP72LYvHu2zVPKq0xKV3aFsD5aGadcz6ZmNtqB1hJlOCJ6cgJC5x/OLHf8GD
      Rx/hFVDb6qI6CpsNcesuenuL9Rc/Q3Wb+FstnM1wM7VhtF6OEJ7GDfawxZig4ZNcFQStklL0
      8bP1t+AEsI783OFmE7xWE+/ZFqp9gPTa2GWG7M4RYYHNhzhXIXSHPHFIN0byEum1sGkfM51g
      syU2SXCiSVG08eMMk84Itr9Lv78gvvmaWelzVW/TX94SRhEiVlRTi1gGZNNLiHtI28EuFIoh
      +fIMqccb9qcrEHobvABR8/BbW5Rnzzf24O4eevsQx5TQ+x52WlLevUAIg/AU2Bg39WBxiyha
      NH70I5LnP8ELU3z1AldGZJmPn2ZIN0Z/7xiTQOLa9AeClawRvPsKbz+G4hnRR39CPv5PaH+f
      qirIywn+o6foOYhwQX9nh/G7Jaq9hN5TIt/glgn+9hZ+v0v+9nNkrYtQU4JRg2pdwVYP5QuC
      FPLxBNHv4kchSMG8aWiPrhFbJ3g1Q2ZP8fttXFVSXH+OWd/gTEJ1/iXe9kPscoWM68gowGsP
      aNR7pPmKQrfQ2RSV9ZBNRfrma/A0tcMn2HKBsAOq8hq7nuOqCVXNR6zvCNv7OCKESfC698hv
      3mEX6begABAgmshTD1mv4/wBVZZgJ7e4NMfbPkJ4XdC7ZJMrXDWj1jtE0MPMVhRvXlJNf43q
      HOD0HiKuM0wu6HRekNkaQnpw9jlOWGzYoFbl6ItXTKqKXO8x6FR4JsXfGhDvH8PqFtcaYEpH
      2DxGuJJy9pYyzQniUzAFZjXFpZZyMkPWA0Qjw2VvKeY+FIK8eoX0Oki1hUmGICpggYxa6N4x
      vtqiuDhD7jQIugekz/8GqcGsLSZ5g/7kBOEdMM9vae0q1r7AH6aEOkXrZ7D1dOPbn99gPihc
      sEb+wfdxb67RRyeofI19vcDKI8K9HSYuYkd0yDoxrfouzt0iw31scYtoFohYUOvsUM0/kBQh
      4W6PsCZIPnyNbfe4m72jc/IIb+Zwdg7TOioQlNkKyjNUr4+OT6nu7ij1r6jyLyC/jysOkXUf
      O58gyoLo5JAyn+JKj3RRooio7mZE331EtXqBDI4o3r8nOD3FLOeUSMKte3j1PriS5ZsXhF1N
      tX6NkmOK+eW3oQAclRmhFhFF5nD8GqF8yjuHGnRIL7+kTHJcblGijktyim+eQ2GRzV28rT56
      u41z1wiWlKaG87o4NSCfX6BNho3/EFQTMfsGjCKMDcHyktwumLwbE+zv0V6MkcsCtxxiR/8b
      goBpJlC6htIGl0+ZzT9D2gzd7iG9FkakSOMjhm1MFiB8BcEc3WiCX+LCBX7zAeCQfh0Z9nBJ
      QXHz59jGHVodkr/6HNXYI5/18PPXqIcRLrrH9N0v6e0fM49i2q7B/O2fYh4+2lwY04zVV3+P
      Vk2cHCNO7qNuvsE8+O8RN3+Fq0B6D2md7kIakJz9msaf/I/czJY0dYYZLTZpm/MJyv8hJnyB
      s5bw5LvUCMiubimLjPrBDuM3v8anhV4scGoJRYhsKrh5xfpqRvzwD7ArhyPFuhtqn/wxiAbF
      xU+pqs8RWRNbpIhGiQoSrBVUwxzd32L12S+oP9oFVyD1EdnXX6IPIsr1b1i/uyY6fYpSFTa/
      wVQWYQy6eW/zp5a2sI1vQwuEQ8kx0k1hbZFyG3O1xFMJ1fAtwmsSNbu4PMMVC4QE1dwGX1Fl
      Z7j5AjcLcdbD2RWjpGBQH6LKGjpsgRdirn6NXRQI5SM8DxGucUYQN+8T9woW4ynjKcTtAQ2h
      cdaCEuhQYNOEcmnwu49p7uxSJWOym9+gplPQAaIdo3d9hFvjEEh/G6kUtpphyiVm+hpHsLFH
      eClpkuDu3iIHXVx5DVKhwgfYuyH+kUPuP2F2dklcj1jV2tSKEeXLv0cMWuh6j3Ii8aIVzl1j
      5m287V0m0zmd40+YXv41KmhglyH17/0QvfiGDzdTyvunFMMzXNGiki+Qcgd0jozbmMkFqr2L
      qLbB5lg7I9zvYbIxw/dnyHVEdP8RpZmiTQ07XyDjFv7+A+zMJ3t+jmqXuGqG7t3HllNgjh7s
      AwK7XCACC96YcvoK8oiiVPDmLY2DHFlbsL4M0WR4gx1kFJC8X1DbuoduNZFeB6FCkncXREeP
      kV5t8/sYgVmLb0EBCElQf0Y1f4nNS4rZV4huE2oDfLNFeXNNdnGG0yVSS4TnYdIl0lpU1Ef6
      Ec5MUfV7lBwQT3NqPqhOH1vdYBZzZLGL90QjOwHkHnZ+idxpAjkyPGD74x9QZQumdwlXaZNd
      4aOthy2GeAen1IIBRTaiyN4iy4Qg3oIjDzyJHzVxpkDJPkL/dtTPpIiwh0PgqiVCxZTzX2En
      v4Glj+oLnJ5hhhpv9zHLdxZRu8UO6iznBXE2w/vOH7GavMZ7f411EX69S+QXrBoBjdGvUNU+
      lVjiN2JMOWR1Lmh3HiDsCH/3KeXkDUJ65Ns9ttIpi50ekbrEXILYLcCUSB3hmglkXZy0SL+L
      LedU65dk1FDNNq3dHfLxK8hW0D4guHdK8eol/r1naDMlbxhkWUDe2ky++V2E2BDKbTlDhRWq
      MUcGO0j/gNXwgtp2i/z1C2juI7MO9V5IPnxPalqY9yvqjQAVNQBHlb7HFiluvcBJhcnmVOMJ
      ZZmhGrXfvQCqPOHd5YgHp/eYDK9JKoUya3S9w6DX/ifa3b/LEhDsI/r7VLfnVOE1arFETM8R
      zQbeYYewuYWutX+bwpggVASmhis3xjVbVlTJS27GOTsDg2uEGBtjxhoZ+uiHDlcusPMaMg7x
      9x8hOw8w60uqyQuq8g5RDWhWBZETLFbvyQan7N3/HrK8ohr9DGkbeK2PyFWCOm4SNAKqPKdM
      RgStGOk1EDLElne4fIm1txuMqZxj8hwv/C7EJWX6GvP5N5irBsHJU7LbDqZ8g/9Ak6oBjeEd
      wel9xmlF9O4a7cdMXUp//wAv6iEuXpGOLgjb+wgrSasPqLs61fYJ4WBA8bZCboVUd+/xt/4Y
      Uw6J/G2uX/6aR7v7eA92cTjK6y8QocTb/gRhY4oP75Etg1B1bP0R6/WQVv4O2VgQHeyRZy2q
      2Rnm/Bq/2SZ/9xmirnHOIqNDvMMjzN0E0c43D1+wETKKO1y1QIUHrN/dUD/5iPL1Z4THTfJR
      idzzUFQEg49JS4VK7igzSXB4gpACxR7LdxfU7+0DJVUuyNcBgTb4j/7gdy+Am9EdWzWYFeD7
      Ptd3d4hyzXaj98/rBXKOxK4o370hEIb6Xhe98xTpS5ytgBLhdRCyBrYEs8JVc/CWUK8j5Ras
      B6SznPhIIPNrzOUGhaK2C1xDUU7XuMwg65bq+gVZMUPWDxDiACE1Tq5w+quN6cvbor0Q5OUH
      Ln7xc3TQYnB4H6UKyskrgr0DrLMsh9f4YY5Xi1iPh2jvNdqTm1ZHt3C2wGS3uEWBLe4ovf8F
      UWnyqQcmRh+ekJxXyG6C9BJyVSear5BxyGxqCCe/wt/7BFnLEOtrXHZNMi7xV1es/H0Cb4X0
      Ksa3hu7BR+TxFuXoAuGfUq3GqIMTMpsRj85Zt0+xUZ1qUSHiBBm1cXGGkKeUoxwZWaxcUq26
      0Aq5vfuGrcpD9R7gdIa1FZ53hWj7JGZOOc3wqgyvdoxPTDJPiOoLZL9POZ/DfI7q9zcwKtkC
      3WFxOcWPQuxkgdM5JokJD+oURUExWeG6HQKbIbd7mKJkMZrh1wOUVtg8wwXbJPM1zEYEWxJ7
      fYux93/3AmiEHh8uRhw3E5JkjXOOVjNmNp/T7zT/2ULyJBAsM+In38M7vIerVthihDNrrFkB
      DrIPWOeQXhtVP0HIe7hqjlldUQ3PUa0u6yBgx/ex6RayOYPtTfRO9eEMghIZxkgTQVVD+B1c
      NYT6GNk+Qao60v+jzUa9/Q2khrC5x/6DU5Ik5WL4NVHRoHevjRAWaW+JmhpjmhRrS73TwxQe
      RbLC828gucZMFthZgWzV0eERyBOq5Xt0M0LMPmDG0Pz0uwx/+ef4z+4TpUPcqCKvZ3hxTO1w
      Bz/eJ7n6K4LePmK+QJkxRbZCHW5T3OSEu03KdYgOFcYm2LsRMvDw9wfo+Am3d9/QqcNsIenJ
      OuawSVg1Ka9/SrDzvQ0wAIddFej6DsWb3zA77bHff4a5uUHVQPpHVMuvsdUULQJiv0m2FVO5
      UwLnoCpQYYj0A9xkitIK2e1ixmNkI0Y2Isq0wLclQdxj/bO/w3+4h7f9aHPaXLxkaes01QQl
      fMgF4c42IVCsc2bP3xPt9smXGY12hLEFZCmy08Dl73/3Amj3d2j3N8l4reiI7b1/iu38X7dU
      Y4XoRFTLLwGFUOFGRvT7OJNsCNDVEpvfYPOrTa+db+HyJjrqMDn/QFgMKVihB1t4vWNcHuDq
      S7yjAWY5xi5nCOmhOgNU5yFmNcUWE8ztGYYQ3AIR+Oj2PehmkCwQKiBudwiqe6xbkvP5hFaW
      0d9+BMIh8iGiuiO5WKJEAfkl2bqEUlF/8APUvW1sNsdlIeZ2gVffJZm+wa6aePdj7n78v+Mf
      /gDvzWeYaYDoxCSsaVGg8n2MPifJM2rTAt34iOLu59SOj1B3Qxa6gQjadKIeSdUimH5AmCbe
      URMnLCa7YLm+4PDk3zH9hz9H7ZyQigaNRgVLs8GRbPWRfg/ZWEJDsrhSdO98nFwgggxoUEz/
      DlU7wo+eUN3eQjwmqvUwps/kZ1/Q/c4jolaT9HpE4EuQEjOdIbSHq0oWz98i0wS/32X10/+E
      /6SHv/v7CKkpVgnGtOk9rLF4/o7oYB/KGbgeQnpILaEqqZzAV4bq9g2yGWInK/TWffC+DViU
      v/4/ePb9Y4TUyGAPITUgN8cnks1TZIVZDjHrMWZ1h1slm+ktk6H7p9zmDXZqFtmWVPP3mNkU
      WfNwRQUiQMV9dOcAu3oPIkCETYRs4FIfV2TY6hqTv8EVIISP8Nq49RV68BSzTJGtHIcjXwkW
      83OqvKQZdqnVAsCCsDgXUkxDvGgb2ahRLm5R1RV2tUQ1u1ShBR2TzSuW+SXtuMf6zTXN/RVB
      95DizZC7nYJu/Ri9muHvPCF7+7csU2jV9jHJDTLqIGQBWrPMS+alx8HuKeuqhff13xB98m9Q
      nT7OrrCqxtnynKMwZjRLQXbxOoKWN8ELtjaq2spD7+wjwz6j1ZBoVREoTfLNX6J3m3jbx+jm
      083MxvU5sg0qOgTnKIevsTJgebamdu8Ah6DRa2KTNXa5QihJMlni1wO+/PIfeNJQePd2CI5+
      gJA++Tojv7gifnAPu17jXMn6/CWNhx+BW5OvK5ZnK7onMTKUmMKRXib4UR2vNkfUI2S4/S0o
      gL/6Uw6PNFalOCpEUSFKMJXbyF1CIrwAGQaIpMKZCmPWyFqEajWZvHuLH0Hc24G7EmdqiGYH
      dImKG4DBlhOwKaoKEF4Xk1iczSBYIGstvOgRQtep1q9w1RKXj3B3l5iRw9gMqWqIKgQFIuxS
      aMHKXGGdT7f7KTXtAyBDSTaZ4axCSShWFj3oQ3WLKjx0rUbuh7z/2Z+x5Sv08QlRa0TxmzvW
      90N8r03NKbzgACdvyb75inz7R9QX3yCbTcKjP6RY/QQ3A9vs86GoOIkfM/vqa6JWSPzsB7hy
      igwOuR5/Q90fkL/5hujeJ6SrO8zlL3D1Fb3tHyK8LlJ3MHcTVgFoXxIWq83rtW3in34MqUIE
      PrZYogcRsrYLrsIVGdVkjOrWKJdXZFcJrr2F9jX1TgOAZDhDVSVKOj776c/49OOP8B88QAUD
      smWCXScEoUY2m1S3t6huF7tcsUomCBK8UFPdXtB48kOEbmNGI0SsSc/e4bQguvcpUqtvgQzq
      HHq+xBYFDpBKIIIaQet0QxALfFw+o7h6h9QBIo6g0cWuF5TXN9B8QFNoqjdX6JZEbQ82HhQj
      sYn5rZGtBVmf8u4NNphg/RyhGkh2qdKS7PwnVIsRVDVwClGsEalGNiXOC3G+j/M8bHUL5QhN
      j1g+ILl8y93rH6PiHo3tNrobQxSQ34ypyLE1BTcjPJfjWh52PicvNH6QIZo9onhG8fUt9qiP
      VRWhXUEiEHFO8su/w/S/h5qfo7pb+EfPMMUFUjcpySnMkkb9IeXtEBmOofVvSGc31LpbCE+y
      1JpeMiI7+T6NQQdv+p6R2EWt5hCl6GYLoSNW9RX28jlhECFaCoYBwZOHmNEdstmguPwKoULs
      uolqJ4CgGk3QWwPs1KDEHoE3pJiMyUQblwRIrfHqA/xGHVvOkLqOd7CN9LdIZmuUlniuRLZ6
      mPEY3d+gVqrA4tcVVdmiuBvSOP49cAazeofJVwgTEZ1+gl1dky4ShPxH0KH/xS4hMLUmYdMD
      Z3AmwdkcO/kxVWEwNxahYlSrhghjRCqwZ2tEmbJ0Pm33Cr1dJzzZB+1ji/MNdzLcg1JhFmMc
      CegpLp7giCH3seUNQowAjQzrqMNjZFTDmiF2GSIbdZQMUd3HlLOfY4ohSn1/E/A8e085/JLe
      /Q4lkqpMWK0KwncZPoKwHuKFDag0ruMh6hGVjfG2BOvFDdfvhwQHNaqr94hGzLLVpWtK5HoB
      QUb68u+QwTZ5lhMPFP7+Q4QQlIvP0fpjjL0mE336yxk36ZBe3CWof0W27oBL0eEbqtEZrrlH
      lXxJPso2mj8WPeiR3kxw9mekVUVqDP3tfdzaUd3O0O1DZGMLV/pUt+8Jnj1Feh1smmIXS3CK
      4PQUGUVsbCwSPegjz6+o8hXGTTG2izQOs7oEAkSskdEOyXSNF3rIbI3sdDbtZ3lHOZtRLDMa
      gycoz6NMC6YXS1ApJptg5xrVaWNnBbCZw4gaMVXxj5gJ/he7hEQOdpisLqhpqGsP6e/gFqdU
      oyn6ozUylkhvgEtDzGiBf3SIET56tiLuSmxxjVldgwyRuoVZzqhWX4EUCKVxVYmocmT3Y1Qj
      RAwsyM2XacspQteRXrCB3F5ZrJlipguK6S3W/TnKv4dwIZX9DWY9RtY8vL1DhCfwXAGZI06u
      SNsTEl0nXvQweYz2FMxS3HSOqdZUTlD5LVB1fD/FJl1mPY9GPkO6fCP3zRyCmGp9g3vyHbx+
      47fzES/Q0X2KmzF+u0O6bKHCNVIpVKtJsPX76OyWbLFmuIzpmCFJ0KbthYTdx9hyRly+xsqQ
      bHsPvc5J6zm7e7+Hy8dU4hyZbOzNZAqbzdD9Y6QaIJRGNUJkEFFeXGHmMxAWEfrgHODQ/RDv
      wx1r4+gdzqjSb8iKXYJmgPSbJDNDENfQCsrJGFFvUF7dUTX2YLGi+fAU8duI3/TqitZxSDov
      ibqnWPEOt2aDTZk/R7UeAqB9/a+/AAQQhTF175i0LJlO13jDM+r9BvpIY9Madm4oZy9Apqhe
      g/z2S4a5ZNANqFY+QrdxqxrVeITjNarVAe1AAbpC1NzmbhEm2HIOpQBjAYEtE5wZI9T1hiRt
      BLK2jfLuIRofI2JNuf4Sqjqy2sV/8ENsNaZMMqrFCpMeb/ie7QPkckUNxXp7hrULeq1HhN2H
      6FoHnCK5Pae4+Iqgm2AzQRoN8NSEWn2P8s03CNEEmWLmC7yP/x3WX6GC+9hqsXlMin+Izf+S
      Kn+Gt13DDd8SeZA2jmn6fZzNEXJKdvX37B3/CaN1neOTU6r1S5wtaLb2uJlsZqWXUZeBbGHW
      bwCLF34Pt5Nj0hnrX/5n6r/3Q1R9l2o4Re/uIoBqOsM/fbw5tWcz7F2O7nYRvk9epKjY0fIk
      q8ktrYM/wpk5+QqKxBBEGwdvcTXG2z2lmKaUqk+9GeOwCKVwzlCub5DlFL//CbpyLN98oPng
      KcX1a6T0kbqNNUuwCdLv/+svAIelWn2DXS6RY0czCCj6AZPJHH8M9ZqHXd8h/BCXC6rbFNd+
      RLAu0KKiurvDmWtkJPFOOiB6uGqNKzOk6uOqEpcssQU4m4PxECJE1jsgNWK1wOVTTDaDmsPf
      ewxegS3f41yJmZU4BtBsIXhDZnLKahu/1Sdqt5DBClflCJqIE4cTEGYtKjdhmvwGdfYZsVdH
      +xrlNwi3fFbTEGND0kbGVvv7mA+fIfIOsh1AYIAOWT0g9iOq1fNN69J4SnL2Bk93WLV9Gssp
      zqsjm108UbKef41Phioz8ugJXt2isjmrm6+pdU9x6Zc46aPrRyzMkJ32ALe4wi1LvK1jypv3
      6NYOzqypPf0Rbu0wdoyol1S3bxFBG9XcDKkA6E4HZy1mMqFYpYhWm/pem/zsG7zomGRuiTq7
      1DopXliiNFA0ETWfZFYh12sax0eY4QjV62LyIThDdlsSHT1GCIV0JUEzYvX+iujwBOEJqvnn
      qOgxzqypFr/+118AGEv2DxeY+RC8ClHbxKS2WlsUFu7eXNJotVFjsYkkcmuuv/kZ2zVNHjSQ
      UR1Z6yOsh50nCFHhRABCYso7dHyCrO0g410cFTa5xeYZZv0G5ySqEeHEbOM3MRXZ2c9B1bFi
      D5eCH8zw9rtYW2KKQ6QdElZL3Lig8HMoI1Qzxrohct7EOQtYtHdAu2xRyC6LYkmwWhMGTZAx
      pvg1s+ApHQ+YjCnfXxM8+whqE8xliP9on0zFKJHivDZm9TWOAe7mBcEf/gemd1+jbERChyCs
      aMQHDMdf0VE5s9WauFljUezR341RyWdkk+dI3SRs7JKXK9r+DqvFS+pRG/Jj7Nzg8oJy/pzg
      8A+ohmP0YICZTEBKIKG6O8M72MaWFUI3EUJsYmHrMUgflQ4pkxx/9xnV5ZBgf5f1dEW909jE
      2eom63fvkP0tgipD7e+C3Sh0oqqQfg9TSaS9QNZqAFSTCcH2Fu78inQ1J6zlCB1gi1sQGt38
      5FtQAAiE28bb3sVVa2y6xs1zyts7ZE0R2wJMwbLfIHQ+1tRoPzig3tMgK1y1wtmbjZpUu4du
      PEYG2wihcDjs+pb8zZ9hmGHLHKclrrEL0SZt0VUZiD2ipw/QtR1AUlx+ia3G6M4B+e0QwzaK
      Ebgpdm6xIsWV0w3qZKCAOTrYx+YjqJYgPbBfoOo1QnlAKALWTjCtRnjZNYusQcevsCND8uor
      /O9/gq0Z7F0fwluKKqYqDLmYI3QPYx9SvnqNjgWL4U8xdz5FzbHSPl3xkGzyAVZnLOYe47jL
      cfwxl1cTauYSUfsU3OeY3PL67TVbvQGzyQeUX5AH2yityb/8B+R2H6/9HdK7d1B42MUaEUbY
      1YrqaoRstbG2+1uaxhlCKqyLKDNB2CggbCKIKccTdJWRjiY0dlusRh8okymLl19S3zlE10LM
      PAORUFyd4w1OkMHmQp1cXNDY30YIgc3Wm4ja4RSvU8NISTYpqO88RugAZ0tsdv2P4AINrzi7
      GPH0u5+yGF5yNV4Qygov6nJ6b/+fbHv/fy4pCb97jLNrZOMB0q9T3Y0RgcauZyAtrlxT831s
      FPPqtmSvWceVBRRLcCECgdAt7Cwlu/0pZnUFJsQJD2SJ8AXYJcJv4zePsfk52ASsh000wcEn
      uKKiHL/HZhWy1cNWhvX5c3xlkV4ONr/OCtgAAAbkSURBVEbxFG87whZLZCOgmr3C3mQI6VG5
      1UZC9Y5xLtuEeosMwRTd+A5R2aFWVUym74jqa8LrK9wiIPiej9+vU92OUDUPwpAsCIjSrwm7
      v08x/jFMtwl7FuF7zKqKTi3D8wZ40QpfvcOxohM9ZSLvUHJFUMupNxVe4z5evY6RXaalZRBZ
      VDZCC0G79xGpzYju7ggODxBehFQa3byH4QyXTJCdHcDh7e5SLZaU1zeonR3QNcosp0zv0GpE
      uW4i/H3A4uoe1lXkL36BKI9RrX2q3EN7ETKsyC9+ieqGuHKA9AfIYPNuUOUF5JPfOj5nVKM5
      /u7pRnJt7qCFgPWcPDGETRDSQwR7v3sBpHnF4XaLtIIg8FFKEkYtcNU/qxnOOYeTddAdquEY
      m99h0xJJDdXpg18hgghcyWq4YseO8RcJczmgEm1iHWBXGS75gNIaGTaQvWfoeh+Bwoy/wgoJ
      VQDFkjL9HCcDhGxhFzNUR5Je/hkuE7iGxvkBsmrj9w/w944xy7fY2ymy0YMgh65AqjZQ4Q8+
      wZkMU87w4k+BCpve4ioF2QqTzrDFlPzyr7GFQdR3CKIuqxcTON5FtOeo+JTybo7uPaAav0Y3
      H5AbTTd+gskW5MMGsrPCpQL/6L9Dnl+igjWVnKCCT3DSw6yHuHWFjWuE7DBfpbRjQ7Geg3nH
      MpsjVJ162MG6EU3hM7o8R+XvCGnhn54ClvLmBXqwhahHmKs3mxiq3KEG2/jtHuWb97AOodHE
      GEO9rZD+R9hqhSveAg7ht5DxfYLOEes3Z3j+Cm0LRLvJ4sMZtfY+orFNeXuOqJdks+Fmf16n
      RHsnON3GFSUEHuVsiYhjKmMAkJ6isJb1fEVQV0wX/4iJsJ2dAefXdwyqhLQo6XR6BKLAa3SR
      Uv7zmeGEROkmZnwHOUgE3r0usiE3MqZ/jKlCTLFkWV4waGzj8pwoucHaW5K0glaT9r09lASE
      wms8w9kCm1+DqyEDBVicqRDCw5kKO7mg9vj72IVHIR4gYoEWCZIMnIXphGp9gV05KIZYmSLj
      OqLyENJHSBC6jvC76KBPufwZQvhIv4sTKU44ZC4QuoHa+QizmGLmU+R8RXC/g7fVwnpjxHIL
      Wa6gXCPrGulFiGKKDp6QvPgzZOzjBxrBNtVihF8DZWNMZ4/I70L6HLHy0IM2aaGJaocUqzv6
      /ROsDZjeXmI8j0H3E5xNEdExATC9+Vu8aA8b9vGjQ8Dh3dulur1B7/QQkcGt1siuRmoNzqEe
      HZN+85IqhLC7BtPG5WukChHhNsCmRUpfbqBXwQwVR6imJogEat2nsBaxukKYFK+xj1AxVZ6h
      eYkKSjAT7DTF3z3aoHB6PYQQOFPi/IAojkjuLqlWBhFu/+4FoLyQ46NNq1P/rV/7X8JyzpJ/
      +AxbGsRgGye3qNYaViXWZqjgl0jPMFtKBrUDaipG9hrIe9/H2SWNckZVzpglc1y1osGUav4Z
      IJBeD+X1kM37gNtwL62hvL5G1teszl6gOjHh/hP8+GhjjXYWs/pAcf5i4zXa7yDcNs4TYB02
      HSOLbVDtjTxprkFohDraPOosXuKSDXJctfbB1MGv0H0f72ALVwTMfv7XuN0KXXuK8OuIOCT/
      +gtkr0XhWoRyTv7uH7B1Hx3kUHTQ/fuMrj7QimrorSOWxZKWmVLNU2QjwO/+IXb8iroSTJ3A
      JO8oZcRifcnx6b8HVyFkuAmavnhO++j3cbNz5mqOvJtT78RIrdFbA6rRHa40yHiAqtex+RDh
      tTFlgun66NEQ2fkY3dz7f43Xdc5SP56xfv0KEJi7Iard2gzHX97hgj183UYIQXo9o3HvCTKs
      Y9ME4WWUo9fIcMNdwmvh0ikiaGDSS8JWm8XcoAzfgkuwg8rFeEctdOQQOkeIErOYY1dzSAIc
      AUWSoPVzKt1AKnB3GUJFCFVD2JKOV2G9iGXZoDQ1mr5ErK4xDYVL3m84QrJO/mpIJTJkJ6R+
      tIuQArP8Cen8L1HhPtV0gr0zeNvHeHvbIDVUg02esZvhqgXWnYF7h6y1wDjsYoWd5zirkbqF
      86e/ZV5KnJv9dqyvjU1mVLNzZNwCLbHLEr1TYZMRog2622N69YHGco7tL5EiJej+N5TXZ9jV
      BLoHqHSCs0Os1UjRQ+AT7P5b1utzatJR5SlefA/qktv3/zN73YdkszG1ThfwKM6f4+0+pSUl
      14suXmwIvDnJXYEXxQRRiIwiitshoiaxRQYIqvUZ6RIaW/uI7iPMfE51c4Pe3v4v0uj/cwkh
      UWEX0T7BvrvErX1ErY6ZJ8hkiQw8Fq8+4IUebjzENvzNhXs02iApxyvEVguTrXDVNXb5AcIG
      MjxEqIQySwmynP8beVt6Is8lxo0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Playmaking (AST)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Playmaking (Blocks)' width='192'>
      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
      A8HMxAkE3oIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Playmaking (Steals)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Playmaking (TO)' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Rebounding (Reb)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='SOS and Percent Change' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Scoring (3P)' width='192'>
      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
      1vm5H+IAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Scoring (GP)' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Scoring (MP)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Scoring (PPG)' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      RJ5hhRR6PvwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='WS Geo' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='WS by School Bubble' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9aYxkWXoddu7ylogXe0TuWZm1dVX1Pr3M9Cw95JCcMUzToE2YsihQtGxZ
      omCDP6QfhCkYEAj9sWDDtAUaJmSYoAzIMg1zlSlR4yE1PZyte3qpXqqru7q6a6/cM/blLffd
      6x/3ReQWERlbVmVN5QEaXVWZ8d6LiLt89/vOdw5RSimc4ASPKejDfoATnOBh4mQCnOCxxskE
      OMFjjZMJcILHGicT4ASPNU4mwAkea5xMgBM81jiZACd4rHEyAU7wWONkApzgscbJBDjBY42T
      CXCCxxonE+AEjzX4w36AE5zgKKBJzgoycKGkAAFAmAHCLQAEhBAAJxPgBD9mUEpBCQ+isY3Q
      qwPYx/YnFMxOgTs5EGqAnPQDnODHBUopiGYRor6FAwP/AAiM5PTJBHjU0evra2/xxxVKKUBJ
      yKAFFfpQMgSUAggFYRyUWyDcBjDYe1FKQdQ3IJqloZ7jJAR6BKGUggxakF5d/1/4gAr1DwkD
      5SaoEQezEyDcPlaTQckQoVtF6FYhg1b/XyYUzHTAYhlQM973fYRudejBD+BkB3iUoJRC6NUg
      6ltQoT/Qa6gRA3cKhw6go4ZSEmGrgqC+tTNZhwDhFozkDKgRO/A+lAzhbd+EkmL4655MgEcD
      Sgr4lVVIvzHS61ksDSMxDULZhJ/scEjhw6+sQAl37Gvp9zEDQncy+KJVRlBdG+l6JyHQIwAZ
      +vBLd6HCYORrhK0KlPBgZhZB6IP52tuhml++Byg5kWuGrQqk8GClF0GYfh+hN9qiAJwUwo49
      VCjGHvxtyMCFV7qnD5wPAJMe/G2owIVXvtt5H0p4I1/rZAIcYyil4FdXJjL4O9cULoLaRs/s
      0aSgw577Ex/8bSjh6bBKKagRzhRtnEyAY4ywVYb0m5O/rlsZ+SwxCJRSOiY/4p1G+g2EzRII
      Gf1cczIBjimUDBE0to/s+kF968h2gdCtQAaTn7jdEDQ2ATL6MD6ZAMcUod8ARkjrDQol3MPz
      8KNcV0mII5y4XW44cEq4G04mwDGEUgqhWz3y+4RubeLXlF59omeWgaAkMGKN42QCHEuorqvz
      9c9uod5o4tr1G6jVGwiCAPdX1tBoNBFKib947fv49MZtbGxuIxACruthY3MbQoSQ8uBhVAbN
      iYdB4gFM3G6gRnyk153UAY4jZNj1ANlsteD5Pq5dv4FypYrX37yMxYVZMMbwja+9inQqiZXV
      NVz/rIXNrSIMgyOTTuH23ft4+skL+OqXPr/neioMIv7NZCrEKuL2PAwQysDj2RMu0I8DVI/U
      4ZnlU3j78gf48isvYmV1HS+/8Cxy2QxmpgtgnEFKiaVTC9jaLmGqkEMqmUCt3sDMVAH5fLbb
      jaI05WQCARUGR5756QUZuLDyZwDKB2aDUsM+oUIcR8jAhVe89QDuRGAXzoIwYyJXC92azv0/
      DBAKu3AOhDLITj9ATU/yfb9HDVsTCKU42QGOI3rxdVzXQ73RgJQS01MFeL4PGUrEYvaB3225
      LlzXQyqZBGM9VnhCxkoh7sf+gtSff+s1nF5axBPnzuhbRaEWIQT/9i++g/NnT8PzPFx44iw4
      Y1AAqtUaHCcOSigIAVbXN/HJpzdw7swy5mamAQDFUhn5XAYKgMG5vq6SaK/6lFsw0/NQUkKF
      HmQYgICAMA4ZBrpGEe2yJxPgAUBz3xWUDDqMRUIoCDUAyg6yNAnV/+0LhTzfR7FUget5eOvy
      B8jnslBQyKRSeOf9D5FKOLBtG9vFEp68eB6379zD3Mw07JiN2ekpFPaFQYSyiU6A/VGHE4/h
      ykef4IdvXkY+lwFnDFIq/PRPfglSSty+ex+u6+LffOs1fPVLn4dpGNgqlmAYHL4fwDQNfP7F
      5yFEiPevfITtYgl//q3X8OTF8yjkcnj9rcv4r/7Lv4lkwun6OIRSEBoDNWIdJm1QWd3zoCcT
      4IiglIIKA4RuBaHXiPgqB6NNwgxQ0wGzk6CGpiwTykC5deBAGY/ZuH33PmZnpvDc05dQqlSR
      SiSwsbWFpYU55LIZFPI5fHbzNqrVGs6dWQZlFNc/vYmnLp4/cO9u1OLD35fUXH6/CSVDEGaA
      2SlQIwbQvZPpqUsXkEqtghKCRMKBH+iVOB6L4cXPPYN6vQnD4EilklicnwWhFNPTBdy7v4pC
      PgfLNBEEAWK2jUtPnEW1VsdXvvgylhbn4Xoevvj5F2Ca7fCNRP/1eO7APTD4gRM69MShosKM
      aGwPncsn3IaRKICaDkSzBFHfGPt5hBAolauYKuQO/MxML4BaDpTwdVeWUnpCckt3Zu2bHNJv
      9eQmsVgWzErAL98d+5lHAaEcVuEsSJcdTckQXvFW1+c+2QEmCKUUwlYZQX3j4OFrkNcLF375
      HpiVBE8UIBoHw6BhwTnvOvhBOQAFr3jnAE+fUA7u5MBimc6AksKDV77b83nCVglKBtCr8INf
      Uwk3uw5+ABCN7Z7FuZMdYEJQSiKoriN0KxO5HmEmCDchvfpErtft+npQ9P76mZWEkZoDCIFf
      vjcgge7hTADuFGAkCgf+XYUB3O2bPSfuyQ4wAbTZj5OkL+hGcYGjGVBkIP5M6NVAGhwsnh2C
      lfpw1lNmJbr+u2hV+u6iJxNgTCilRor3B7v4EXDpCQVABu7LFa2yzlYNOrApj4phD24iUCMW
      CV7tRTvz0/e1R/VQjwuUcCEaW0d6D2LY6JfhGBiUgTuF4ZrSBxhEe2+hs0IPEtzJd81mqTA4
      tFvsZAKMAaUUgtr4mZpD7yM8GKnZaCUeDYRbsLJLIypDKAw6AduZLIzRpDIMqOmAmt3rAIO0
      Sp5MgDEgg9aDIX8pFXFdToPFshhqNyAU3CnAyi2Dcms09idhoFb3QbYfPJYCYQaM5PTw9xkW
      hOmFocek7pX5UUrB9TwopU7OAKOinfJ8UAi9KozEFMzUDKSTQ9iqIPTq3QtshIByG8xKgsVS
      e1QgKBv+KyfMAI/n4AWtvmQ3Hs911NyYnYIULsIRxKoGfCqY6TnQPjymXr3CH358HVtbRczM
      FE4mwOhQY8lxDA0ZQgZNMCsBygzQhE77KRnqWDc6MBPKQCjvySciRqwrzaIfmOmAchNWdinS
      99kfWhBwJwfuFPbwfYzENBAJYk0WBEZ6rmfm5zD4foDlpQV8dO3TkzrAqHhwjM0dcCcPIzE1
      8uvbX/UwGpqU2zBzSyCEdjhNoVuBaJWgQp2mpWYc1LAA0Ih/Y2gpcsYBEIjG9gQTBQTUSoAQ
      oqkYhIIYercjzNgTDolmsesZTQiBT2/cxumlxZMJMCpEq4KguvpA70mtBKzM4tCv05LhPkSz
      CCk8EEIghXf4LkBZ536h14D0m5ChNzjnn1BQboOaMQAEoVsdq3/3MLBYBkZiqrP7DULPPgmB
      RsQwOpRKKdxfXYfBOeLxWIe9uL6xhZnpg9XLnhixSV61aQxtIan2D/qFQoSBcluHPKP2+CoJ
      GTR3FCLa7NOh6ht6h1Ghf+hzhK2yThZktfod7aSPe6/xJxNgZAy+cSqlB7tpGrj68XWcO7OE
      dz/4CPOz05idmcKLzz8z4HVG4BdFhbquqzahMFNzCH3NVtXXlzq0UeHktYN2P0PEeNVV6UAf
      WNvy6FTLo1MzBmo6CFtliAGfRQkXfnUNZnohCsOMvrvOyQQYGYNnkAkBPM+DEAJnlk8hDCWW
      F+dx8cK5ocpbvchebah2z0EYgBAWVUeVDne6QYooZTkDJQVEbWOootdYkCGk3wQ1HZiZBc19
      6pLOlMKHaBSHu7RXh/QbYFYCLJaGqG/2/N2TCXAI9q+67S9pmHQiIQRffuWlsZ+lV+uiUkrz
      3esbe+oSmtWZ1zz9bmF71HijGaybRyZj2A/Sb8DbvgXu5LVt0b5Jrikmw+98olUGMx1wO613
      wBMy3HBQSkF6dQi32sm1E2qAWg54LN3Jdz9IdOO7AID0m1qEdt9AUVIgqK33VIOm3EZQWz9S
      mcTBoCAaWwi9Osz0PCg3Oz8ZVWFOBi4UFAjjWi2ih1jXyQToAhUG8KtrBwaGCgPIoImwWYKR
      nAGhRsSBfzCgRuzAvykZRtmo3qukkgLUjEMGbrQSRv2xwn0oq34vKOHCK96GmZnvdMeNrGTd
      OVMAPJ5H6Na6ngVOqBD7oGQIr3y/76qopIBfXTnQAniUIMyIshp7EfqNgTJShHLY+TMws0sw
      ktORJ9fxGfwdqBB+6Z5OmY6lWRSxXqF7g830fNf+55MJsAvtjMlATiZRbv1BYXd31p7HCAZz
      XZGBq6nKSkYda8dw8HegEFRXEbrVKFM0PAgzAEKgQoHQb0KpMCoi7p1QJyHQbsgQYih+jxoh
      rz0CKAePZca+jApc+JWVkdo1HwaC6irYiO+bWQ5EfVN/n+3vh+jQb3c94WQC7MIoMTHl1l6X
      xiNAu7rZdj/vbO2EdD0XdAOhHN4RGlYcFcJWZfhFhjBdtd7P1I2UOhDxpZTwTibAbmhuy/Aw
      U7NHpojG7BQIofArKzqzocJI5MkANeP658w8lGJw3A68g0NFO9agraG6ciz71TNkqD83J38y
      AfZglAMXoaBWAkZiWsfWkwTlkMI70G6poA/iMmhBNIta+KlfgzthR7pDPQgQbuJQLwDCYKZn
      ByL6hV4dVmLq5BC8G92yLIO8hhACFs/CSM1iIq2LgN72pTi8q0kpSL+p3dXN+J77E27pQtgj
      ufLvhRJexIadjuoh7fdJQKjuV7DzZ0BNZ6CdXEUK3Cc7wC4Qph3WBy6+EAJmpaI/EvBYBpRb
      8KtrozsXEgpmJYY2r1BhAGrYsKfO67RoxKnxS3fwsJQaJg3R2IKVOwMWSyOorSP06qCGDSO1
      0xgzeOpU66Ke7AC7oJs4pgbWy+SxrN6ad4EaMVi5ZRjJ6eFUlwkFi2Vh5U7rQ/UIgzZ0a5pf
      wy1QZmgJw4ek138UUGEA0SpCNIs6LFQS0m8iqK13KCuEELAePcK7QQ1bt4se9UM/aiCGDSM1
      u0dBuBuYnQJPFLoSuAih4PEcWCyr+4a9GmTgRtmitoox6RS3qOmAWQkQyqI2x9Ed1YPmNqiV
      AKAgmsORyB4FiGYJlO1ddHbaQvV3weJZXUjrVSAkpKMkcTIBuoBZSZAMh2hsR4JQO6sxYaaW
      DbTThyos6NUoDmbGO75fYascrfCI8tIGmOXsauIYT19IBW5HDmQcA+ljCxlCkb0DW6eCd74L
      ygwY6XkE1dWDPQSEwUjNdNLHJxMgQlv1OHRrETc+Wv0pjQZpEsx0+mpQ9rx2KOBX7h8IR5QI
      IYQH0SrDTM2Bmo6u2I4JKdwj6MM9XuBOQR/+DQtGWxdIKW3T5DchQx/USkIFLb3QUAbCbZ3+
      pLyzeD32E6DN+gxqG92JbUpnDETgQsVEdEYY4vpSwivf6x/WyBB+5T7MzOJEMjYqcI/EYPu4
      QIUBqBnfowWqZAjR2OohhUjA7KSWcd93Lnuse4KV0nFyv4aJ/SCGDSuz2JNivB9BfWvghnDC
      rSg9N54/MOHWj2f4swssloWZmgEAyDCAX757ODeLMpjpRTBzp3r+WGeBQrc21OAHdvg0g6wb
      SsmhuEVKDNFw3u86R9h4flwg/XrUASfhl+8NRkyUIfzKPcgTLtBOs8gokH4TYasMHu/ivLj7
      HmGwZzX/6NqnCIIAnu/j7Okl3Lm3gqXFeQRCYHY6kjuJYtmx8Bhs6ioMIgee6nC7nQwhahsw
      0vOPdxZINMtj0QNEYzuiKPc5EOwzpw4CgTCUWNvYQrPlIgxDpJJJeJ7XmQDUjOtehBEHMTFi
      +uD3GEAGrZHU+UKvDh71Qz+WIVA7JTnWNaQ4vGK8T53NMDj8IMBTF5+AbVlYnJ/DjVt3YBg7
      BzNqxMDj+dEeinIwczTH9EcRfXP9faE6SYLH8hCsZAh38/rY1+GJKRhO78GqlIK3fWMoXR0z
      uwxqWJr9OYw7DCEw04uQfuPHsgDWFWP0YrQdZR7LEGjkPtP914lIV21jvNCtRoprKqodJMBj
      2YFZotSId8h1Znp+cNcZymGm5sAs54EK9j50TCBl/FhOgEmBEKK9wWobXQde2CqDcEs3Xxy2
      VUcVSkBnj6AkuFMANWIQzVL3zA5lYHYKRjwf6XAOp1j3OKPN4XqkJ4AWa5WaZxO0dny12gpj
      zOhoU+4WXtK0gwl4b1EG/7AGeuFB834sqLB7toIwEzxRiMhsjd4dZlEHGLOSINyKdou9xzh1
      BNTnGzfvoFKrYX5uBjNTuvjUaDRhGAaEEIjHB+tKmzgIi5Qjhp30BMzQZ6VHcgJosVcPolnS
      SmZ9vvT2MCLcAo9lwOy0psEasZE1Z9qQQWtATR0tz2FmTu2ESVA70n3CR1BZGeAy+vAmhQ8j
      ngNG6F8YBZVqDc8/+yT+9N/8BU4tzOK1772B82eWkU4n0Wq5qNcbKORzcD0PmXQKnu8jDEMY
      hoFKtYbpQh5vvPUufu1X/zMwNkHnGKKJb8PWclgs3eFePXITQIUCQX1zaDtSJTwEtXWIxjaM
      5AxYLDXWBCDMGIpuoIQHJQXM9Jz+e6RAoQWbhtyJpEBQ34BwK5pDdMQTwY5ZeO/KR/jCi8+h
      VKngyQvnsLgwB4NzlKtVGIaBZNLBpQvnsLq2ARACIQQMzrFdLCPpOLj4xFlIqTDJ8Q/oHgzp
      Nwb+LggzIgunKBp4VLJASinIoKVVDSYQ5zI7FYVNowlbsVh6aMIZtZKwMgtQMtTCW5PQ4YwE
      bpmdBAB4xdvHpgdACIEbt+7i3NllsCPQUCLUgFU4CyipyYaHTAKtgzqrd15KdQj1KEwApRSk
      39CN55N83BHTaCyWBWF86K2XcAtWbvnQc8Pw0FkjZifhle8dmbn2cQPhFuz8GQARm7dVjhIG
      +xc1ohmhhEYq1IhspKxHIwTSK/+EBz+gBz+h2FEeOBwsloGRnB451x7UN49Ai1PBr67Cis4U
      jwt2v9fdTUhKeDohgqiLrFnUfQS7F7soojj2E0Bz6Y9QzElJUEuHD/1CEsIM8MSUzsBEq8fQ
      kPLoTOOUhF9dA7dTXYWgfxyxvzMM0KlpYtiAYWsbq9p6f2O/o3zAcaF9eNcnEvP3g/TqsHJL
      gFNA6Nd1V5UKodOXJpjlgJrxPSlHasQjV/QhnGKOWEhXCRdSjCYl+CiC9Dn86/rM2qHs2uM9
      AYT7gAwbFIL6FszMIgxjMB4OoRSGkx+CUTqBusMACP36A7vXwwbtI1GvleEO7647thNAKYWg
      h6b7UUD6DSjhahvRAcFiGcjAPTQlq4Va2VjN7gNjQjSP4w7CTBDKEXp1SL8JBRV5I2txgUHP
      Wcd2AkCFkA/Shxfa+dHsMwGUkpFHgBtVH5V2XzedA83zbVArCSNRgFe8fXQP/hiCcFM3t+xK
      fYYABDNhpuchxWDh5rGdANqE+sFu49JrQCl1gOOv9WgqCN3KIXUDoukJ3NJnh8hgOgwesC4n
      ZT/2O4EM3K7nLxX68KsrIGSwoX1kE0DzdEJI4enunag5hDDtAKhNjXsXRx5GMadjMBcRpVRk
      Ch3UNgdsntGpNcYMbaMUldsfRouipnocj4LY5EH6Jh+U8AE22OI58Qmg5UVqCN0KpN9Cz1Wc
      8ogunNEr5q5Vt23s/DCgwgDgZicDNVLHkVuFDFyYmUVQbg5Ev76/uo5PPr2BF59/RtOhTSNa
      RAAQQIgQnufBMAwknHh/To1SYLH0j+0EINw8tA2SEAaFw8OgiU0AFRG1gtr6YCueFAhbZYSt
      sqb0Jqb2FDaGYfjdvbeCdz/4CP/ez3wVlnkwNzwMlBRjDf7OdUIffvkerOwpDBLKbW5tY2aq
      gH/3nR9gbWML584sgVICIULEYzE0mk3kshl88OHHeP7Zp/D5F5/rez1mJSAGkE1/5EA0Bfyw
      KjwxbNABDsMTmQBKKe3GMWJ1NHSrCP2GLud3dB0Hj/8X5mexsVXEv/2L7yAMQ2QzaaRTSbz+
      5ruYnSngpeefxfLSwoBX02HPJBpLdDy6BhYV2vrh4vmzeOvy+3jphWdxf2UN+VwWUkrMTBfw
      9rtXsFUs4YXnngYhBIvzs/0vRghAGLiTjwz0fnzA41k9uetb6DdGmOmAGBb80t2+57axuUBK
      7fg5jQ8CM7MAajrwircG7vZXSuHm7bsoliqI2Rb8IEAQCJQrVRTyWcRiNp68cH6gaxmJaZ1+
      naCe/ijEuXFAuA07fxpKSXjF2z82GkGEclj5MwChfXdoasRhZhdBCIUUHoLqas+awFgTYNyV
      v/sTEVjZJQT1rYfiX6tVGSasqvaADSpYLAMzpXeJ0G9GEumPPozUHHgsDUC3tQb1zWhh2avd
      yqxElHgRnayekkInYoguEhLCdMZunAkQurUjsQbS9j8Pq7/10a+imumFDj1an2c2ELaOiIP0
      gECtJMxIy6eNdrJEihZU4EF4tUOpKYQZ4E5ea4SCjC6Lotp2m0cAXWx6WBmMg4P/te+9js2t
      Iv70X38LW9tFlCtVuK6HRrOJaq0Oz/chhIDvB6jWaqhUu9A3yEQ7QXqDctBd+vhtz4NeLvOP
      AgjlMJMzB+ozhJBOylq45YF4WSoMEFTXEFTXoKBGPwSHrerIzSSD4GGkQQkzur6nXCaN19+6
      jEw6hWvXb+DDj6/jibOn0XI9UEpQrlRx6cI5rKyuY3lpEZZpIJ3ae/Cl3IAKR+lfHQ48ltHN
      HrvfF6Uw0wvwSrcfvQIZIVrFjR0cqkophM3SSAux1hQa0SKpXSA6WjwgD94OSM+wa3FhHolE
      AgknjjAMwRjD9FQeQSBQrdVx6cI53Ll7H88/+xQKuSxc7+ChUykFniho442jegfM6CnXSLkJ
      MzUf9VU8Op5hRnK2p9iX9BsIhmxK2v/6kc4AKhRwtz4d+caDQqscj2YXNCxYLBN1eQ2m5Dws
      CDNh5c/o1r0j6tgyM6fArN72QFpCfPuREc5isYw+qDIT1Ijtjf+lhFe8OXYUMtIZ4EHF50oK
      7XJ41KAsMlnoH6evrm3gez98E6Xyzu5X7RbvdwGhWsLDTM2CdGnkGBc8MX3o4PeKt/TgJ3RA
      I7mHB8JNhK0Kguoa/NIdBLW1PYrch/OyBsNoE2BXdTEIBFzPQxiGOuMQCARB9zhXKYVypQqp
      FFzXg1IKzVZ/4wgeSw/shj4qjOSM5iYdclCU0fv7zvffwNWPr+Of/E+/g7/4zvfxgzfexn//
      T/8ZWn3eS/uwRiiHlT010UMpT0wdqlTd5mS1YabmB/Y4eKAgFEZyJlLd2zXgW5WOiscktF3b
      GO0T2BVDXrl6DfdW1jAzXUAum0a5oh8sl81gY3Mbp5cWcefeCuIxG5cunsefffPf4etf+wo+
      vXEb04U8vv/6W/jiF15ANp3GVrGEhTl92s+ktf2oUgpmeh5e8c6RdFRxpwBu63tRbvU9d1Cq
      V83zZ5bh+T6ee/oSFhfmEIoQr7z0OTDeewfZk5lhhq511NaGtkPdg0hNrt2m2Q/ajC8O6be0
      U4qVgGnYCCorx4YzRLgFMz2vP/8u30FnAstwIlZSwASoEKZlYGa6gNt37oFG2QelgDv3VnD1
      4+vY2NzC0ilNQ2g2WxBCYHNzG7lMGlc/vo7zZ5fxyfWbEKHAuTPL+Ojap5iZLnQmAIgeMGb2
      lDZCmCC3hTuFPSEWoSzy6O2+uszNTGNuZrrz9xeee3qwGxF6wLqTUAYjNQ9m1RHUN4d8X9ry
      hyemDlj+9AOzklAyhPQb8Iq3wKwEjPQ8Qreq9Yke2uGYgMez4E4BhFKdKevSbqqED9EsRbvn
      3nPhxtY2isUyLl04h5brQimFeOxg5FCt1pDalaEb6RAsmqVOK2AQCAQigBAhDGNnPimlsLlV
      RC6bgRnJf5umgbv3V5HPZsA5RyACMMZQLlcRj8cQs218cPUaXnjuqWgyEdhT53doxTLUqsnj
      VoijbbZdVdwNGbQm3rzC4zkYyemeP28bu4lWWTNou1aNdc6bWUkwOzlUU77WIVrtevgmzISZ
      0QtUUN984JIqhNvg8SwIZR3WbJvCIJrFjnKHVtDzotcctID60dvv4blnLuGNt95FPKYPzLV6
      vTPWbty6g7NnlnDz1l0U8jlk0ilcfOLsaDvAbtamYfA9A383lk8dJKAtLc53/mxZOi6Oze70
      dr70uWd27kN5Z/DrvzOYmcVoxdoa6RBEzTh4PAcQBil8fTjdfQ9ug9npyaV5KQd3cl1/pC1+
      BKRX3xHpIqSzuHUGvJnQn3l0kB4GbR+0XgNbhT6C6hrM7CmY6QXIoBXZwz4AGkokGtybsEei
      1G4OSgqI9qDvUcu4cvUT1OsNCCFACUW92UQ6lYRt2/j0xm04ThymaaJcqe4Ya4+UBpUh3M1P
      cdTpSWanYaRm9SBxa3qQSNFZEQBEpfBDOq7acX03DSBCQQ096Jmd1OJJMoRXujMBEpkm9zEr
      ceAnMgwgGtsHuCxdr2LYMJypSJliyAkgQ7jbNw+tkprZpU6+XVMM3KgLrjq50IiwqNjoD31N
      wgwoKUENCzyeg1++N5FHGu0MQCio5Rz5dsksR1tfNos9dYGoEdP2otCTQSt/KZBoksjQj16P
      7h9621fWb0I0izCTs6BmDGZ6YcwzB4GRmj0w+Nu2rH51bWCCnApc+OW7HVGuYXyKlRSDUQSE
      C2XEoIQXNfQ0ocIwWjSid0RoR7p9ILQVug1tFi5D/1Aac8/ni3Z7XROI96zaD4uRyXCh14Bf
      vjv2A/QE1a2TA23FRIdGu+0vd8Rnhy1s6YHLY2ktylVdHT4coBxmj8EfupWxqsHUSkSksMEm
      gRQevO1bOGzQGYkpyFBElfAev0sYuJMDM50dtqUMdyYEoZ2Fp/MfZRNnDVPTAWHGRMiSI08A
      pRT80t2xJcZ7YtjGbsph506DMK4HWqs8sgvk7tClnXMe6MxBKHgsAx7PdeWu6EXjHsYNHVks
      rUVeBwiHlJLwtg+vmA6zovJ4DjwxNeD9R12I+oNMqNttLDq0FB684q2e4cmoGC/PW3UAACAA
      SURBVMhRpQvaPHgZuFEmZ4znohx2/nSnWKTaRhxeA1K4nRUQSunDqp0Gj6V6FpfaldhJEQh3
      U577Q0E0x1kMusNIzen6ySGTIPRq8MuTp8xrjE9dH0uzmnILRvKQ9rwhQZgxlDjVbrQZfsGI
      ceYeSAHR2NmyCaFgZhw8nt3R41cSQGTWUd+AV7qLoLHdtQletLqpFo+OoLE1kFk3QMCiXUkP
      mH0/HVFMVzS2DnWjUTJEUDsaynx0BxA6hhgwYePbpDI7BSM5M+5lAEQFr8yp0be2SJFC+gcP
      50opbBVLkPLglyZE991GuJXOl6xDoRrc4k2IxnbXZ9QTYRNe8VakiNG+t0TYnGxzjxLewGcT
      Qgh4Ygpm9hRYLA1QDsJtGKm5PRXqoe4fBofeX7TKR0qZBwDCjY648VCvYwbM9Oz4E4AQvcKY
      6YWxmj6oGYeVXR77dC96HIw2Nrfx3e//CGsbW7j8/ofYLpaxvrGFP/zTP8f3Xn8LH13rwm6V
      IaTfis4UFU0lHuBcosIAXvluJO4FqMA7kj6AYWgUhGjRLhXqrJASrp5EEaWgzdMKosUgCAJI
      KbGxuYUwDDv/tuf+fVpH23r9Rw3pN2E4OVArgW473EEQMDsFK7usD/WTeAhCdGneMmyI+lZE
      JRgwBKEchpPvuK4rpfYUg4ZFr90jmXSQSiXxwx+9jWw6jXK5CqkkFhdmYZomwi47AwBI4YJQ
      OnwMHbmWWPkzCI+IayOH1BqVgbtn1RbNUieGL1equHrtUyzOz+ouN8/HuTNLuHrtU1imCdM0
      IWWIc2dOgxAgm0n3ndQycI989W/Dr65BCQ8slgblto4ChLc3XUsZmBEDi2d3qNWhP1lhLMoM
      nUJ08lrqxKt3L3pQrt0O7ajKeaCDyRjdy7fH5DENE+fOLGFuZhrFUhmWZUEqCRlKJBK9haZU
      KKI4doQZqaTWr9m1M968fRer65uaPMd6b8D1RhO2bYH3EcBS4U7Td9ef7zojEEIO/h4hnc9L
      SgnbMnF/ZQ2X3/8QX3jpeSgF1Gp10FQKvh8glCE+vXELqWQC2cxBGsluPFBBg0gIjNsZUDMG
      Hs92dFxFswzp16FkiNCrI/SbUTEtC8rHbIo//Lm0jemeXDFlmuLQJ3sQ1Dcj87ghQTkoNyeq
      6kC4PaaqM4lYmHpAvPPeFYShDi2KpQqmp/KIx2PwPB+MUni+j3ffv4oLT5zBbDRZ4zEbSgGF
      fBYrq+uYn5vB8888CRAKu3C+s4C05ShDrxHZrXpAe2ejFJSZejeSQjNJk1MRzViHeWvrm7Bt
      C67rIZtJwzB0SlkBmsCYzeD6jVu4cO40LMvqy3HySncf3CSgHHbh7J7aiBQe/MpK32o+s9PH
      0yNMhYEu3w9ZLudOAUoGezR4lFL4/htvY2Yqj0w6jXQ6Cd8P4HkeSuUKLNNEPpdFIASklIjH
      Y/vU5SagErGLYn39s5u4c3cF2WwajFJUanWkU0mcWpjDd773BjhniMViOLO8iGq1jq1iCaeX
      FlCrN8E5QyGXhYLCwtwsQJmeAITsUCsGpC601fhEqzJyjr5fB5q7faNvX/fq+gay6TRs20Kl
      WjvQQz0c9pEmwwBe6e5AyZRj2BGh6wBGojBUCo1wC9zJ6dBr3wSI2Rampwr45//yD3Du9BJm
      pqdQrlTQaGi5wXsraxChwNraJrLZNL7+tVd3XZh0rXNsbG4hl83gzXfeRyaTQj6bRRiGmJvt
      zfoEgCfOncET584c+HelFL7w8vPIZTKIxQazPW2nAIVbRVBdH5haAeyo8fFYdqTea8JtAAp+
      ZRVSeCCUgppO1JTPDq0N3bpzH6VUBVvbJUApnF4+hcvvfYizZ5awvrGFdCqBdCqFq9eu4/TS
      IsIwxEufe7bH1Xb4XdpXYmvgTOKxnAAgRJudhSFE8/BQiHALZmYxytUnEOxatSmlyKRTWFvf
      xBdefB7zczOYn53GW5c/wNOXLoAQAtvW1OJkIoFcNrNzXcoBxqG6NF9UanVk0ilIKdFquaiw
      Gnzf7zoBCLegDjkIE0L0qj4EqBmDaBaHdqvsQIYQja0o8zbMBCAgwB5CmoLOyIStss4I9snI
      BIHA+vomGvUGlk4tYHNrG2vrm7h7fwWJRBxnlhexsrqO+yvXcW9lFalkAhub230mAOncTkkx
      XHbsOIZAbbSJYz0bRggBszMwEoWd7W+CUo08MaXd4LuQ/u7eW8H9tXUQECQScaytb2L51CLO
      n10+eJ14DqHfmLhEIbNTE2sNHJh6QrRvWr/38kAdcfQNYU+dAyF0aLG2Yz0B2tA55SpEc1vn
      sQkBs5LgiXxXp0Ap/IiiMTqNlzADVu60XmHHtGoyUnOAkpOlIxAabfuT+vqIllT36j3Tm4Tb
      MJz8YEzWHqHjUYAYtq4hEbKnWWsQHM8QaBdUGGhpv91meRGrUgYtGIkpUCuxJ6ukNXBmtb3q
      KCBUMy6jFsmxJgAhmmdPma6MTmoXmHj7oqZ0WLnTCP1GRIcW0J1ohna7MeO6f3iQs8YDXFeZ
      sdMnMQxVHDjmE0AKH37pTs8VSYU+/Mp98MQUjHhuDzGLWkkYqTltlTnMl0EZzPR8R4mCcBvU
      iI/MemV2qsO3MVPzWp1tzME7zvP0gwxakMLTraJd2kUBDFyfIZR30rJHjd2kQN0vPHjmbmwq
      xFFBRZXUQSgEor55oCxPCAGPpWFll6KMxeGgpgMrt7yngZ0QonPdI+joEMphOFM71zf0YR1D
      rlK7weLZrlTrSeGwVtBBm/AJt8BjqUk8Ul9QI7bn+yXcAjUHJ1Me2wkQutWhwoWgvtmVHUmN
      GKzcsrYrspJ7+UpR8waLZWBml/TvdDlTUMOGmZrHYFyTnWub6YUDg5WZcT0phxXHIhQ8Ma0b
      VyYt374Lod/sy/JsGwAeBmanot7rox1i3CnsCX8JIeBOYeD7HssJMIrwkRLugUyRUtq0TtQ3
      IRrFKBXZ7jinoNzW1UynAHZIvy2zk9p0YYAVkHALVnap50pEDRtW7rRuKjlMnIpE5K3cMgwn
      ByXDoxXYlaLv9QmhMBJTPX8OoENzIcw49HfHAbNToGYcKhQI/QZEq6zJkDKMhML6L1iEmccz
      C6SUgrv12UC9rLthpufB7FTkV9ZAUN8aLBVHKJidhOEUDh3gSkqEbgWiVdnHcyIghgUey+i4
      f8AVSDfatHQO3WvsPC9l4HYaLJ7ZsyuFfgt+qbtsy3tXPkK1VserX3y5M5lX1jYwv682cX9l
      DS3Xxfmzp7tex8wuAUpFbp49VJndqi5U7ovxqenATM11XjdZB6EdEGaCx7MdQ8LuMX+PswCh
      mgZBJ8QGPRqM0DitVKcJYyhZEyURtioI3bru5e3TaUUo1T5VsbR2w2xVIEVLFyNFREfwGlrO
      xDpI9Ot6+1Bo4uDukE+GEM0iQrcaNbRko1pH78+lXKmi2Wzhg6vXIirzNpRS2Njcwtr6JmK2
      jR+++Q5e+twziMdiPSdAUF2DCn3ttmInEZA4vvNXf4VvfvObePfdd7G2tgYhBJIJB2eW5vDv
      f+On8Av/8S8gN7N4QMSWEN1jrZScqIiCkmKAdOfOZ0VNR+9KUa85KIe3fXPyO8COP7APJbx9
      jdNEx91Uy2PQKJ7cP0iUUpG31XCFFDO9oDVwxqQf88S0HnBdQqJ2WBXU1g+36qQcPDEV7Qhd
      rhUG8KtrA5HGdAOHPod4xVtdf+fd96+iUq3BceJotVoglCKXzYBRikQijlbLw6079zA/Nw3O
      GC6cP9v9ZpEqW8vz8X//yTfxW7/9z/Dpp5/1fb58Po9f/dVfxa//+q8jm93RKW1LrMigBdEs
      P1TXShbPwkhMa+5U4MIr3prMBNBv0kPo1aJt3MPAK3jk1cQsB9RKdrIMQX1rOJIWoZoJOiHN
      SK0MkdnzbzvN9sPRo7WcyV6HExUKrT00zIAgFGZ6Dn55Zaj7DwcCM3sKH73/Nv6LX/01vHX5
      /aFeffr0afzu7/4ufvqnfzoysCjubVGlDAQjGIVE42Rchil38uBOoWOsMaZJnm5BFM3ShMre
      BNRKaK42MyNG6IB55EmbaRACK7vc6f9td4UFtdEkTVgsG2n66KafUX0CCOV6KB3RQZgwEx/e
      LuHnfu7nsL4+WuXatm383u/9Hv76X/tPurJ6zfRCxNnpF7/vPA+zU2BWAl753kTet5lZQOg3
      ETZLIyrDKQXp1fQh84i2NGrGQY14VIU9RDltQiJJ3Z7BzJzSW6bwtNLEGJOsfUgPvfrElM0m
      jRv3t/H1n/tFrK2N52Rj2zb+n9//P/EzX3zqwM+M5AxYLNMR4Qq9mg6TCQU1YqDcjASwtDkG
      IQR+dX1iRn9tw43QrQw/AaTwEdTWH1CzA4kk8cIeO4HmrwzSoD0qzOwSqBGbiLMLYYZ2iSnf
      fygWsIfB83z8B//p38EP33hzItebnZnGD771R5id3m1yoguLevXvdlYjnV6FTiYpFHC3b0x0
      h28vmgPXAZRSEG4VXvH2A/zylM5GUAoWy2rOT0RN4PFclBsvHG1hqFWJBGzHf88qDDqyg+Pi
      KFwf/+Uf/KuJDX4AWFvfwD/5p//bTq2DUBBuIqht9ElUaJ6XV7zdOc+FXn3i3KeO1OIgO8BR
      qXsNBaI5Ovs7kESr0kddeAKImvYnxeTsJu09CrhTmJhNEAAEocIXfuo/wrVPrk/kem3E43F8
      dPVDLM7PQgpXN+4MeIAn1ICVW0ZQ35h4HaGNQ3cAreu48XAHPwCoEH753oFmh2GVEYbGrgYL
      pVRHNqQbWi0XxVJ/KZCJsUEJ0WnRSVANCMN7n6zgk+uTNz5sNpv4gz/8IxBmDnSe2w0lg6gX
      pPskrzeaWN/U41Ip1d2fuQ+oEQP7zd/8zd/s+QBK7agzHxOEXl3b/bQNklt7c8thGOLNd95H
      OpXc09sbBEFH+UFKiXfeu4IgEEinDrcXUqqtlSPw2c3b+OzGbXCDo1iqIAxDXPv0Bmzbwlvv
      vI+W6+H1Ny8jFrNx594Kvv/G20g4cdxfWcNUYXKGfx2jDCOG0G+MHiJQBjOzgP/jX/w+Xnvt
      ta6/8uqrr+LixYtotXTY8tRTT8EwDDz55JPI5/PwPA/nz59Ho9E4oB0EAIwx/NIv/vyeVtVB
      oYQPBdmV0fvJZzextVVEIARK5Qpef/My6vUmQhHi9r37WFlbx3sffIRctnubqZGa7V0Jbue8
      x20GmTwU/MoKrNyyrujt++Jdz8fG1jYKmzl869vfxbkzy6jXG7hzbwVPXTyPUqWKC+fPYnqq
      gPWNLTQaTWxsbcPgHLGYjVqtgZ989ZV9t9z58NfXNwEQvH/lY/i+j4Tj4Pa9+6hW6zh3dhnv
      fXAVC3MzuL+6jnff/xAvv/AcLr9/FS3XxVOXnojIeGoClGj9hbbJdaMkJqjpwEjOgHITly9f
      7vl7xWIRjDFcvHgRYRhCSomtrS1YloXFxUVcunQJrVYLt27d6vr6K1euwKuXRiSeqZ6daqtr
      G2i5LqrVGkIpYXCOSrWGz27exumlRTxx7jQy6RQ8v3umknK7zwQQ7hHrOo4BJfUkyC4fCAE4
      o4jHbFz9+DrW1jfx9KULiMdjCITA6vomypUqXn7hOXz/9beQSDioVGvY3NrGi88/g/ura9jY
      PDjh23G7YXB8+ZWXsV0qYSqfgx+tdk9eOo90Mgk/8PGVL77c8Uq7cO4MDIPjqUvn0Wzq1ZNy
      E6BsvIwS5SDM2vVXE2ZmEdJv6Eq4v4v0d/DdRNo5OS0zHu1+q6u9z1FtZbgrV64gn89DKYVi
      sYhyuYyZmRmkUilsbm7CcRzU6wffV61WQ71aRsqx8Pqbl7F0agFbW0VMT+VRrdWQTqU6K7Tn
      +ZBKIuk4qDUamC7ke+7Q3/ipV7v++27kcz3cMwkDKO1+CNaS2rceatl6ELCoUnvUEnzcKUzs
      DNQeeON4K3CnACNRAKC/K+2So21QlQp3XHOi3Drhlg4bjZjm6nTRZXr55Zfx9ttvj/XeeiGV
      SuHjt19DOmHj9//w/0U+l4Vtmfjg6jWcWphDwnHgBwFKZa2TFAQClFJ8dO06/s7f+htwEonh
      pPIHADUdmJnFgzuAjvuLx37wA3rgs310hYmDMPB4RssITqC7idlJ7UNmJfe2eQ76ONwCj2c0
      Ec+r6fi/3+BQEipoIQwDIBQgICCWg/1U4Uym/+f4pS99Ce+++y7CMEQsFkOlsjeen5ubw9ra
      XjPrNuLxOOJOEmHo4me//jWIUCAQAmakyVSr15FKJiBEiJlpPbHr9QZSqQRMg4Pbaf35T5D+
      waI22oMhkBTHMO7vjUnk5/uBmXFNaotnxv5cqOmAcLvDkJSlYDgKSVQp9Yq3h09/ShFxtWoR
      lTgHFtuhbT/11FP4y7/8y64vTaVSeOKJJ5BIJBAEAebn50EpRavVQhiGcF0XjuPgj/7oj7q+
      fmlpCU46h6C2gUxmp0tst+XsfmQzaZyKDBXbxc5RFoyuoBws8obeMwGUUgiaRRwd0Wry0ObZ
      E1Bv6wEW9cbyeP4gZXkYENrhAum/MljZUwiqa4N/sRNSXFahj6C2BtEqwUhMg1kOXn31Vfz2
      b/921993HAc/+tGPYJoRLcH3oZRCtVrF9vY2lpaW4Pc4aALAT/zET4BZKU2KG/Lwr/3ATPDE
      1HjZrl0wnB0ZnT1nACVD3Yjy0AyTR8XRTADCbVi55c6glcKDV7o7AiGLRDygg30G7eadXofX
      HSrIUX0nBNzJoeoSXLh4EcXiZFPelFL84Ac/wCuvvALRKCKoD5FY2UdIFK3yWP5qgE4fG+n5
      zne6J4UyUUvMBwoFasQnfE2yZ8UGtCOObrIfgoYQ5dl7NdkQQsCsBMzMKdiFc7o3Ob0AM3MK
      Vu607r890u9EV/kT3MWv/M1fnvjVv/rVr+Kll14CoPn4g5/ZCIzkLKix81kzOw0+RosltRIw
      0nN7G3baO4A2vbszdjPJwwKP5xH6Y4Qo+6+XmO704IZuNdK/ZLq5hRpaMKtV7r0bEKpJXU5h
      JBUHJXXl+0F+H2tbFXzpZ34e6+uTSX+bpolvf/vb+PKXv7wjkaL0St5xge8CwkwYqRkd/uzL
      VrWZyH5tfYjMEAGPZ8EThQOtqjsTQIrI/PrRBOE2zMw8/NI43r4aLJ6DkZiCkgL+AZVhAiOt
      DeKUkpB+q+PyLoWnD7WERp1uHIRxUG6DWvGuihPdME6/wLj4k3/9LfzK3/37PQ1DhsE//I3f
      wD/+R78RGVa4O1k0QkEidQ6tHyS1fwEzQS0nytD0L5upUOhFyK32X4RMB9zJazWLLvWEzgQQ
      bhXBqEpqxwIEduEcQHQ32SAO7Aeu0MmO6INvz0FIKKz8GdAoPg/dWqT61i+jo0MdZqcOKNnt
      xqQ9dYeFUgr//P/6Y/y3//h/QLk82oHbMDh+7e/9bfzmP/wHMA5zzaIMPJ4Hj6U7B9NDnzEU
      CIOmtrAK3CgVvDMJCDO0dGY8e6jIQWcC+NW1B+LpdJQwM4sdb18V+pFefg2DNNTwKD5trzxK
      htGO2P21RmpW9wmUV6DC4cIuaiW0ckKXL/y4LETvX1/Ff/53/2t8/PHHQ72uUMjjf/7v/hF+
      4T/8xkA+wm1QI6YVvvtMAimi79SrDXQuItQAd/Z+rwd+R2k80vF/GzwxBcPZIZwppXkkoV/X
      nlXC06JPSkUev3Kn84gaIFx3CulVQ+kJ0OOD5k4eolUZuUWv2xc+aS/hcUCYCY/n8D/+1m/h
      d37nd7C11b8SHo/H8cu//Mv4b/7+38N8fjTnyXZ1tlvcL5olXY0fISFAuA0zNbtjb7v7Z+0J
      4G19drSCSw8AbaPsXlAy1B9kv8MrtJsid/JaKqVXjp6wsSvDzE7BSO1kJYZVNj5qGMkZEMqx
      tXID3/r29/D/vfY6Lr/7Lra3txEKASeRwLlz5/D1r38dv/RLv4RT8zNjG5TvFyNQkar2KEzS
      PSAUZmruQDauMwHczetDzS7P8yGicjZjtEMA6wff19abbUOKblBKQQgBwxjeAJlaSViZha7X
      lH5D690MMcmpEYMMg72ThRB9cJuU43tmAcxKaimY7ZvHioJCmAmlwk62xcwuQQoPrcomhO/C
      jjswYjsSiH5lBXLMam27bZQQGolqrQ2n8dT/6tHnnQAAKCl3VYKH3FquXruO+yvrKOSzmJ+b
      ge8H2NouotFoYnlpAcVSBYsLc6jV6tjY2sYXXnweb7z9LjLpFJSUyGYzuHt/FbV6HaeXFjEz
      VUCtVtcWnb6P6UIejhNHNpMePJbs8h52pEyGX1ll0NIHKqcAJYUWVYr6gyeFoL4FaiYiOfLj
      M/gBHMh+icY2pN+AQQHDNgGphcCU8GEkZ7oalA9/zwAycMHMOMJmaYKDH0Bk6aSp9CakcEfX
      BrUsE9NTedy5t4If/OgdfPTJp/jok89gmAZq9SZ+8MbbuPrxJ0gk4pjK57BdKoEQAtf18K3X
      vo/3rnyEfDaDRDyOwA/w+puX8fZ7V5BKJfHeBx/BDwK8dfmDoQ5S3SC9+lhhheag1GEkpmEk
      CvrAO8HClBKeNqw+Yk7TqKBWEtwpgMdzPfsNQq8W5fUnU42XfhNSeAiOogtRaeXAtsDZrhDo
      k6HegAhDhEIgDCUUlHZe9H3kMmm0Wi6arqutNjmHVAqUEEgpEUqJer2BmG3DtEyIQDMDWy0X
      qVQCzaaLZMLB5tY2pFI4tTA38DMxOxn5U7Xfq4BbvDkRKm1b18cv35u4KABPTA2thv2g0HZf
      0XF4nyxhF12m19+8jFOL84jHbLRaLkAInJiNlut1lOqUUkgmHcTsnQMqs9Oa9zQp8lsXmJlT
      CL3aTghECIdSg8e1nLE9Js7OLiaCaZpIp3dYf+3fYozBAGBbO2cAg3PEAKSSOi5rfxAL88MZ
      xgHYI33edgucFI88bJXBY5m+1p+jnl+k3zoWmZ9uUEILAB96dto3+JVSuHn7HsqVKjhjSCYT
      oJSiUq2BUgohBJx4DOubW0gmEnuaW1ToH1D4a7ZcfOd7r+Onf+LLAIB6o4F6ownP85FOJSGV
      RDaTxvtXPsJ2sYzPv/gcbNtGuVJFPpcBowyGwXclHIrAbjq0Jl0dzy9hUOwpeig5YSUBBdEs
      6kNhD/hBgBu37qBcruL00iL8IEDCiePOvRWcWT6FTLq7YYSukh5TDlZkdE6ZiX5PuF+cLAwl
      fvYbP9lZEIJA4PpnN3H29ClsF8s4f1aTDJPJBHL7XOe7qcVdu/4Z7q2s4UfvvAfTMFAslcE5
      x8x0AcXbZbRcF9MF3UyTTCbwr/78L7EwN4NPb9zCU5eeAGccX/niyx2fExk5xu8qhE1Oeeth
      oV0IA45ILqVdTOkxWD3fxw/feKcT6nmeh4Tj4MatO3ji3Gl89ctfGOv2rZaLze0iFhfmQHed
      jXSfroJh7OUcKaWwvrGFTDrVN/N2GMzsEgih8Ep3ur93QmGkZo+0gLddLCEei2F1fQPFUhkJ
      x0EymUCpVMbMzBTM9q6rFNLpFD7+5DMYhoHN7W0Ucjk0mk08/8yT+56b7KJCHLW+zpFDUyHa
      xLOHUdluh0ClShW5TAaBCEBAUG80kUw4sKweXKABdU2vXL2Gz27ewaUL59BstXBqcR6NKAwo
      V6rIpFOoVGuYKuRQqzdQyGXx2c3bmJ+bQbPZAiEEuWwG91fXkM9lUanW8LlnD0oX7oeZWQQ1
      ncgTYP3As3KnAO7kJ5TGPbrejm7oLBltU7hHFYSbe1iX7e34/soabty6iy+98iJYFINm0in4
      foBABGi1PGxubWNjaxtfeeVlcL73HHHj1l2cO7O0c6M+frqEEBiGgelI/qR9rcNWX616PJha
      HGMU167fQMy2UC5XUas3MDszhUazCddzkc/lcPfeCvwgQD6XgQhDrZKwfAp//q3XMDtVwNrm
      Fl58/pmeIVmv98bsFCi3dwS5KAOzkqCRuw6PZ8YWUqCWoz+LQxaEUEp874dvYmlxHjPTBcRj
      MXiej1CGiMcGHMuE7j0DEG72PeQdZ+w2ttPQqwg3OHzfx2vffR2bW9u4cP4s7ty7D9u2YJkm
      Ll04h9X1DayubeJ7P/wR7t5fw1Qhh3wuAycex9RUHv/r//4v8Ld/5a/BtiwwIz7h7IT2PB5k
      Apw/dxr5fBa5bAaNRhPxeAxQelKEUoKAgFKKK74Pz/MxNzMNgxtIOHGYpoFf+eu/ANM0Ua83
      kEmnQOmAKeYo9CNEu+BQo3srI4tltHPOyF1zDIZTgOffOfxXARAQ3Lx1Fzdv38WnN24jm0kj
      l83gw48/watffBkvPv9M32vskUXRjRkpCPGQFeBGRLvHs4NOvK5AGUMyEYfjxJFJJzE/9wJ8
      P8DG5jbisRimCnlMF/L6wGaaOLt8CpVqDUopZNMpXDh/GkKEgKVbJNtMxEmgrYI9CGzL6vTR
      7hb9AoDdeacXnnu68+epQq7z52x02HTiw+32h/qYtX8v8lf2SndG+HwIzNTswOaBSilwzjA1
      lUetVseFc2eQy2XgeT6ef+ZJzM4c3jhD+D6PMBkG8Lb6O4EcR+xvXQSAoLYeKQmMhnqjCSce
      O1CIswrnxi6u7YDo52bG8W1FJVSfrQakKgM6i+NX7g+e2o0O0czSPJ0HRQnhiam9lWBCeech
      HiXweObAQKXmeC2SCedgNxLhusmFxTKgB0Ku4cGdvGYoRg00xxGUW0MNfqDtgrkctT/2D7Oo
      lYCVWwaPbKQIIVrxrwtu3bmHWr2BckWnt8uValcZlvbPSuVDPI+Nfcpw2mM1f6QVuEmj7SCy
      H9R0+h5YRwGzdry+zPQcvNK9kZ1xmJ0Gj6jbhBAwMw5x1EK/I2DUhYRQDjM1C+VoNQ3dNSe0
      kJcUOoaPzDBkoE0GCdeqE9Ryuo7BUrkCJx7Dx9dvYHu7hLnZacTjMTQaTXz7uz/E5194DqlU
      Au9d+RgvPf8Mbty6g6VTC7AtE888dWnvmYew7tKIhFtgscwj0xyjfWhJxnfUggAAD3xJREFU
      RxkN0JOCMAM8Nr6WTweEgsfSu/7KYWVPaZO7oRYMEvlU7ZX8o1YCOEYixG2MGxG0m42UTEO0
      yrrWJAUUAOXVIHedl7XoVw7MTCDokhqem5nGux98hItPnMUTZ0+jWquDMYpcJo1XXvocTi3O
      Y2F+BpVqDcmkg4sXzsE0DGwXSwcO/NrBk/WQRpRCeztNWI5u0qCm7h8VzdKBmJFw7dkrmsWJ
      0Az2N9u0oZTSZLDG9uHZj6ipnjILIERbAXGrQ/31ireOFR9o99lKtZuIZKg5Y5SBMD6QH7IM
      XPjV1YHfGzUdEMonwgRttVyYptFRBtcgsPKndXjXyyAjdGsTpf1OHiRK2x5iVcrMsQ9U1ErA
      TC/0ZaYqpaCi/lRtDxtG4S+JtvgeB9xoUvB4boKH68nASM2BmY5eud3qwc+RcjArofVOefcz
      jAxceOW7wy+mkVXrUYDFsjCc3A4btNsvKaW0M8cYmZQjxRCukOOIS1HTgZmeH/ogqN3UKwhq
      m4N1jhGqXV9apWNBjCNcCwQM9PyEauO7fX7IusXz9vHqc6Bc9xpEtkt9LZIepjxHPxBuD334
      1JTj2hCv04ppOlYfrm1iHEupSexYkwA1YkP3iPPEFHg815kEk+CXjfJd978g2UP77/vNksiG
      Z9yU4iQxqjKY9JvaVC89D9KlObqDKCSxckvgzkEhpUEQupWR5dSPw+AHoSMJJIj6ZoeBq0Ix
      oW4uBSM5g8PSqYeCsgODH8CgJnkSfmV17H7P8UBgJKfA7NRoAl6Ewp46v9NrWlmBUiGo6UB6
      jR1K8u4BH/X/Um6DmnEwyzm0KirDAF4Xc+hRnvdhFMY0rVlgZEIaZbBzZxD69Y6Op+t6+Ksf
      /AhPX3oCALBVLOH00iK+/d0f4szyKaRTSTCq6RxhKBGP2Zgq5MC5/qyt3GlAKfi1tZGSBCyW
      BmT3BpuBlrd2iZt3yYI8EBAGMzMPHs9FX84IiHjtbVAjBiUlRKOobUvbg03Jnf9kGJk5a6as
      u3VDLwR9vgTR6C35Nwy0SfTwwgDjgDAjIkWOwcaUIUSrFAn9ajRbLZw9fQqNZgt//GffRL3e
      QDxmo5DLYXOriCAI8Jff+QHeff8q6o0G/vjPvolbd3aMxGXggpoxvYOnZgfTZo2kKdtWumGP
      Lr6BRSt1kawAasQQ1NYf2EGNmnEtktrOMozcI0w00bbdJN/YHl7WREmEbgWhW+16PlBKIvQm
      04QjA1fXGSorD+SzJsyEmVmYiIN96Nb27JTZTBr3VtaQTDh45eUXsLy0AKU0W/bFS09jfXML
      zz59EfOzMyhVqvjCS59DIb/DYWo3ahFCwWMZMDutu8ai3mGt8aRACO1MYmrGOs8gWr1Fn4d2
      itcPFOpDXqs0sUbo/SDMAHcKXTILUku4DLtKUQY7fyYqXE3mUE8MW5+RIhqDDFqRLs5kYGZP
      gTILfnXlSM3AdaZrDm19qElgf4fYOODxHIxkbzONwxDUt3qeyYaXLQZAKANPTIHFsxDNohYt
      mlC8qvU5s5EKc5fUY1QqH3YQMyMOv3x/oup3KnDhF+/qgcrNA6FRo9HEdqmMVDKBVsvFJ5/d
      xHNPXwJjFBubRZxanMPq6gYcJwY/EMimU5ri3L6+8EFMB2bmlBaCbWxNdsEhVFel41kQQveE
      LTdv38Xd+6u4cO4MLMvErTv3kEwk8M57V/CVL76MXCaNZqsF1/MgQ4l4RBzMZffKn99fWevZ
      312t1fH6m5fx1MXzWNwnfrCyuo65WS1Pv//cpaRA6DehAlfrNinZWf2JYYMZ8X2K3L0/s5F2
      gP1QMkTo1bWMeL+iTy8EPlRlW5sXzF8AjSX7hjqjrLSE8iNTviPMgJVdQujW9hhA3F9Zw937
      qwiCAIRSLC3O4+79VUwX8rh5+y5OLy/iw48+wfzsNACCRMLpHBSBg9VnrY25NZDe6SFPDBZL
      gcfzewpYod+EX9Jc/Pc++AhPnD+NH7zxNsqVKmanp0AZRRhKyDBEqVzF+XPLKBbLuL+6gfnZ
      aaysreNv/OLPA4DWOvLruHrtUxRyWbzx1rswTQO+7yObSaPeaOKlF57F919/C/FYDJff/xAv
      PPsU1jY2MTM9BcYoPM/Hz37ja7Dzp/WZTbgQjeLhTjG7VKGpYfc11hhpBzh4PwYeS2tSmpI6
      LgtcyNDvOBe2Vy5CKECZDhvcJpp/8r/A++4fQJbWAULAcnOIfeNvIf4L/wA03sNUgtvgiSmI
      +uaAD8iOVPZRhQH86uoB3gznHE48BsaT2Nou4r0PruLs6SU0m014noeNjS08+9RFfHD1Gjjj
      aLZaeyYA2Zf6o9yEkZqLCmZlhF5tqDCDcDMy2E7r1XI/23XXSnvpwlm8/+E1LM7P4czyElJJ
      B4wxmIaBTz67iScvPoFMOgl30cfp5VMQQmB2didFzWNp+H4dQgisrm0gFrOxtDiHdCqFd967
      gmqtDtuykHDiKORz+OLLLyCZdJBIOqCEIp1OIpvWz0n5/1/dtcTGkZThr6r6Ne+Z2Fk7tslq
      4yQby5gFAmiROCAQEexKGyEhVkJIXJA4AQdOiYQWBAcuXDiABAdOCO0hy2EPcIi0B8gqq83G
      K7Q4IhtnnYc9lmN73o9+VBWH6hl74pmenpkeT/gkH+zpru5xd1X9r+/7jcGSsr6kCrerYLEs
      tFgavaiWkewAw0BU9lH45bfh/udfXT83Ll5C9uqboPHutL0Dxbcd9FwNCQWzUqPrSobEsJ0f
      e+Ewyb9ViyOcuhLS8rd+KTyfxSdBqA60a16IKvZiOqhm+r22Dl56wV2I1gQiTIV4NVPxEkat
      AaMM1vSiL5XYpW9wtQZKaShiDotl1fcdwXQlugVIdE2oTWQCSClR+cNPUH/794HHJV6/gtQP
      ftXTHGrLoNeLEE6tvcoTpoMZCbBYFm45f4yq1xESugmBNbXYbqrt1Qv+9+gn9d7yoTIgXfRa
      2wtH9ckRMyIqQSpmZWBkTqmeavsbw/stlKm8TRTONKH+fQyRCIsavLiD3R8uQdaCS65pbhbT
      f1oDTWQCjwPgt+DxHyihIIR02LT/b6BmEnpiCm5lZ6gJTKgOPfXckWYc/dQ/iGaOWJGqWG4H
      je2GVBsh1BchjjAzTpmaBIcm/tDaoKOAP1zr+/IDgCjtgOfDZX1VtICpH798dzKFfAQjp+2h
      7HF7hJ4NUrhwSpsqZ+M/cClF3xIN6dkjlb6weLYjUdWSgB8kf0Oo7vcGjrgsRHBo8VyHAkok
      TvCgCJ3NlQMc2+Vk7o4vdh503dEJRSQyQhJvFCGFByMzB+k5ocwJRdInA2ugUiMBPXmyswsj
      IdBiGVDdUrtZ0JiEtJlyUSTkuoHbVZi55yG8BoRdm8wE0ObPA2YMsINXN5JIQ5s5A8C392sl
      yEYVYAw0ngaxevNypedMjNCjtv9RJkG0VmmLZ8DMkDpAUsDIzCtB3JAFbczKQE/P9CwepJoJ
      I7sA4dTBm0UIV5lZbUddjymHn2ptR38ckJ4N4TWUj2gkJjMB6PQCzC98C/aNtwKPs15+DXzn
      Aap//TXs1esQe5uQrqOK1IwYtNNLML/0KmJf/z7Y9ELHuUH1OuNGSy+fUM2nZIZ7oamZ9GXS
      o3fLeKMUXt6EGSDUV2qwUnBru5Bu95JklbGfUk53z2CFAG9WwBtF9VzavhpTodlYVrWm8s8f
      NyedN6ttHamJhUG9/H0Url4C3/6k6+ckmYM2dxbu+irQxwwisRTil3+M5OtXQCxlv7q1vVB5
      As/zcOPmB1hZfrGdxSwUS6jXGzBNE9NTufaxhWKpra0TBGallckhJaTXhFvbC3ixCaiRgJY4
      Aa+6qwrzxgWifKRA25pQWFNnAMpUDsezVT7Hbao+a5CgTAc1k2BGvE3p7AUpPDil7T7NM1rc
      i2nVQ2JvI1oOwNNXO0T1nNgEkFKC59dR+ePPYN++DrRWGDMGGktDlAeXNtfOXkTujbfAphcC
      6z8Oo9Fs4sbNW8im07hz9x5Wli/g4/UN6LqG2ZmTaDZtmKYByzCxvvEA37n8St8xn27V1GoS
      LZwGBHfaZddUM0A1y9/2a2OzezvvLalKHnoUAmq+yABvFoNVAgkFNeLQfImYbqu/FAJO6XHo
      OialMXoCzSfrHff3yYNHmMplkU4HE/QLhRK4EB2LVvd7Z7BOLqriulB3NgYQQqDNnUX259fA
      t+7Be7gGEAKev4/Kn68OZb979z7A/pVLOPGb60BINWRKKHRdh2EaEEJiK7+DeMxSArT1BorF
      MuZmZ+C4bkcTh37f7cjvRAOzUuhGrJRSqsZ9xwDhNmFkF+DVnnS8mITpIExXuvlh/vdSQNhV
      OHbVb/s6e8TEUmXR4Xc0r7bn+0+da/KH/17DSytLeJzfRrNhI5NJw3EcNG0bqWQSO0928ZlP
      L+HmrVUszJ/CO/98F59/aQVN28banbu4+LkVcM5xbvGF1n8BkBIScnI7QDd4mx9j76cvhwqR
      BkFf/goyv7g2nhY7IcDiORipmdDHS+H5ynDH8yiM3KdA9bjKIvtRoVb/r2FBqAY9Mw9mqBCj
      FBz23sbAPSeokThST/berVVk0qpQ8M1rb2N56Tzq9QYunF/E7n4BruthYW4WhBA8fLwF0zTQ
      aDSxmd/GucUX8OjxFpKJBC6/+o3WzcKaXlQd6p+VCSClQOGN1+C8//dIxkv+6LdgX/5mJGMN
      Cj01Cy2e7X+gD25Xj8X8aeFwebHkHuzio2iiLoTCyMyDmYnhk5BdklWe5ynBLF/d29B1cCEQ
      83f5aq2OdCqJer0Bxhg8ztv9E6SU7SK+VNJ3fKkGc3oR0nMmZwI9DffOe3De/0dk49X/9jsk
      v/g1kB5yHeMENQYTnz3uiFXreorquhldyNEfz8ydHj6JJYTPJTg4v0WNBNBV0r31t2QynFwl
      YUqBTpIJZYK7ofnOXxBl+E/sPID30buRjRcWhOoD63yGqVT1PI5y+SA8WCyVUa0OZ7JI4Sm/
      o7obfZ2UFHDK+ZH4IYMuIAOPbx7sBM/EDiAFh716PfJx+d3b0D/71cjHDQKLpXvGw3tC9H9Z
      PM/D+sZDbG3v4PT8HP577z4unD+DQrEMQghqtTrmTs3g9ocf4XvfvQxdC3i0UkB69kjq2UFQ
      POohWXc+7ZE3yhhHPgR+PwZ1KfZs7ACyWQPPB1DxdCUlCM0Afe75dgaYxFKdKg5Pj5vfOF7V
      ZUJ9ReTBz+t7CCHQNA3LF86hVK4gZpngXLWcrVSqePHcGezvF5WWk9PH8SR0oATdMBBuYyj+
      NtUtEM0Cs8ajUs6sVIfYwP8AaYtTq4lMRn0AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
