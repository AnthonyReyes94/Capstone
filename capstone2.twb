<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.24.0112.1233                               -->
<workbook original-version='18.1' source-build='2023.3.2 (20233.24.0112.1233)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
    <color-palette custom='true' name='basketball' type='regular'>
      <color>#000000</color>
      <color>#1d1d1b</color>
      <color>#d6562b</color>
      <color>#e74802</color>
      <color>#ef6705</color>
      <color>#ef8b46</color>
      <color>#f3ac71</color>
      <color>#f6e8d7</color>
    </color-palette>
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='nba_college_draft' inline='true' name='federated.1699iq40rx5wde11ykfjy117zi51' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='nba_college_draft' name='textscan.1sd68vt04a7lkt147ibk809hyoxk'>
            <connection class='textscan' directory='D:/NSS (Data Analyst)/Capstone/Capstone/data' filename='nba_college_draft.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1sd68vt04a7lkt147ibk809hyoxk' name='nba_college_draft.csv' table='[nba_college_draft#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='player_id' ordinal='1' />
            <column datatype='string' name='player' ordinal='2' />
            <column datatype='integer' name='debut' ordinal='3' />
            <column datatype='integer' name='final' ordinal='4' />
            <column datatype='string' name='pos' ordinal='5' />
            <column datatype='integer' name='ht' ordinal='6' />
            <column datatype='integer' name='wt' ordinal='7' />
            <column datatype='date' name='birth date' ordinal='8' />
            <column datatype='string' name='colleges' ordinal='9' />
            <column datatype='string' name='first' ordinal='10' />
            <column datatype='string' name='last' ordinal='11' />
            <column datatype='integer' name='g' ordinal='12' />
            <column datatype='integer' name='gs' ordinal='13' />
            <column datatype='real' name='mp' ordinal='14' />
            <column datatype='real' name='fg' ordinal='15' />
            <column datatype='real' name='fga' ordinal='16' />
            <column datatype='real' name='fg%' ordinal='17' />
            <column datatype='real' name='3p' ordinal='18' />
            <column datatype='real' name='3pa' ordinal='19' />
            <column datatype='real' name='3p%' ordinal='20' />
            <column datatype='real' name='2p' ordinal='21' />
            <column datatype='real' name='2pa' ordinal='22' />
            <column datatype='real' name='2p%' ordinal='23' />
            <column datatype='real' name='efg%' ordinal='24' />
            <column datatype='real' name='ft' ordinal='25' />
            <column datatype='real' name='fta' ordinal='26' />
            <column datatype='real' name='ft%' ordinal='27' />
            <column datatype='real' name='orb' ordinal='28' />
            <column datatype='real' name='drb' ordinal='29' />
            <column datatype='real' name='trb' ordinal='30' />
            <column datatype='real' name='ast' ordinal='31' />
            <column datatype='real' name='stl' ordinal='32' />
            <column datatype='real' name='blk' ordinal='33' />
            <column datatype='real' name='tov' ordinal='34' />
            <column datatype='real' name='pf' ordinal='35' />
            <column datatype='real' name='pts' ordinal='36' />
            <column datatype='real' name='per' ordinal='37' />
            <column datatype='real' name='ws' ordinal='38' />
            <column datatype='integer' name='c_g' ordinal='39' />
            <column datatype='integer' name='c_gs' ordinal='40' />
            <column datatype='real' name='c_mp' ordinal='41' />
            <column datatype='real' name='c_fg' ordinal='42' />
            <column datatype='real' name='c_fga' ordinal='43' />
            <column datatype='real' name='c_fg%' ordinal='44' />
            <column datatype='real' name='c_2p' ordinal='45' />
            <column datatype='real' name='c_2pa' ordinal='46' />
            <column datatype='real' name='c_2p%' ordinal='47' />
            <column datatype='real' name='c_3p' ordinal='48' />
            <column datatype='real' name='c_3pa' ordinal='49' />
            <column datatype='real' name='c_3p%' ordinal='50' />
            <column datatype='real' name='c_ft' ordinal='51' />
            <column datatype='real' name='c_fta' ordinal='52' />
            <column datatype='real' name='c_ft%' ordinal='53' />
            <column datatype='real' name='c_orb' ordinal='54' />
            <column datatype='real' name='c_drb' ordinal='55' />
            <column datatype='real' name='c_trb' ordinal='56' />
            <column datatype='real' name='c_ast' ordinal='57' />
            <column datatype='real' name='c_stl' ordinal='58' />
            <column datatype='real' name='c_blk' ordinal='59' />
            <column datatype='real' name='c_tov' ordinal='60' />
            <column datatype='real' name='c_pf' ordinal='61' />
            <column datatype='real' name='c_pts' ordinal='62' />
            <column datatype='real' name='c_efg%' ordinal='63' />
            <column datatype='real' name='c_per' ordinal='64' />
            <column datatype='real' name='c_ws' ordinal='65' />
            <column datatype='real' name='c_sos' ordinal='66' />
            <column datatype='integer' name='pk' ordinal='67' />
            <column datatype='string' name='round' ordinal='68' />
            <column datatype='real' name='nba_ws_game' ordinal='69' />
            <column datatype='real' name='college_ws_game' ordinal='70' />
            <column datatype='string' name='draft_team' ordinal='71' />
            <column datatype='string' name='player 1' ordinal='72' />
            <column datatype='string' name='college_drafted' ordinal='73' />
            <column datatype='integer' name='draft_year' ordinal='74' />
            <column datatype='string' name='last_college_attended' ordinal='75' />
            <column datatype='string' name='last_college_attended_full' ordinal='76' />
            <column datatype='real' name='lat' ordinal='77' />
            <column datatype='real' name='lon' ordinal='78' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1sd68vt04a7lkt147ibk809hyoxk' name='nba_college_draft.csv' table='[nba_college_draft#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='player_id' ordinal='1' />
            <column datatype='string' name='player' ordinal='2' />
            <column datatype='integer' name='debut' ordinal='3' />
            <column datatype='integer' name='final' ordinal='4' />
            <column datatype='string' name='pos' ordinal='5' />
            <column datatype='integer' name='ht' ordinal='6' />
            <column datatype='integer' name='wt' ordinal='7' />
            <column datatype='date' name='birth date' ordinal='8' />
            <column datatype='string' name='colleges' ordinal='9' />
            <column datatype='string' name='first' ordinal='10' />
            <column datatype='string' name='last' ordinal='11' />
            <column datatype='integer' name='g' ordinal='12' />
            <column datatype='integer' name='gs' ordinal='13' />
            <column datatype='real' name='mp' ordinal='14' />
            <column datatype='real' name='fg' ordinal='15' />
            <column datatype='real' name='fga' ordinal='16' />
            <column datatype='real' name='fg%' ordinal='17' />
            <column datatype='real' name='3p' ordinal='18' />
            <column datatype='real' name='3pa' ordinal='19' />
            <column datatype='real' name='3p%' ordinal='20' />
            <column datatype='real' name='2p' ordinal='21' />
            <column datatype='real' name='2pa' ordinal='22' />
            <column datatype='real' name='2p%' ordinal='23' />
            <column datatype='real' name='efg%' ordinal='24' />
            <column datatype='real' name='ft' ordinal='25' />
            <column datatype='real' name='fta' ordinal='26' />
            <column datatype='real' name='ft%' ordinal='27' />
            <column datatype='real' name='orb' ordinal='28' />
            <column datatype='real' name='drb' ordinal='29' />
            <column datatype='real' name='trb' ordinal='30' />
            <column datatype='real' name='ast' ordinal='31' />
            <column datatype='real' name='stl' ordinal='32' />
            <column datatype='real' name='blk' ordinal='33' />
            <column datatype='real' name='tov' ordinal='34' />
            <column datatype='real' name='pf' ordinal='35' />
            <column datatype='real' name='pts' ordinal='36' />
            <column datatype='real' name='per' ordinal='37' />
            <column datatype='real' name='ws' ordinal='38' />
            <column datatype='integer' name='c_g' ordinal='39' />
            <column datatype='integer' name='c_gs' ordinal='40' />
            <column datatype='real' name='c_mp' ordinal='41' />
            <column datatype='real' name='c_fg' ordinal='42' />
            <column datatype='real' name='c_fga' ordinal='43' />
            <column datatype='real' name='c_fg%' ordinal='44' />
            <column datatype='real' name='c_2p' ordinal='45' />
            <column datatype='real' name='c_2pa' ordinal='46' />
            <column datatype='real' name='c_2p%' ordinal='47' />
            <column datatype='real' name='c_3p' ordinal='48' />
            <column datatype='real' name='c_3pa' ordinal='49' />
            <column datatype='real' name='c_3p%' ordinal='50' />
            <column datatype='real' name='c_ft' ordinal='51' />
            <column datatype='real' name='c_fta' ordinal='52' />
            <column datatype='real' name='c_ft%' ordinal='53' />
            <column datatype='real' name='c_orb' ordinal='54' />
            <column datatype='real' name='c_drb' ordinal='55' />
            <column datatype='real' name='c_trb' ordinal='56' />
            <column datatype='real' name='c_ast' ordinal='57' />
            <column datatype='real' name='c_stl' ordinal='58' />
            <column datatype='real' name='c_blk' ordinal='59' />
            <column datatype='real' name='c_tov' ordinal='60' />
            <column datatype='real' name='c_pf' ordinal='61' />
            <column datatype='real' name='c_pts' ordinal='62' />
            <column datatype='real' name='c_efg%' ordinal='63' />
            <column datatype='real' name='c_per' ordinal='64' />
            <column datatype='real' name='c_ws' ordinal='65' />
            <column datatype='real' name='c_sos' ordinal='66' />
            <column datatype='integer' name='pk' ordinal='67' />
            <column datatype='string' name='round' ordinal='68' />
            <column datatype='real' name='nba_ws_game' ordinal='69' />
            <column datatype='real' name='college_ws_game' ordinal='70' />
            <column datatype='string' name='draft_team' ordinal='71' />
            <column datatype='string' name='player 1' ordinal='72' />
            <column datatype='string' name='college_drafted' ordinal='73' />
            <column datatype='integer' name='draft_year' ordinal='74' />
            <column datatype='string' name='last_college_attended' ordinal='75' />
            <column datatype='string' name='last_college_attended_full' ordinal='76' />
            <column datatype='real' name='lat' ordinal='77' />
            <column datatype='real' name='lon' ordinal='78' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player_id]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>player_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>player</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>debut</remote-name>
            <remote-type>20</remote-type>
            <local-name>[debut]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>debut</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>final</remote-name>
            <remote-type>20</remote-type>
            <local-name>[final]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>final</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pos</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pos]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>pos</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ht</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ht]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>ht</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wt</remote-name>
            <remote-type>20</remote-type>
            <local-name>[wt]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>wt</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>birth date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[birth date]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>birth date</remote-alias>
            <ordinal>8</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>colleges</remote-name>
            <remote-type>129</remote-type>
            <local-name>[colleges]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>colleges</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>first</remote-name>
            <remote-type>129</remote-type>
            <local-name>[first]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>first</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last</remote-name>
            <remote-type>129</remote-type>
            <local-name>[last]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>last</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>g</remote-name>
            <remote-type>20</remote-type>
            <local-name>[g]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>g</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gs]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>gs</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mp]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>mp</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fg]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>fg</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fga</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fga]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>fga</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fg%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fg%]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>fg%</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3p</remote-name>
            <remote-type>5</remote-type>
            <local-name>[3p]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>3p</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3pa</remote-name>
            <remote-type>5</remote-type>
            <local-name>[3pa]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>3pa</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3p%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[3p%]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>3p%</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2p</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2p]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>2p</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2pa</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2pa]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>2pa</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2p%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2p%]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>2p%</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>efg%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[efg%]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>efg%</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ft</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ft]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>ft</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fta</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fta]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>fta</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ft%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ft%]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>ft%</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>orb</remote-name>
            <remote-type>5</remote-type>
            <local-name>[orb]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>orb</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>drb</remote-name>
            <remote-type>5</remote-type>
            <local-name>[drb]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>drb</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trb</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trb]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>trb</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ast</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ast]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>ast</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stl</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stl]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>stl</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>blk</remote-name>
            <remote-type>5</remote-type>
            <local-name>[blk]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>blk</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tov</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tov]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>tov</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pf</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pf]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>pf</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pts</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pts]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>pts</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>per</remote-name>
            <remote-type>5</remote-type>
            <local-name>[per]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>per</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ws</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ws]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>ws</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_g</remote-name>
            <remote-type>20</remote-type>
            <local-name>[c_g]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_g</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_gs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[c_gs]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_gs</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_mp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_mp]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_mp</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_fg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_fg]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_fg</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_fga</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_fga]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_fga</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_fg%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_fg%]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_fg%</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_2p</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_2p]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_2p</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_2pa</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_2pa]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_2pa</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_2p%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_2p%]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_2p%</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_3p</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_3p]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_3p</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_3pa</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_3pa]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_3pa</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_3p%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_3p%]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_3p%</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_ft</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_ft]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_ft</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_fta</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_fta]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_fta</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_ft%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_ft%]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_ft%</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_orb</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_orb]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_orb</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_drb</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_drb]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_drb</remote-alias>
            <ordinal>55</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_trb</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_trb]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_trb</remote-alias>
            <ordinal>56</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_ast</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_ast]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_ast</remote-alias>
            <ordinal>57</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_stl</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_stl]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_stl</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_blk</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_blk]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_blk</remote-alias>
            <ordinal>59</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_tov</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_tov]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_tov</remote-alias>
            <ordinal>60</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_pf</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_pf]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_pf</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_pts</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_pts]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_pts</remote-alias>
            <ordinal>62</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_efg%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_efg%]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_efg%</remote-alias>
            <ordinal>63</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_per</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_per]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_per</remote-alias>
            <ordinal>64</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_ws</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_ws]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_ws</remote-alias>
            <ordinal>65</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_sos</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_sos]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>c_sos</remote-alias>
            <ordinal>66</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pk</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pk]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>pk</remote-alias>
            <ordinal>67</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>round</remote-name>
            <remote-type>129</remote-type>
            <local-name>[round]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>round</remote-alias>
            <ordinal>68</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nba_ws_game</remote-name>
            <remote-type>5</remote-type>
            <local-name>[nba_ws_game]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>nba_ws_game</remote-alias>
            <ordinal>69</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>college_ws_game</remote-name>
            <remote-type>5</remote-type>
            <local-name>[college_ws_game]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>college_ws_game</remote-alias>
            <ordinal>70</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>draft_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[draft_team]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>draft_team</remote-alias>
            <ordinal>71</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player 1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player 1]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>player 1</remote-alias>
            <ordinal>72</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>college_drafted</remote-name>
            <remote-type>129</remote-type>
            <local-name>[college_drafted]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>college_drafted</remote-alias>
            <ordinal>73</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>draft_year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[draft_year]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>draft_year</remote-alias>
            <ordinal>74</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_college_attended</remote-name>
            <remote-type>129</remote-type>
            <local-name>[last_college_attended]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>last_college_attended</remote-alias>
            <ordinal>75</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_college_attended_full</remote-name>
            <remote-type>129</remote-type>
            <local-name>[last_college_attended_full]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>last_college_attended_full</remote-alias>
            <ordinal>76</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>77</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lon</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lon]</local-name>
            <parent-name>[nba_college_draft.csv]</parent-name>
            <remote-alias>lon</remote-alias>
            <ordinal>78</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='TO Per Minute (C)' datatype='real' name='[2P Per Minute (C)  (copy)_166633194503729186]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([c_tov])/AVG([c_mp])' />
      </column>
      <column caption='2P%' datatype='real' name='[2p%]' role='measure' type='quantitative' />
      <column caption='2P' datatype='real' name='[2p]' role='measure' type='quantitative' />
      <column caption='2Pa' datatype='real' name='[2pa]' role='measure' type='quantitative' />
      <column caption='3P%' datatype='real' name='[3p%]' role='measure' type='quantitative' />
      <column caption='3P' datatype='real' name='[3p]' role='measure' type='quantitative' />
      <column caption='3Pa' datatype='real' name='[3pa]' role='measure' type='quantitative' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220057976834:qk]&quot;' value='College PPM' />
          <alias key='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Points Per Minute (C) (copy)_1054968220058722309:qk]&quot;' value='NBA PPM' />
          <alias key='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Points Per Minute (copy)_1054968220058288131:qk]&quot;' value='College' />
          <alias key='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Reb Per Minute (C) (copy)_1054968220058873862:qk]&quot;' value='NBA' />
        </aliases>
      </column>
      <column caption='Ast Per Minute (NBA)' datatype='real' name='[Ast Per Minute (C)  (copy)_1054968220059107335]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([ast])/AVG([mp])' />
      </column>
      <column caption='Blocks Per Minute (C)  ' datatype='real' name='[Ast Per Minute (C)  (copy)_166633194469158927]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([c_blk])/AVG([c_mp])' />
      </column>
      <column caption='2p  Per Minute (NBA) ' datatype='real' name='[Ast Per Minute (NBA) (copy)_166633194469085198]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([2p])/AVG([mp])' />
      </column>
      <column caption='FT Per Minute (C) ' datatype='real' name='[Blocks Per Minute (C)   (copy)_166633194487799825]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([c_ft])/AVG([c_mp])' />
      </column>
      <column caption='3P Per Minute (C) ' datatype='real' name='[Blocks Per Minute (C)   (copy)_166633194488463379]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([c_3p])/AVG([c_mp])' />
      </column>
      <column caption='2P Per Minute (C) ' datatype='real' name='[Blocks Per Minute (C)   (copy)_166633194488737813]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([c_2p])/AVG([c_mp])' />
      </column>
      <column caption='FT Per Minute (NBA) ' datatype='real' name='[Blocks Per Minute (NBA)  (copy)_166633194487799826]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([ft])/AVG([mp])' />
      </column>
      <column caption='3P Per Minute (NBA)' datatype='real' name='[Blocks Per Minute (NBA)  (copy)_166633194488463380]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([3p])/AVG([mp])' />
      </column>
      <column caption='Blocks Per Minute (NBA)' datatype='real' name='[Blocks Per Minute (NBA)  (copy)_166633194488737814]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([2p])/AVG([mp])' />
      </column>
      <column caption='Calc (3P%) ' datatype='real' name='[Calc (2P%)  (copy)_166633194427719689]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([3p%])-WINDOW_MIN(SUM([3p%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([3p%]))-WINDOW_MIN(SUM([3p%])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Calc (2P%) ' datatype='real' name='[Calc (C_2P%)  (copy)_166633194427224071]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([2p%])-WINDOW_MIN(SUM([2p%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([2p%]))-WINDOW_MIN(SUM([2p%])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Calc (C_3P%)  ' datatype='real' name='[Calc (C_2P%)  (copy)_166633194427600904]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([c_3p%])-WINDOW_MIN(SUM([c_3p%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([c_3p%]))-WINDOW_MIN(SUM([c_3p%])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Calc (FG%) ' datatype='real' name='[Calc (C_FG%) (copy)_166633194426679300]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([fg%])-WINDOW_MIN(SUM([fg%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([fg%]))-WINDOW_MIN(SUM([fg%])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Calc (FT%)  ' datatype='real' name='[Calc (C_FT%)  (copy)_166633194428145675]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([ft%])-WINDOW_MIN(SUM([ft%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([ft%]))-WINDOW_MIN(SUM([ft%])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Calc (C_2P%) ' datatype='real' name='[Calc (FG%)  (copy)_166633194426802181]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([c_2p%])-WINDOW_MIN(SUM([c_2p%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([c_2p%]))-WINDOW_MIN(SUM([c_2p%])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Calc (C_FT%) ' datatype='real' name='[Calc (FG%)  (copy)_166633194427838474]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([c_ft%])-WINDOW_MIN(SUM([c_ft%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([c_ft%]))-WINDOW_MIN(SUM([c_ft%])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Percent Change (Points)' datatype='real' name='[Calculation_1054968220053663744]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Points Per Minute (C) (copy)_1054968220058722309]-[Calculation_1054968220057976834])/[Calculation_1054968220057976834]*100' />
      </column>
      <column caption='Points Per Minute (C)' datatype='real' name='[Calculation_1054968220057976834]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([c_pts])/AVG([c_mp])' />
      </column>
      <column caption='Calc (C_FG%)' datatype='real' name='[Calculation_166633194426298371]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([c_fg%])-WINDOW_MIN(SUM([c_fg%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([c_fg%]))-WINDOW_MIN(SUM([c_fg%])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='index' datatype='integer' name='[F1]' role='measure' type='quantitative' />
      <column caption='Blk % Change ' datatype='real' name='[Percent Change (Ast) (copy)_166633194469371920]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Blocks Per Minute (NBA)  (copy)_166633194488737814]-[Ast Per Minute (C)  (copy)_166633194469158927])/[Ast Per Minute (C)  (copy)_166633194469158927]*100' />
      </column>
      <column caption='Percent Change (ORB)' datatype='real' name='[Percent Change (DRB) (copy)_166633194496200733]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(([orb]/[mp])-[c_orb]/[c_mp])/([c_orb]/[c_mp])*100' />
      </column>
      <column caption='Percent Change (Stl)' datatype='real' name='[Percent Change (ORB) (copy)_166633194500960289]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(([stl]/[mp])-[c_stl]/[c_mp])/([c_stl]/[c_mp])*100' />
      </column>
      <column caption='Percent Change (Reb)' datatype='real' name='[Percent Change (Points) (copy)_166633194292793345]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Reb Per Minute (C) (copy)_1054968220058873862]-[Points Per Minute (copy)_1054968220058288131])/[Points Per Minute (copy)_1054968220058288131]*100' />
      </column>
      <column caption='Percent Change (Ast)' datatype='real' name='[Percent Change (Reb) (copy)_166633194295468034]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Ast Per Minute (C)  (copy)_1054968220059107335]-[Reb Per Minute (C) (copy)_1054968220058558468])/[Reb Per Minute (C) (copy)_1054968220058558468]*100' />
      </column>
      <column caption='Percent Change (FT)' datatype='real' name='[Percent Change (Reb) (copy)_166633194488909847]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Blocks Per Minute (NBA)  (copy)_166633194487799826]-[Blocks Per Minute (C)   (copy)_166633194487799825])/[Blocks Per Minute (C)   (copy)_166633194487799825]*100' />
      </column>
      <column caption='Percent Change (3P)' datatype='real' name='[Percent Change (Reb) (copy)_166633194489098264]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Blocks Per Minute (NBA)  (copy)_166633194488463380]-[Blocks Per Minute (C)   (copy)_166633194488463379])/[Blocks Per Minute (C)   (copy)_166633194488463379]*100' />
      </column>
      <column caption='Percent Change (2P) ' datatype='real' name='[Percent Change (Reb) (copy)_166633194489249817]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Ast Per Minute (NBA) (copy)_166633194469085198]-[Blocks Per Minute (C)   (copy)_166633194488737813])/[Blocks Per Minute (C)   (copy)_166633194488737813]*100' />
      </column>
      <column caption='Percent Change (DRB)' datatype='real' name='[Percent Change (Reb) (copy)_166633194495496218]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(([drb]/[mp])-[c_drb]/[c_mp])/([c_drb]/[c_mp])*100' />
      </column>
      <column caption='Percent Change (TO) ' datatype='real' name='[Percent Change (Stl) (copy)_166633194504069155]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(([tov]/[mp])-[c_tov]/[c_mp])/([c_tov]/[c_mp])*100' />
      </column>
      <column caption='Points Per Minute (NBA)' datatype='real' name='[Points Per Minute (C) (copy)_1054968220058722309]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([pts])/AVG([mp])' />
      </column>
      <column caption='Points Per Minute (C) (copy)' datatype='real' name='[Points Per Minute (C) (copy)_166633194499317790]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([c_pts])/AVG([c_mp])' />
      </column>
      <column caption='Reb Per Minute (C)' datatype='real' name='[Points Per Minute (copy)_1054968220058288131]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([c_trb])/AVG([c_mp])' />
      </column>
      <column caption='Ast Per Minute (C) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058558468]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([c_ast])/AVG([c_mp])' />
      </column>
      <column caption='Reb Per Minute (NBA) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058873862]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([trb])/AVG([mp])' />
      </column>
      <column caption='Stl Per Minute (C)' datatype='real' name='[Reb Per Minute (C) (copy)_166633194500448287]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([c_stl])/AVG([c_mp])' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='nba_college_draft.csv' datatype='table' name='[__tableau_internal_object_id__].[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]' role='measure' type='quantitative' />
      <column caption='Ast' datatype='real' name='[ast]' role='measure' type='quantitative' />
      <column caption='Birth Date' datatype='date' name='[birth date]' role='dimension' type='ordinal' />
      <column caption='Blk' datatype='real' name='[blk]' role='measure' type='quantitative' />
      <column caption='C 2P%' datatype='real' name='[c_2p%]' role='measure' type='quantitative' />
      <column caption='C 2P' datatype='real' name='[c_2p]' role='measure' type='quantitative' />
      <column caption='C 2Pa' datatype='real' name='[c_2pa]' role='measure' type='quantitative' />
      <column caption='C 3P%' datatype='real' name='[c_3p%]' role='measure' type='quantitative' />
      <column caption='C 3P' datatype='real' name='[c_3p]' role='measure' type='quantitative' />
      <column caption='C 3Pa' datatype='real' name='[c_3pa]' role='measure' type='quantitative' />
      <column caption='C Ast' datatype='real' name='[c_ast]' role='measure' type='quantitative' />
      <column caption='C Blk' datatype='real' name='[c_blk]' role='measure' type='quantitative' />
      <column caption='C Drb' datatype='real' name='[c_drb]' role='measure' type='quantitative' />
      <column caption='C Efg%' datatype='real' name='[c_efg%]' role='measure' type='quantitative' />
      <column caption='C Fg%' datatype='real' name='[c_fg%]' role='measure' type='quantitative' />
      <column caption='C Fg' datatype='real' name='[c_fg]' role='measure' type='quantitative' />
      <column caption='C Fga' datatype='real' name='[c_fga]' role='measure' type='quantitative' />
      <column caption='C Ft%' datatype='real' name='[c_ft%]' role='measure' type='quantitative' />
      <column caption='C Ft' datatype='real' name='[c_ft]' role='measure' type='quantitative' />
      <column caption='C Fta' datatype='real' name='[c_fta]' role='measure' type='quantitative' />
      <column caption='C G' datatype='integer' name='[c_g]' role='measure' type='quantitative' />
      <column caption='C Gs' datatype='integer' name='[c_gs]' role='measure' type='quantitative' />
      <column caption='C Mp' datatype='real' name='[c_mp]' role='measure' type='quantitative' />
      <column caption='C Orb' datatype='real' name='[c_orb]' role='measure' type='quantitative' />
      <column caption='C Per' datatype='real' name='[c_per]' role='measure' type='quantitative' />
      <column caption='C Pf' datatype='real' name='[c_pf]' role='measure' type='quantitative' />
      <column caption='C Pts' datatype='real' name='[c_pts]' role='measure' type='quantitative' />
      <column caption='C Sos' datatype='real' name='[c_sos]' role='measure' type='quantitative' />
      <column caption='C Stl' datatype='real' name='[c_stl]' role='measure' type='quantitative' />
      <column caption='C Tov' datatype='real' name='[c_tov]' role='measure' type='quantitative' />
      <column caption='C Trb' datatype='real' name='[c_trb]' role='measure' type='quantitative' />
      <column caption='C Ws' datatype='real' name='[c_ws]' role='measure' type='quantitative' />
      <column caption='College Drafted' datatype='string' name='[college_drafted]' role='dimension' type='nominal' />
      <column datatype='real' name='[college_ws_game]' role='measure' type='quantitative' />
      <column caption='Colleges' datatype='string' name='[colleges]' role='dimension' type='nominal' />
      <column caption='Debut' datatype='integer' name='[debut]' role='measure' type='quantitative' />
      <column caption='Draft Team' datatype='string' name='[draft_team]' role='dimension' type='nominal' />
      <column caption='Draft Year' datatype='integer' name='[draft_year]' role='dimension' type='quantitative' />
      <column caption='Drb' datatype='real' name='[drb]' role='measure' type='quantitative' />
      <column caption='Efg%' datatype='real' name='[efg%]' role='measure' type='quantitative' />
      <column caption='Fg%' datatype='real' name='[fg%]' role='measure' type='quantitative' />
      <column caption='Fg' datatype='real' name='[fg]' role='measure' type='quantitative' />
      <column caption='Fga' datatype='real' name='[fga]' role='measure' type='quantitative' />
      <column caption='Final' datatype='integer' name='[final]' role='measure' type='quantitative' />
      <column caption='First' datatype='string' name='[first]' role='dimension' type='nominal' />
      <column caption='Ft%' datatype='real' name='[ft%]' role='measure' type='quantitative' />
      <column caption='Ft' datatype='real' name='[ft]' role='measure' type='quantitative' />
      <column caption='Fta' datatype='real' name='[fta]' role='measure' type='quantitative' />
      <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
      <column caption='Gs' datatype='integer' name='[gs]' role='measure' type='quantitative' />
      <column caption='Ht' datatype='integer' name='[ht]' role='measure' type='quantitative' />
      <column caption='Last' datatype='string' name='[last]' role='dimension' type='nominal' />
      <column aggregation='CountD' caption='Last College Attended' datatype='string' name='[last_college_attended]' role='dimension' semantic-role='' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[lon]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Mp' datatype='real' name='[mp]' role='measure' type='quantitative' />
      <column datatype='real' name='[nba_ws_game]' role='measure' type='quantitative' />
      <column caption='Orb' datatype='real' name='[orb]' role='measure' type='quantitative' />
      <column caption='Per' datatype='real' name='[per]' role='measure' type='quantitative' />
      <column caption='Pf' datatype='real' name='[pf]' role='measure' type='quantitative' />
      <column caption='Pk' datatype='integer' name='[pk]' role='measure' type='quantitative' />
      <column caption='Player 1' datatype='string' hidden='true' name='[player 1]' role='dimension' type='nominal' />
      <column caption='Player' datatype='string' name='[player]' role='dimension' type='nominal' />
      <column datatype='string' name='[player_id]' role='dimension' type='nominal' />
      <column caption='Pos' datatype='string' name='[pos]' role='dimension' type='nominal' />
      <column caption='Pts' datatype='real' name='[pts]' role='measure' type='quantitative' />
      <column datatype='string' name='[round]' role='dimension' type='nominal' />
      <column caption='Stl' datatype='real' name='[stl]' role='measure' type='quantitative' />
      <column caption='Tov' datatype='real' name='[tov]' role='measure' type='quantitative' />
      <column caption='Trb' datatype='real' name='[trb]' role='measure' type='quantitative' />
      <column caption='Ws' datatype='real' name='[ws]' role='measure' type='quantitative' />
      <column caption='Wt' datatype='integer' name='[wt]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2p%]' derivation='Avg' name='[avg:2p%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[3p%]' derivation='Avg' name='[avg:3p%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ast]' derivation='Avg' name='[avg:ast:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_ast]' derivation='Avg' name='[avg:c_ast:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_pts]' derivation='Avg' name='[avg:c_pts:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_trb]' derivation='Avg' name='[avg:c_trb:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fg%]' derivation='Avg' name='[avg:fg%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ft%]' derivation='Avg' name='[avg:ft%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[per]' derivation='Avg' name='[avg:per:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pts]' derivation='Avg' name='[avg:pts:qk]' pivot='key' type='quantitative' />
      <column-instance column='[trb]' derivation='Avg' name='[avg:trb:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ws]' derivation='Avg' name='[avg:ws:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pos]' derivation='None' name='[none:pos:nk]' pivot='key' type='nominal' />
      <column-instance column='[round]' derivation='None' name='[none:round:nk]' pivot='key' type='nominal' />
      <column-instance column='[2p%]' derivation='Sum' name='[sum:2p%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2p]' derivation='Sum' name='[sum:2p:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2pa]' derivation='Sum' name='[sum:2pa:qk]' pivot='key' type='quantitative' />
      <column-instance column='[3p%]' derivation='Sum' name='[sum:3p%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[3p]' derivation='Sum' name='[sum:3p:qk]' pivot='key' type='quantitative' />
      <column-instance column='[3pa]' derivation='Sum' name='[sum:3pa:qk]' pivot='key' type='quantitative' />
      <column-instance column='[F1]' derivation='Sum' name='[sum:F1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Percent Change (DRB) (copy)_166633194496200733]' derivation='Sum' name='[sum:Percent Change (DRB) (copy)_166633194496200733:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Percent Change (Reb) (copy)_166633194495496218]' derivation='Sum' name='[sum:Percent Change (Reb) (copy)_166633194495496218:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ast]' derivation='Sum' name='[sum:ast:qk]' pivot='key' type='quantitative' />
      <column-instance column='[blk]' derivation='Sum' name='[sum:blk:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_2p%]' derivation='Sum' name='[sum:c_2p%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_2p]' derivation='Sum' name='[sum:c_2p:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_2pa]' derivation='Sum' name='[sum:c_2pa:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_3p%]' derivation='Sum' name='[sum:c_3p%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_3p]' derivation='Sum' name='[sum:c_3p:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_3pa]' derivation='Sum' name='[sum:c_3pa:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_ast]' derivation='Sum' name='[sum:c_ast:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_blk]' derivation='Sum' name='[sum:c_blk:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_drb]' derivation='Sum' name='[sum:c_drb:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_efg%]' derivation='Sum' name='[sum:c_efg%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_fg%]' derivation='Sum' name='[sum:c_fg%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_fg]' derivation='Sum' name='[sum:c_fg:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_fga]' derivation='Sum' name='[sum:c_fga:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_ft%]' derivation='Sum' name='[sum:c_ft%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_ft]' derivation='Sum' name='[sum:c_ft:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_fta]' derivation='Sum' name='[sum:c_fta:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_g]' derivation='Sum' name='[sum:c_g:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_gs]' derivation='Sum' name='[sum:c_gs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_mp]' derivation='Sum' name='[sum:c_mp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_orb]' derivation='Sum' name='[sum:c_orb:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_per]' derivation='Sum' name='[sum:c_per:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_pf]' derivation='Sum' name='[sum:c_pf:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_pts]' derivation='Sum' name='[sum:c_pts:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_sos]' derivation='Sum' name='[sum:c_sos:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_stl]' derivation='Sum' name='[sum:c_stl:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_tov]' derivation='Sum' name='[sum:c_tov:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_trb]' derivation='Sum' name='[sum:c_trb:qk]' pivot='key' type='quantitative' />
      <column-instance column='[c_ws]' derivation='Sum' name='[sum:c_ws:qk]' pivot='key' type='quantitative' />
      <column-instance column='[college_ws_game]' derivation='Sum' name='[sum:college_ws_game:qk]' pivot='key' type='quantitative' />
      <column-instance column='[debut]' derivation='Sum' name='[sum:debut:qk]' pivot='key' type='quantitative' />
      <column-instance column='[drb]' derivation='Sum' name='[sum:drb:qk]' pivot='key' type='quantitative' />
      <column-instance column='[efg%]' derivation='Sum' name='[sum:efg%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fg%]' derivation='Sum' name='[sum:fg%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fg]' derivation='Sum' name='[sum:fg:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fga]' derivation='Sum' name='[sum:fga:qk]' pivot='key' type='quantitative' />
      <column-instance column='[final]' derivation='Sum' name='[sum:final:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ft%]' derivation='Sum' name='[sum:ft%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ft]' derivation='Sum' name='[sum:ft:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fta]' derivation='Sum' name='[sum:fta:qk]' pivot='key' type='quantitative' />
      <column-instance column='[g]' derivation='Sum' name='[sum:g:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gs]' derivation='Sum' name='[sum:gs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ht]' derivation='Sum' name='[sum:ht:qk]' pivot='key' type='quantitative' />
      <column-instance column='[mp]' derivation='Sum' name='[sum:mp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[nba_ws_game]' derivation='Sum' name='[sum:nba_ws_game:qk]' pivot='key' type='quantitative' />
      <column-instance column='[orb]' derivation='Sum' name='[sum:orb:qk]' pivot='key' type='quantitative' />
      <column-instance column='[per]' derivation='Sum' name='[sum:per:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pf]' derivation='Sum' name='[sum:pf:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pk]' derivation='Sum' name='[sum:pk:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pts]' derivation='Sum' name='[sum:pts:qk]' pivot='key' type='quantitative' />
      <column-instance column='[stl]' derivation='Sum' name='[sum:stl:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tov]' derivation='Sum' name='[sum:tov:qk]' pivot='key' type='quantitative' />
      <column-instance column='[trb]' derivation='Sum' name='[sum:trb:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ws]' derivation='Sum' name='[sum:ws:qk]' pivot='key' type='quantitative' />
      <column-instance column='[wt]' derivation='Sum' name='[sum:wt:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Ast Per Minute (C)  (copy)_1054968220059107335]' derivation='User' name='[usr:Ast Per Minute (C)  (copy)_1054968220059107335:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calc (2P%)  (copy)_166633194427719689]' derivation='User' name='[usr:Calc (2P%)  (copy)_166633194427719689:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calc (C_2P%)  (copy)_166633194427224071]' derivation='User' name='[usr:Calc (C_2P%)  (copy)_166633194427224071:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calc (C_2P%)  (copy)_166633194427600904]' derivation='User' name='[usr:Calc (C_2P%)  (copy)_166633194427600904:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calc (C_FG%) (copy)_166633194426679300]' derivation='User' name='[usr:Calc (C_FG%) (copy)_166633194426679300:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1699iq40rx5wde11ykfjy117zi51].[player_id]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calc (C_FG%) (copy)_166633194426679300]' derivation='User' name='[usr:Calc (C_FG%) (copy)_166633194426679300:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calc (C_FT%)  (copy)_166633194428145675]' derivation='User' name='[usr:Calc (C_FT%)  (copy)_166633194428145675:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calc (FG%)  (copy)_166633194426802181]' derivation='User' name='[usr:Calc (FG%)  (copy)_166633194426802181:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calc (FG%)  (copy)_166633194427838474]' derivation='User' name='[usr:Calc (FG%)  (copy)_166633194427838474:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_1054968220053663744]' derivation='User' name='[usr:Calculation_1054968220053663744:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1054968220057976834]' derivation='User' name='[usr:Calculation_1054968220057976834:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_166633194426298371]' derivation='User' name='[usr:Calculation_166633194426298371:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Percent Change (Ast) (copy)_166633194469371920]' derivation='User' name='[usr:Percent Change (Ast) (copy)_166633194469371920:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Percent Change (Points) (copy)_166633194292793345]' derivation='User' name='[usr:Percent Change (Points) (copy)_166633194292793345:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Percent Change (Reb) (copy)_166633194295468034]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Percent Change (Reb) (copy)_166633194488909847]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194488909847:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Percent Change (Reb) (copy)_166633194489098264]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194489098264:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Percent Change (Reb) (copy)_166633194489249817]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194489249817:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Points Per Minute (C) (copy)_1054968220058722309]' derivation='User' name='[usr:Points Per Minute (C) (copy)_1054968220058722309:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Points Per Minute (copy)_1054968220058288131]' derivation='User' name='[usr:Points Per Minute (copy)_1054968220058288131:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Reb Per Minute (C) (copy)_1054968220058558468]' derivation='User' name='[usr:Reb Per Minute (C) (copy)_1054968220058558468:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Reb Per Minute (C) (copy)_1054968220058873862]' derivation='User' name='[usr:Reb Per Minute (C) (copy)_1054968220058873862:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='1' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:pos:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;C&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;F-G&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;F-C&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;G-F&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;F&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;G&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;C-F&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:round:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;first&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;undrafted&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;second&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;lottery&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[:Measure Names]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:2p\%:qk]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_3p\%:qk]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_ft\%:qk]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_stl:qk]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:fg\%:qk]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:stl:qk]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_FG\%) (copy)_166633194426679300:qk:2]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_FG\%) (copy)_166633194426679300:qk]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Reb Per Minute (C) (copy)_1054968220058873862:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_2p:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_fg:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_per:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:college_ws_game:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:drb:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:g:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:nba_ws_game:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (Reb) (copy)_166633194495496218:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (FG\%)  (copy)_166633194426802181:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194488909847:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489249817:qk]&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:2pa:qk]&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_3pa:qk]&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_fta:qk]&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_tov:qk]&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:fga:qk]&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:tov:qk]&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_FT\%)  (copy)_166633194428145675:qk]&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Points Per Minute (C) (copy)_1054968220058722309:qk]&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[avg:per:qk]&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:3p\%:qk]&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_blk:qk]&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_gs:qk]&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_ws:qk]&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:ft:qk]&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:per:qk]&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220057976834:qk]&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Reb Per Minute (C) (copy)_1054968220058558468:qk]&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[__tableau_internal_object_id__].[cnt:nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61:qk]&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[avg:ws:qk]&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:3pa:qk]&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_drb:qk]&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_mp:qk]&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:ft\%:qk]&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:ws:qk]&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Ast Per Minute (C)  (copy)_1054968220059107335:qk]&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_2P\%)  (copy)_166633194427224071:qk]&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_2pa:qk]&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_fga:qk]&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_pts:qk]&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:F1:qk]&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:ht:qk]&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:pk:qk]&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_166633194426298371:qk]&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489098264:qk]&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:ast:qk]&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:blk:qk]&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_efg\%:qk]&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_orb:qk]&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:debut:qk]&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:fta:qk]&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:wt:qk]&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (2P\%)  (copy)_166633194427719689:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_2p\%:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_fg\%:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_pf:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:efg\%:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:gs:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (DRB) (copy)_166633194496200733:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:pf:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_2P\%)  (copy)_166633194427600904:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:2p:qk]&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_3p:qk]&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_ft:qk]&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_sos:qk]&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:fg:qk]&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:mp:qk]&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:pts:qk]&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (FG\%)  (copy)_166633194427838474:qk]&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:3p:qk]&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_ast:qk]&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_g:qk]&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_trb:qk]&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:final:qk]&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:orb:qk]&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:trb:qk]&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Points Per Minute (copy)_1054968220058288131:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' palette='basketball' type='palette'>
            <map to='#000000'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[__tableau_internal_object_id__].[cnt:nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61:qk]&quot;</bucket>
            </map>
            <map to='#000000'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[avg:3p\%:qk]&quot;</bucket>
            </map>
            <map to='#000000'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:2p:qk]&quot;</bucket>
            </map>
            <map to='#000000'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_efg\%:qk]&quot;</bucket>
            </map>
            <map to='#000000'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_ft\%:qk]&quot;</bucket>
            </map>
            <map to='#000000'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_ws:qk]&quot;</bucket>
            </map>
            <map to='#000000'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:final:qk]&quot;</bucket>
            </map>
            <map to='#000000'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:nba_ws_game:qk]&quot;</bucket>
            </map>
            <map to='#000000'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (Reb) (copy)_166633194495496218:qk]&quot;</bucket>
            </map>
            <map to='#000000'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:pk:qk]&quot;</bucket>
            </map>
            <map to='#000000'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (FG\%)  (copy)_166633194426802181:qk]&quot;</bucket>
            </map>
            <map to='#000000'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]&quot;</bucket>
            </map>
            <map to='#1d1d1b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[avg:ft\%:qk]&quot;</bucket>
            </map>
            <map to='#1d1d1b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:2p\%:qk]&quot;</bucket>
            </map>
            <map to='#1d1d1b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_blk:qk]&quot;</bucket>
            </map>
            <map to='#1d1d1b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_fta:qk]&quot;</bucket>
            </map>
            <map to='#1d1d1b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_sos:qk]&quot;</bucket>
            </map>
            <map to='#1d1d1b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:debut:qk]&quot;</bucket>
            </map>
            <map to='#1d1d1b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:ft:qk]&quot;</bucket>
            </map>
            <map to='#1d1d1b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:wt:qk]&quot;</bucket>
            </map>
            <map to='#1d1d1b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_2P\%)  (copy)_166633194427600904:qk]&quot;</bucket>
            </map>
            <map to='#27aab0'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194488909847:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[avg:c_pts:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_pts:qk]&quot;</bucket>
            </map>
            <map to='#57606c'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Ast) (copy)_166633194469371920:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[avg:trb:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:trb:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_trb:qk]:1&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[avg:ast:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:ast:qk]&quot;</bucket>
            </map>
            <map to='#d6562b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[avg:2p\%:qk]&quot;</bucket>
            </map>
            <map to='#d6562b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:2pa:qk]&quot;</bucket>
            </map>
            <map to='#d6562b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_drb:qk]&quot;</bucket>
            </map>
            <map to='#d6562b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_g:qk]&quot;</bucket>
            </map>
            <map to='#d6562b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_stl:qk]&quot;</bucket>
            </map>
            <map to='#d6562b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:drb:qk]&quot;</bucket>
            </map>
            <map to='#d6562b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:ft\%:qk]&quot;</bucket>
            </map>
            <map to='#d6562b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:orb:qk]&quot;</bucket>
            </map>
            <map to='#d6562b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220057976834:qk]&quot;</bucket>
            </map>
            <map to='#d6562b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_166633194426298371:qk]&quot;</bucket>
            </map>
            <map to='#d6562b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Points Per Minute (copy)_1054968220058288131:qk]&quot;</bucket>
            </map>
            <map to='#d6562b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Reb Per Minute (C) (copy)_1054968220058558468:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[avg:c_trb:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_trb:qk]&quot;</bucket>
            </map>
            <map to='#e74802'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[avg:fg\%:qk]&quot;</bucket>
            </map>
            <map to='#e74802'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[avg:per:qk]&quot;</bucket>
            </map>
            <map to='#e74802'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:3p:qk]&quot;</bucket>
            </map>
            <map to='#e74802'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_2p\%:qk]&quot;</bucket>
            </map>
            <map to='#e74802'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_gs:qk]&quot;</bucket>
            </map>
            <map to='#e74802'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_tov:qk]&quot;</bucket>
            </map>
            <map to='#e74802'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:efg\%:qk]&quot;</bucket>
            </map>
            <map to='#e74802'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:fta:qk]&quot;</bucket>
            </map>
            <map to='#e74802'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:per:qk]&quot;</bucket>
            </map>
            <map to='#e74802'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (DRB) (copy)_166633194496200733:qk]&quot;</bucket>
            </map>
            <map to='#e74802'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (FG\%)  (copy)_166633194427838474:qk]&quot;</bucket>
            </map>
            <map to='#e74802'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]&quot;</bucket>
            </map>
            <map to='#e74802'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489249817:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51]&quot;</bucket>
            </map>
            <map to='#ef6705'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:3p\%:qk]&quot;</bucket>
            </map>
            <map to='#ef6705'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_2pa:qk]&quot;</bucket>
            </map>
            <map to='#ef6705'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_fg:qk]&quot;</bucket>
            </map>
            <map to='#ef6705'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_mp:qk]&quot;</bucket>
            </map>
            <map to='#ef6705'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:F1:qk]&quot;</bucket>
            </map>
            <map to='#ef6705'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:g:qk]&quot;</bucket>
            </map>
            <map to='#ef6705'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:stl:qk]&quot;</bucket>
            </map>
            <map to='#ef6705'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_FG\%) (copy)_166633194426679300:qk:2]&quot;</bucket>
            </map>
            <map to='#ef6705'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_FG\%) (copy)_166633194426679300:qk]&quot;</bucket>
            </map>
            <map to='#ef8b46'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:3pa:qk]&quot;</bucket>
            </map>
            <map to='#ef8b46'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_3p:qk]&quot;</bucket>
            </map>
            <map to='#ef8b46'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_fg\%:qk]&quot;</bucket>
            </map>
            <map to='#ef8b46'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_orb:qk]&quot;</bucket>
            </map>
            <map to='#ef8b46'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:fg:qk]&quot;</bucket>
            </map>
            <map to='#ef8b46'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:gs:qk]&quot;</bucket>
            </map>
            <map to='#ef8b46'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:tov:qk]&quot;</bucket>
            </map>
            <map to='#ef8b46'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_FT\%)  (copy)_166633194428145675:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[avg:pts:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:pts:qk]&quot;</bucket>
            </map>
            <map to='#f3ac71'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[avg:ws:qk]&quot;</bucket>
            </map>
            <map to='#f3ac71'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:blk:qk]&quot;</bucket>
            </map>
            <map to='#f3ac71'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_3p\%:qk]&quot;</bucket>
            </map>
            <map to='#f3ac71'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_fga:qk]&quot;</bucket>
            </map>
            <map to='#f3ac71'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_per:qk]&quot;</bucket>
            </map>
            <map to='#f3ac71'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:fg\%:qk]&quot;</bucket>
            </map>
            <map to='#f3ac71'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:ht:qk]&quot;</bucket>
            </map>
            <map to='#f3ac71'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:ws:qk]&quot;</bucket>
            </map>
            <map to='#f3ac71'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Ast Per Minute (C)  (copy)_1054968220059107335:qk]&quot;</bucket>
            </map>
            <map to='#f3ac71'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_2P\%)  (copy)_166633194427224071:qk]&quot;</bucket>
            </map>
            <map to='#f3ac71'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]&quot;</bucket>
            </map>
            <map to='#f3ac71'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489098264:qk]&quot;</bucket>
            </map>
            <map to='#f3ac71'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Points Per Minute (C) (copy)_1054968220058722309:qk]&quot;</bucket>
            </map>
            <map to='#f3ac71'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Reb Per Minute (C) (copy)_1054968220058873862:qk]&quot;</bucket>
            </map>
            <map to='#f6e8d7'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_2p:qk]&quot;</bucket>
            </map>
            <map to='#f6e8d7'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_3pa:qk]&quot;</bucket>
            </map>
            <map to='#f6e8d7'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_ft:qk]&quot;</bucket>
            </map>
            <map to='#f6e8d7'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_pf:qk]&quot;</bucket>
            </map>
            <map to='#f6e8d7'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:college_ws_game:qk]&quot;</bucket>
            </map>
            <map to='#f6e8d7'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:fga:qk]&quot;</bucket>
            </map>
            <map to='#f6e8d7'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:mp:qk]&quot;</bucket>
            </map>
            <map to='#f6e8d7'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:pf:qk]&quot;</bucket>
            </map>
            <map to='#f6e8d7'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (2P\%)  (copy)_166633194427719689:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[avg:c_ast:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_ast:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='nba_college_draft.csv' id='nba_college_draft.csv_9670D22AA9024F928AB7BCF030E72C61'>
            <properties context=''>
              <relation connection='textscan.1sd68vt04a7lkt147ibk809hyoxk' name='nba_college_draft.csv' table='[nba_college_draft#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='player_id' ordinal='1' />
                  <column datatype='string' name='player' ordinal='2' />
                  <column datatype='integer' name='debut' ordinal='3' />
                  <column datatype='integer' name='final' ordinal='4' />
                  <column datatype='string' name='pos' ordinal='5' />
                  <column datatype='integer' name='ht' ordinal='6' />
                  <column datatype='integer' name='wt' ordinal='7' />
                  <column datatype='date' name='birth date' ordinal='8' />
                  <column datatype='string' name='colleges' ordinal='9' />
                  <column datatype='string' name='first' ordinal='10' />
                  <column datatype='string' name='last' ordinal='11' />
                  <column datatype='integer' name='g' ordinal='12' />
                  <column datatype='integer' name='gs' ordinal='13' />
                  <column datatype='real' name='mp' ordinal='14' />
                  <column datatype='real' name='fg' ordinal='15' />
                  <column datatype='real' name='fga' ordinal='16' />
                  <column datatype='real' name='fg%' ordinal='17' />
                  <column datatype='real' name='3p' ordinal='18' />
                  <column datatype='real' name='3pa' ordinal='19' />
                  <column datatype='real' name='3p%' ordinal='20' />
                  <column datatype='real' name='2p' ordinal='21' />
                  <column datatype='real' name='2pa' ordinal='22' />
                  <column datatype='real' name='2p%' ordinal='23' />
                  <column datatype='real' name='efg%' ordinal='24' />
                  <column datatype='real' name='ft' ordinal='25' />
                  <column datatype='real' name='fta' ordinal='26' />
                  <column datatype='real' name='ft%' ordinal='27' />
                  <column datatype='real' name='orb' ordinal='28' />
                  <column datatype='real' name='drb' ordinal='29' />
                  <column datatype='real' name='trb' ordinal='30' />
                  <column datatype='real' name='ast' ordinal='31' />
                  <column datatype='real' name='stl' ordinal='32' />
                  <column datatype='real' name='blk' ordinal='33' />
                  <column datatype='real' name='tov' ordinal='34' />
                  <column datatype='real' name='pf' ordinal='35' />
                  <column datatype='real' name='pts' ordinal='36' />
                  <column datatype='real' name='per' ordinal='37' />
                  <column datatype='real' name='ws' ordinal='38' />
                  <column datatype='integer' name='c_g' ordinal='39' />
                  <column datatype='integer' name='c_gs' ordinal='40' />
                  <column datatype='real' name='c_mp' ordinal='41' />
                  <column datatype='real' name='c_fg' ordinal='42' />
                  <column datatype='real' name='c_fga' ordinal='43' />
                  <column datatype='real' name='c_fg%' ordinal='44' />
                  <column datatype='real' name='c_2p' ordinal='45' />
                  <column datatype='real' name='c_2pa' ordinal='46' />
                  <column datatype='real' name='c_2p%' ordinal='47' />
                  <column datatype='real' name='c_3p' ordinal='48' />
                  <column datatype='real' name='c_3pa' ordinal='49' />
                  <column datatype='real' name='c_3p%' ordinal='50' />
                  <column datatype='real' name='c_ft' ordinal='51' />
                  <column datatype='real' name='c_fta' ordinal='52' />
                  <column datatype='real' name='c_ft%' ordinal='53' />
                  <column datatype='real' name='c_orb' ordinal='54' />
                  <column datatype='real' name='c_drb' ordinal='55' />
                  <column datatype='real' name='c_trb' ordinal='56' />
                  <column datatype='real' name='c_ast' ordinal='57' />
                  <column datatype='real' name='c_stl' ordinal='58' />
                  <column datatype='real' name='c_blk' ordinal='59' />
                  <column datatype='real' name='c_tov' ordinal='60' />
                  <column datatype='real' name='c_pf' ordinal='61' />
                  <column datatype='real' name='c_pts' ordinal='62' />
                  <column datatype='real' name='c_efg%' ordinal='63' />
                  <column datatype='real' name='c_per' ordinal='64' />
                  <column datatype='real' name='c_ws' ordinal='65' />
                  <column datatype='real' name='c_sos' ordinal='66' />
                  <column datatype='integer' name='pk' ordinal='67' />
                  <column datatype='string' name='round' ordinal='68' />
                  <column datatype='real' name='nba_ws_game' ordinal='69' />
                  <column datatype='real' name='college_ws_game' ordinal='70' />
                  <column datatype='string' name='draft_team' ordinal='71' />
                  <column datatype='string' name='player 1' ordinal='72' />
                  <column datatype='string' name='college_drafted' ordinal='73' />
                  <column datatype='integer' name='draft_year' ordinal='74' />
                  <column datatype='string' name='last_college_attended' ordinal='75' />
                  <column datatype='string' name='last_college_attended_full' ordinal='76' />
                  <column datatype='real' name='lat' ordinal='77' />
                  <column datatype='real' name='lon' ordinal='78' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Average Assists by Position'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='Ast Per Minute (NBA)' datatype='real' name='[Ast Per Minute (C)  (copy)_1054968220059107335]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ast])/AVG([mp])' />
            </column>
            <column caption='Percent Change (Ast)' datatype='real' name='[Percent Change (Reb) (copy)_166633194295468034]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ast Per Minute (C)  (copy)_1054968220059107335]-[Reb Per Minute (C) (copy)_1054968220058558468])/[Reb Per Minute (C) (copy)_1054968220058558468]*100' />
            </column>
            <column caption='Ast Per Minute (C) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058558468]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_ast])/AVG([c_mp])' />
            </column>
            <column caption='Ast' datatype='real' name='[ast]' role='measure' type='quantitative' />
            <column caption='C Ast' datatype='real' name='[c_ast]' role='measure' type='quantitative' />
            <column caption='C Mp' datatype='real' name='[c_mp]' role='measure' type='quantitative' />
            <column caption='Mp' datatype='real' name='[mp]' role='measure' type='quantitative' />
            <column-instance column='[pos]' derivation='None' name='[none:pos:nk]' pivot='key' type='nominal' />
            <column caption='Pos' datatype='string' name='[pos]' role='dimension' type='nominal' />
            <column-instance column='[Ast Per Minute (C)  (copy)_1054968220059107335]' derivation='User' name='[usr:Ast Per Minute (C)  (copy)_1054968220059107335:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194295468034]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Reb Per Minute (C) (copy)_1054968220058558468]' derivation='User' name='[usr:Reb Per Minute (C) (copy)_1054968220058558468:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Reb Per Minute (C) (copy)_1054968220058558468:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Ast Per Minute (C)  (copy)_1054968220059107335:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' scope='rows' value='Assists Per Minute' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' />
              <text column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='12'>&lt;</run>
                <run bold='true' fontsize='12'>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]</run>
                <run bold='true' fontsize='12'>&gt;%</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values] + [federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values])</rows>
        <cols>([federated.1699iq40rx5wde11ykfjy117zi51].[none:pos:nk] / [federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{0AD39F80-5033-461B-9963-3084F655BE2E}' />
    </worksheet>
    <worksheet name='Average Points by Position'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='Percent Change (Points)' datatype='real' name='[Calculation_1054968220053663744]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Points Per Minute (C) (copy)_1054968220058722309]-[Calculation_1054968220057976834])/[Calculation_1054968220057976834]*100' />
            </column>
            <column caption='Points Per Minute (C)' datatype='real' name='[Calculation_1054968220057976834]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_pts])/AVG([c_mp])' />
            </column>
            <column caption='Points Per Minute (NBA)' datatype='real' name='[Points Per Minute (C) (copy)_1054968220058722309]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([pts])/AVG([mp])' />
            </column>
            <column caption='C Mp' datatype='real' name='[c_mp]' role='measure' type='quantitative' />
            <column caption='C Pts' datatype='real' name='[c_pts]' role='measure' type='quantitative' />
            <column caption='Mp' datatype='real' name='[mp]' role='measure' type='quantitative' />
            <column-instance column='[pos]' derivation='None' name='[none:pos:nk]' pivot='key' type='nominal' />
            <column caption='Pos' datatype='string' name='[pos]' role='dimension' type='nominal' />
            <column caption='Pts' datatype='real' name='[pts]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1054968220053663744]' derivation='User' name='[usr:Calculation_1054968220053663744:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1054968220057976834]' derivation='User' name='[usr:Calculation_1054968220057976834:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Points Per Minute (C) (copy)_1054968220058722309]' derivation='User' name='[usr:Points Per Minute (C) (copy)_1054968220058722309:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220057976834:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Points Per Minute (C) (copy)_1054968220058722309:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' scope='rows' value='Points Per Minute' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f6e8d7' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5822099447250366' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' />
              <text column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]</run>
                <run>&gt;%</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='11' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-range-min' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-line-first' value='false' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values] + [federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values])</rows>
        <cols>([federated.1699iq40rx5wde11ykfjy117zi51].[none:pos:nk] / [federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{1C4F3F5D-B1FC-4DDA-9889-E1A940140AD0}' />
    </worksheet>
    <worksheet name='Average Rebounds by Position '>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='Percent Change (Reb)' datatype='real' name='[Percent Change (Points) (copy)_166633194292793345]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Reb Per Minute (C) (copy)_1054968220058873862]-[Points Per Minute (copy)_1054968220058288131])/[Points Per Minute (copy)_1054968220058288131]*100' />
            </column>
            <column caption='Reb Per Minute (C)' datatype='real' name='[Points Per Minute (copy)_1054968220058288131]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_trb])/AVG([c_mp])' />
            </column>
            <column caption='Reb Per Minute (NBA) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058873862]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([trb])/AVG([mp])' />
            </column>
            <column caption='C Mp' datatype='real' name='[c_mp]' role='measure' type='quantitative' />
            <column caption='C Trb' datatype='real' name='[c_trb]' role='measure' type='quantitative' />
            <column caption='Mp' datatype='real' name='[mp]' role='measure' type='quantitative' />
            <column-instance column='[pos]' derivation='None' name='[none:pos:nk]' pivot='key' type='nominal' />
            <column caption='Pos' datatype='string' name='[pos]' role='dimension' type='nominal' />
            <column caption='Trb' datatype='real' name='[trb]' role='measure' type='quantitative' />
            <column-instance column='[Percent Change (Points) (copy)_166633194292793345]' derivation='User' name='[usr:Percent Change (Points) (copy)_166633194292793345:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Points Per Minute (copy)_1054968220058288131]' derivation='User' name='[usr:Points Per Minute (copy)_1054968220058288131:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Reb Per Minute (C) (copy)_1054968220058873862]' derivation='User' name='[usr:Reb Per Minute (C) (copy)_1054968220058873862:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Points Per Minute (copy)_1054968220058288131:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Reb Per Minute (C) (copy)_1054968220058873862:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='1' field='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' scope='rows' value='Rebounds Per Minute' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-weight' data-class='total' scope='rows' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-weight' value='normal' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='12' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' />
              <text column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='12'>&lt;</run>
                <run fontsize='12'>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]</run>
                <run fontsize='12'>&gt;%</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-line-first' value='false' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values] + [federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values])</rows>
        <cols>([federated.1699iq40rx5wde11ykfjy117zi51].[none:pos:nk] / [federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{80A3A0D1-F63C-48BC-83A8-A4C16FFA4D3C}' />
    </worksheet>
    <worksheet name='College Experience and Percent Change in Stats (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='Ast Per Minute (NBA)' datatype='real' name='[Ast Per Minute (C)  (copy)_1054968220059107335]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ast])/AVG([mp])' />
            </column>
            <column caption='Percent Change (Points)' datatype='real' name='[Calculation_1054968220053663744]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Points Per Minute (C) (copy)_1054968220058722309]-[Calculation_1054968220057976834])/[Calculation_1054968220057976834]*100' />
            </column>
            <column caption='Points Per Minute (C)' datatype='real' name='[Calculation_1054968220057976834]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_pts])/AVG([c_mp])' />
            </column>
            <column caption='Percent Change (Reb)' datatype='real' name='[Percent Change (Points) (copy)_166633194292793345]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Reb Per Minute (C) (copy)_1054968220058873862]-[Points Per Minute (copy)_1054968220058288131])/[Points Per Minute (copy)_1054968220058288131]*100' />
            </column>
            <column caption='Percent Change (Ast)' datatype='real' name='[Percent Change (Reb) (copy)_166633194295468034]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ast Per Minute (C)  (copy)_1054968220059107335]-[Reb Per Minute (C) (copy)_1054968220058558468])/[Reb Per Minute (C) (copy)_1054968220058558468]*100' />
            </column>
            <column caption='Points Per Minute (NBA)' datatype='real' name='[Points Per Minute (C) (copy)_1054968220058722309]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([pts])/AVG([mp])' />
            </column>
            <column caption='Reb Per Minute (C)' datatype='real' name='[Points Per Minute (copy)_1054968220058288131]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_trb])/AVG([c_mp])' />
            </column>
            <column caption='Ast Per Minute (C) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058558468]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_ast])/AVG([c_mp])' />
            </column>
            <column caption='Reb Per Minute (NBA) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058873862]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([trb])/AVG([mp])' />
            </column>
            <column caption='Ast' datatype='real' name='[ast]' role='measure' type='quantitative' />
            <column caption='C Ast' datatype='real' name='[c_ast]' role='measure' type='quantitative' />
            <column caption='C G' datatype='integer' name='[c_g]' role='measure' type='quantitative' />
            <column caption='C Mp' datatype='real' name='[c_mp]' role='measure' type='quantitative' />
            <column caption='C Pts' datatype='real' name='[c_pts]' role='measure' type='quantitative' />
            <column caption='C Trb' datatype='real' name='[c_trb]' role='measure' type='quantitative' />
            <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
            <column caption='Mp' datatype='real' name='[mp]' role='measure' type='quantitative' />
            <column-instance column='[g]' derivation='None' name='[none:g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player_id]' derivation='None' name='[none:player_id:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[player_id]' role='dimension' type='nominal' />
            <column caption='Pts' datatype='real' name='[pts]' role='measure' type='quantitative' />
            <column-instance column='[c_g]' derivation='Sum' name='[sum:c_g:qk]' pivot='key' type='quantitative' />
            <column caption='Trb' datatype='real' name='[trb]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1054968220053663744]' derivation='User' name='[usr:Calculation_1054968220053663744:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Points) (copy)_166633194292793345]' derivation='User' name='[usr:Percent Change (Points) (copy)_166633194292793345:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194295468034]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]' included-values='in-range'>
            <min>50</min>
            <max>833</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f6e8d7' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' value='#ffffff' />
            <format attr='stroke-size' value='3' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' />
              <lod column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60370165109634399' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='165' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-color' value='#000000' />
                <format attr='stroke-size' value='4' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]</rows>
        <cols>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_g:qk]</cols>
      </table>
      <simple-id uuid='{0508900B-5B29-4E95-9542-27F1E556AE93}' />
    </worksheet>
    <worksheet name='College PER and Percent Change (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='Ast Per Minute (NBA)' datatype='real' name='[Ast Per Minute (C)  (copy)_1054968220059107335]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ast])/AVG([mp])' />
            </column>
            <column caption='Percent Change (Points)' datatype='real' name='[Calculation_1054968220053663744]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Points Per Minute (C) (copy)_1054968220058722309]-[Calculation_1054968220057976834])/[Calculation_1054968220057976834]*100' />
            </column>
            <column caption='Points Per Minute (C)' datatype='real' name='[Calculation_1054968220057976834]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_pts])/AVG([c_mp])' />
            </column>
            <column caption='Percent Change (Reb)' datatype='real' name='[Percent Change (Points) (copy)_166633194292793345]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Reb Per Minute (C) (copy)_1054968220058873862]-[Points Per Minute (copy)_1054968220058288131])/[Points Per Minute (copy)_1054968220058288131]*100' />
            </column>
            <column caption='Percent Change (Ast)' datatype='real' name='[Percent Change (Reb) (copy)_166633194295468034]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ast Per Minute (C)  (copy)_1054968220059107335]-[Reb Per Minute (C) (copy)_1054968220058558468])/[Reb Per Minute (C) (copy)_1054968220058558468]*100' />
            </column>
            <column caption='Points Per Minute (NBA)' datatype='real' name='[Points Per Minute (C) (copy)_1054968220058722309]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([pts])/AVG([mp])' />
            </column>
            <column caption='Reb Per Minute (C)' datatype='real' name='[Points Per Minute (copy)_1054968220058288131]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_trb])/AVG([c_mp])' />
            </column>
            <column caption='Ast Per Minute (C) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058558468]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_ast])/AVG([c_mp])' />
            </column>
            <column caption='Reb Per Minute (NBA) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058873862]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([trb])/AVG([mp])' />
            </column>
            <column caption='Ast' datatype='real' name='[ast]' role='measure' type='quantitative' />
            <column caption='C Ast' datatype='real' name='[c_ast]' role='measure' type='quantitative' />
            <column caption='C Mp' datatype='real' name='[c_mp]' role='measure' type='quantitative' />
            <column caption='C Pts' datatype='real' name='[c_pts]' role='measure' type='quantitative' />
            <column caption='C Trb' datatype='real' name='[c_trb]' role='measure' type='quantitative' />
            <column datatype='real' name='[college_ws_game]' role='measure' type='quantitative' />
            <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
            <column caption='Mp' datatype='real' name='[mp]' role='measure' type='quantitative' />
            <column-instance column='[g]' derivation='None' name='[none:g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player_id]' derivation='None' name='[none:player_id:nk]' pivot='key' type='nominal' />
            <column caption='Per' datatype='real' name='[per]' role='measure' type='quantitative' />
            <column datatype='string' name='[player_id]' role='dimension' type='nominal' />
            <column caption='Pts' datatype='real' name='[pts]' role='measure' type='quantitative' />
            <column-instance column='[college_ws_game]' derivation='Sum' name='[sum:college_ws_game:qk]' pivot='key' type='quantitative' />
            <column-instance column='[per]' derivation='Sum' name='[sum:per:qk]' pivot='key' type='quantitative' />
            <column caption='Trb' datatype='real' name='[trb]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1054968220053663744]' derivation='User' name='[usr:Calculation_1054968220053663744:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Points) (copy)_166633194292793345]' derivation='User' name='[usr:Percent Change (Points) (copy)_166633194292793345:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194295468034]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]' included-values='in-range'>
            <min>50</min>
            <max>833</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:college_ws_game:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:college_ws_game:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' />
              <lod column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.8790607452392578' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='165' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='5' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]</rows>
        <cols>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:per:qk]</cols>
      </table>
      <simple-id uuid='{AE98F093-CC7E-406A-8F30-7FE0E0407BF5}' />
    </worksheet>
    <worksheet name='College PER and Percent Change (3)'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='Ast Per Minute (NBA)' datatype='real' name='[Ast Per Minute (C)  (copy)_1054968220059107335]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ast])/AVG([mp])' />
            </column>
            <column caption='Percent Change (Points)' datatype='real' name='[Calculation_1054968220053663744]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Points Per Minute (C) (copy)_1054968220058722309]-[Calculation_1054968220057976834])/[Calculation_1054968220057976834]*100' />
            </column>
            <column caption='Points Per Minute (C)' datatype='real' name='[Calculation_1054968220057976834]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_pts])/AVG([c_mp])' />
            </column>
            <column caption='Percent Change (Reb)' datatype='real' name='[Percent Change (Points) (copy)_166633194292793345]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Reb Per Minute (C) (copy)_1054968220058873862]-[Points Per Minute (copy)_1054968220058288131])/[Points Per Minute (copy)_1054968220058288131]*100' />
            </column>
            <column caption='Percent Change (Ast)' datatype='real' name='[Percent Change (Reb) (copy)_166633194295468034]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ast Per Minute (C)  (copy)_1054968220059107335]-[Reb Per Minute (C) (copy)_1054968220058558468])/[Reb Per Minute (C) (copy)_1054968220058558468]*100' />
            </column>
            <column caption='Points Per Minute (NBA)' datatype='real' name='[Points Per Minute (C) (copy)_1054968220058722309]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([pts])/AVG([mp])' />
            </column>
            <column caption='Reb Per Minute (C)' datatype='real' name='[Points Per Minute (copy)_1054968220058288131]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_trb])/AVG([c_mp])' />
            </column>
            <column caption='Ast Per Minute (C) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058558468]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_ast])/AVG([c_mp])' />
            </column>
            <column caption='Reb Per Minute (NBA) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058873862]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([trb])/AVG([mp])' />
            </column>
            <column caption='Ast' datatype='real' name='[ast]' role='measure' type='quantitative' />
            <column caption='C Ast' datatype='real' name='[c_ast]' role='measure' type='quantitative' />
            <column caption='C Mp' datatype='real' name='[c_mp]' role='measure' type='quantitative' />
            <column caption='C Pts' datatype='real' name='[c_pts]' role='measure' type='quantitative' />
            <column caption='C Trb' datatype='real' name='[c_trb]' role='measure' type='quantitative' />
            <column datatype='real' name='[college_ws_game]' role='measure' type='quantitative' />
            <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
            <column caption='Mp' datatype='real' name='[mp]' role='measure' type='quantitative' />
            <column-instance column='[g]' derivation='None' name='[none:g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player_id]' derivation='None' name='[none:player_id:nk]' pivot='key' type='nominal' />
            <column caption='Per' datatype='real' name='[per]' role='measure' type='quantitative' />
            <column datatype='string' name='[player_id]' role='dimension' type='nominal' />
            <column caption='Pts' datatype='real' name='[pts]' role='measure' type='quantitative' />
            <column-instance column='[college_ws_game]' derivation='Sum' name='[sum:college_ws_game:qk]' pivot='key' type='quantitative' />
            <column-instance column='[per]' derivation='Sum' name='[sum:per:qk]' pivot='key' type='quantitative' />
            <column caption='Trb' datatype='real' name='[trb]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1054968220053663744]' derivation='User' name='[usr:Calculation_1054968220053663744:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Points) (copy)_166633194292793345]' derivation='User' name='[usr:Percent Change (Points) (copy)_166633194292793345:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194295468034]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]' included-values='in-range'>
            <min>50</min>
            <max>833</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:college_ws_game:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:college_ws_game:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' />
              <lod column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.8790607452392578' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='165' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='5' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]</rows>
        <cols>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:per:qk]</cols>
      </table>
      <simple-id uuid='{FDAC9F3B-9CF7-4E63-B1D9-3A586E868FD5}' />
    </worksheet>
    <worksheet name='College WS and Percent Change'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='Ast Per Minute (NBA)' datatype='real' name='[Ast Per Minute (C)  (copy)_1054968220059107335]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ast])/AVG([mp])' />
            </column>
            <column caption='Percent Change (Points)' datatype='real' name='[Calculation_1054968220053663744]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Points Per Minute (C) (copy)_1054968220058722309]-[Calculation_1054968220057976834])/[Calculation_1054968220057976834]*100' />
            </column>
            <column caption='Points Per Minute (C)' datatype='real' name='[Calculation_1054968220057976834]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_pts])/AVG([c_mp])' />
            </column>
            <column caption='Percent Change (Reb)' datatype='real' name='[Percent Change (Points) (copy)_166633194292793345]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Reb Per Minute (C) (copy)_1054968220058873862]-[Points Per Minute (copy)_1054968220058288131])/[Points Per Minute (copy)_1054968220058288131]*100' />
            </column>
            <column caption='Percent Change (Ast)' datatype='real' name='[Percent Change (Reb) (copy)_166633194295468034]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ast Per Minute (C)  (copy)_1054968220059107335]-[Reb Per Minute (C) (copy)_1054968220058558468])/[Reb Per Minute (C) (copy)_1054968220058558468]*100' />
            </column>
            <column caption='Points Per Minute (NBA)' datatype='real' name='[Points Per Minute (C) (copy)_1054968220058722309]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([pts])/AVG([mp])' />
            </column>
            <column caption='Reb Per Minute (C)' datatype='real' name='[Points Per Minute (copy)_1054968220058288131]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_trb])/AVG([c_mp])' />
            </column>
            <column caption='Ast Per Minute (C) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058558468]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_ast])/AVG([c_mp])' />
            </column>
            <column caption='Reb Per Minute (NBA) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058873862]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([trb])/AVG([mp])' />
            </column>
            <column caption='Ast' datatype='real' name='[ast]' role='measure' type='quantitative' />
            <column caption='C Ast' datatype='real' name='[c_ast]' role='measure' type='quantitative' />
            <column caption='C Mp' datatype='real' name='[c_mp]' role='measure' type='quantitative' />
            <column caption='C Pts' datatype='real' name='[c_pts]' role='measure' type='quantitative' />
            <column caption='C Trb' datatype='real' name='[c_trb]' role='measure' type='quantitative' />
            <column datatype='real' name='[college_ws_game]' role='measure' type='quantitative' />
            <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
            <column caption='Mp' datatype='real' name='[mp]' role='measure' type='quantitative' />
            <column-instance column='[g]' derivation='None' name='[none:g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player_id]' derivation='None' name='[none:player_id:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[player_id]' role='dimension' type='nominal' />
            <column caption='Pts' datatype='real' name='[pts]' role='measure' type='quantitative' />
            <column-instance column='[college_ws_game]' derivation='Sum' name='[sum:college_ws_game:qk]' pivot='key' type='quantitative' />
            <column caption='Trb' datatype='real' name='[trb]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1054968220053663744]' derivation='User' name='[usr:Calculation_1054968220053663744:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Points) (copy)_166633194292793345]' derivation='User' name='[usr:Percent Change (Points) (copy)_166633194292793345:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194295468034]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]' included-values='in-range'>
            <min>50</min>
            <max>833</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:college_ws_game:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:college_ws_game:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' />
              <lod column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.8790607452392578' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='165' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='5' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]</rows>
        <cols>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:college_ws_game:qk]</cols>
      </table>
      <simple-id uuid='{7B4EC229-97EB-429E-8961-A32F6FFAE72D}' />
    </worksheet>
    <worksheet name='PER by Pick'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
            <column-instance column='[g]' derivation='None' name='[none:g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player]' derivation='None' name='[none:player:nk]' pivot='key' type='nominal' />
            <column caption='Per' datatype='real' name='[per]' role='measure' type='quantitative' />
            <column caption='Pk' datatype='integer' name='[pk]' role='measure' type='quantitative' />
            <column caption='Player' datatype='string' name='[player]' role='dimension' type='nominal' />
            <column-instance column='[per]' derivation='Sum' name='[sum:per:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pk]' derivation='Sum' name='[sum:pk:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]' included-values='in-range'>
            <min>50</min>
            <max>833</max>
          </filter>
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:player:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:per:qk]</rows>
        <cols>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:pk:qk]</cols>
      </table>
      <simple-id uuid='{C4607A96-E117-4846-AAD5-3FB5E11343F0}' />
    </worksheet>
    <worksheet name='Performance by Draft Round'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='2P%' datatype='real' name='[2p%]' role='measure' type='quantitative' />
            <column caption='3P%' datatype='real' name='[3p%]' role='measure' type='quantitative' />
            <column caption='3Pa' datatype='real' name='[3pa]' role='measure' type='quantitative' />
            <column caption='Calc (3P%) ' datatype='real' name='[Calc (2P%)  (copy)_166633194427719689]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([3p%])-WINDOW_MIN(SUM([3p%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([3p%]))-WINDOW_MIN(SUM([3p%])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Calc (2P%) ' datatype='real' name='[Calc (C_2P%)  (copy)_166633194427224071]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([2p%])-WINDOW_MIN(SUM([2p%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([2p%]))-WINDOW_MIN(SUM([2p%])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Calc (C_3P%)  ' datatype='real' name='[Calc (C_2P%)  (copy)_166633194427600904]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([c_3p%])-WINDOW_MIN(SUM([c_3p%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([c_3p%]))-WINDOW_MIN(SUM([c_3p%])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Calc (FG%) ' datatype='real' name='[Calc (C_FG%) (copy)_166633194426679300]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([fg%])-WINDOW_MIN(SUM([fg%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([fg%]))-WINDOW_MIN(SUM([fg%])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Calc (FT%)  ' datatype='real' name='[Calc (C_FT%)  (copy)_166633194428145675]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([ft%])-WINDOW_MIN(SUM([ft%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([ft%]))-WINDOW_MIN(SUM([ft%])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Calc (C_2P%) ' datatype='real' name='[Calc (FG%)  (copy)_166633194426802181]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([c_2p%])-WINDOW_MIN(SUM([c_2p%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([c_2p%]))-WINDOW_MIN(SUM([c_2p%])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Calc (C_FT%) ' datatype='real' name='[Calc (FG%)  (copy)_166633194427838474]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([c_ft%])-WINDOW_MIN(SUM([c_ft%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([c_ft%]))-WINDOW_MIN(SUM([c_ft%])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Calc (C_FG%)' datatype='real' name='[Calculation_166633194426298371]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([c_fg%])-WINDOW_MIN(SUM([c_fg%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([c_fg%]))-WINDOW_MIN(SUM([c_fg%])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='C 2P%' datatype='real' name='[c_2p%]' role='measure' type='quantitative' />
            <column caption='C 3P%' datatype='real' name='[c_3p%]' role='measure' type='quantitative' />
            <column caption='C 3Pa' datatype='real' name='[c_3pa]' role='measure' type='quantitative' />
            <column caption='C Fg%' datatype='real' name='[c_fg%]' role='measure' type='quantitative' />
            <column caption='C Ft%' datatype='real' name='[c_ft%]' role='measure' type='quantitative' />
            <column caption='C G' datatype='integer' name='[c_g]' role='measure' type='quantitative' />
            <column caption='Fg%' datatype='real' name='[fg%]' role='measure' type='quantitative' />
            <column caption='Ft%' datatype='real' name='[ft%]' role='measure' type='quantitative' />
            <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
            <column-instance column='[3pa]' derivation='None' name='[none:3pa:qk]' pivot='key' type='quantitative' />
            <column-instance column='[c_3pa]' derivation='None' name='[none:c_3pa:qk]' pivot='key' type='quantitative' />
            <column-instance column='[c_g]' derivation='None' name='[none:c_g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[g]' derivation='None' name='[none:g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player_id]' derivation='None' name='[none:player_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[round]' derivation='None' name='[none:round:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[player_id]' role='dimension' type='nominal' />
            <column datatype='string' name='[round]' role='dimension' type='nominal' />
            <column-instance column='[Calc (2P%)  (copy)_166633194427719689]' derivation='User' name='[usr:Calc (2P%)  (copy)_166633194427719689:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1699iq40rx5wde11ykfjy117zi51].[player_id]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calc (C_2P%)  (copy)_166633194427224071]' derivation='User' name='[usr:Calc (C_2P%)  (copy)_166633194427224071:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1699iq40rx5wde11ykfjy117zi51].[player_id]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calc (C_2P%)  (copy)_166633194427600904]' derivation='User' name='[usr:Calc (C_2P%)  (copy)_166633194427600904:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1699iq40rx5wde11ykfjy117zi51].[player_id]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calc (C_FG%) (copy)_166633194426679300]' derivation='User' name='[usr:Calc (C_FG%) (copy)_166633194426679300:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1699iq40rx5wde11ykfjy117zi51].[player_id]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calc (C_FT%)  (copy)_166633194428145675]' derivation='User' name='[usr:Calc (C_FT%)  (copy)_166633194428145675:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1699iq40rx5wde11ykfjy117zi51].[player_id]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calc (FG%)  (copy)_166633194426802181]' derivation='User' name='[usr:Calc (FG%)  (copy)_166633194426802181:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1699iq40rx5wde11ykfjy117zi51].[player_id]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calc (FG%)  (copy)_166633194427838474]' derivation='User' name='[usr:Calc (FG%)  (copy)_166633194427838474:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1699iq40rx5wde11ykfjy117zi51].[player_id]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_166633194426298371]' derivation='User' name='[usr:Calculation_166633194426298371:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1699iq40rx5wde11ykfjy117zi51].[player_id]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_166633194426298371:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (FG\%)  (copy)_166633194426802181:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_2P\%)  (copy)_166633194427600904:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (FG\%)  (copy)_166633194427838474:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_FG\%) (copy)_166633194426679300:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_2P\%)  (copy)_166633194427224071:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (2P\%)  (copy)_166633194427719689:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_FT\%)  (copy)_166633194428145675:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_166633194426298371:qk:2]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (FG\%)  (copy)_166633194426802181:qk:2]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_2P\%)  (copy)_166633194427600904:qk:2]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (FG\%)  (copy)_166633194427838474:qk:2]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_FG\%) (copy)_166633194426679300:qk:2]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_2P\%)  (copy)_166633194427224071:qk:2]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (2P\%)  (copy)_166633194427719689:qk:2]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_FT\%)  (copy)_166633194428145675:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:3pa:qk]' included-values='in-range'>
            <min>1.0</min>
            <max>8.0999999999999996</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_3pa:qk]' included-values='in-range'>
            <min>1.0</min>
            <max>10.300000000000001</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_g:qk]' included-values='in-range'>
            <min>25</min>
            <max>146</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]' included-values='in-range'>
            <min>50</min>
            <max>833</max>
          </filter>
          <manual-sort column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:round:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;lottery&quot;</bucket>
              <bucket>&quot;first&quot;</bucket>
              <bucket>&quot;second&quot;</bucket>
              <bucket>&quot;undrafted&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_3pa:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:3pa:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' field-type='quantitative' max='1.0515137614678898' min='-0.051513761467889906' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='1' field='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:round:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.053977899253368378' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:round:nk]' />
              <lod column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.031988948583602905' />
                <format attr='mark-transparency' value='126' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:round:nk]' />
              <path column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.031988948583602905' />
                <format attr='mark-color' value='#666666' />
                <format attr='mark-transparency' value='132' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values] + [federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values])</rows>
        <cols>[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{A02B14E4-9503-4A8D-8163-4BC0698722B8}' />
    </worksheet>
    <worksheet name='Performance by Position'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='2P%' datatype='real' name='[2p%]' role='measure' type='quantitative' />
            <column caption='3P%' datatype='real' name='[3p%]' role='measure' type='quantitative' />
            <column caption='3Pa' datatype='real' name='[3pa]' role='measure' type='quantitative' />
            <column caption='Calc (3P%) ' datatype='real' name='[Calc (2P%)  (copy)_166633194427719689]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([3p%])-WINDOW_MIN(SUM([3p%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([3p%]))-WINDOW_MIN(SUM([3p%])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Calc (2P%) ' datatype='real' name='[Calc (C_2P%)  (copy)_166633194427224071]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([2p%])-WINDOW_MIN(SUM([2p%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([2p%]))-WINDOW_MIN(SUM([2p%])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Calc (C_3P%)  ' datatype='real' name='[Calc (C_2P%)  (copy)_166633194427600904]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([c_3p%])-WINDOW_MIN(SUM([c_3p%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([c_3p%]))-WINDOW_MIN(SUM([c_3p%])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Calc (FG%) ' datatype='real' name='[Calc (C_FG%) (copy)_166633194426679300]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([fg%])-WINDOW_MIN(SUM([fg%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([fg%]))-WINDOW_MIN(SUM([fg%])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Calc (FT%)  ' datatype='real' name='[Calc (C_FT%)  (copy)_166633194428145675]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([ft%])-WINDOW_MIN(SUM([ft%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([ft%]))-WINDOW_MIN(SUM([ft%])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Calc (C_2P%) ' datatype='real' name='[Calc (FG%)  (copy)_166633194426802181]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([c_2p%])-WINDOW_MIN(SUM([c_2p%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([c_2p%]))-WINDOW_MIN(SUM([c_2p%])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Calc (C_FT%) ' datatype='real' name='[Calc (FG%)  (copy)_166633194427838474]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([c_ft%])-WINDOW_MIN(SUM([c_ft%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([c_ft%]))-WINDOW_MIN(SUM([c_ft%])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Calc (C_FG%)' datatype='real' name='[Calculation_166633194426298371]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([c_fg%])-WINDOW_MIN(SUM([c_fg%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([c_fg%]))-WINDOW_MIN(SUM([c_fg%])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='C 2P%' datatype='real' name='[c_2p%]' role='measure' type='quantitative' />
            <column caption='C 3P%' datatype='real' name='[c_3p%]' role='measure' type='quantitative' />
            <column caption='C 3Pa' datatype='real' name='[c_3pa]' role='measure' type='quantitative' />
            <column caption='C Fg%' datatype='real' name='[c_fg%]' role='measure' type='quantitative' />
            <column caption='C Ft%' datatype='real' name='[c_ft%]' role='measure' type='quantitative' />
            <column caption='C G' datatype='integer' name='[c_g]' role='measure' type='quantitative' />
            <column caption='Fg%' datatype='real' name='[fg%]' role='measure' type='quantitative' />
            <column caption='Ft%' datatype='real' name='[ft%]' role='measure' type='quantitative' />
            <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
            <column-instance column='[3pa]' derivation='None' name='[none:3pa:qk]' pivot='key' type='quantitative' />
            <column-instance column='[c_3pa]' derivation='None' name='[none:c_3pa:qk]' pivot='key' type='quantitative' />
            <column-instance column='[c_g]' derivation='None' name='[none:c_g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[g]' derivation='None' name='[none:g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player_id]' derivation='None' name='[none:player_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[pos]' derivation='None' name='[none:pos:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[player_id]' role='dimension' type='nominal' />
            <column caption='Pos' datatype='string' name='[pos]' role='dimension' type='nominal' />
            <column-instance column='[Calc (2P%)  (copy)_166633194427719689]' derivation='User' name='[usr:Calc (2P%)  (copy)_166633194427719689:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1699iq40rx5wde11ykfjy117zi51].[player_id]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calc (C_2P%)  (copy)_166633194427224071]' derivation='User' name='[usr:Calc (C_2P%)  (copy)_166633194427224071:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1699iq40rx5wde11ykfjy117zi51].[player_id]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calc (C_2P%)  (copy)_166633194427600904]' derivation='User' name='[usr:Calc (C_2P%)  (copy)_166633194427600904:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1699iq40rx5wde11ykfjy117zi51].[player_id]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calc (C_FG%) (copy)_166633194426679300]' derivation='User' name='[usr:Calc (C_FG%) (copy)_166633194426679300:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1699iq40rx5wde11ykfjy117zi51].[player_id]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calc (C_FT%)  (copy)_166633194428145675]' derivation='User' name='[usr:Calc (C_FT%)  (copy)_166633194428145675:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1699iq40rx5wde11ykfjy117zi51].[player_id]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calc (FG%)  (copy)_166633194426802181]' derivation='User' name='[usr:Calc (FG%)  (copy)_166633194426802181:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1699iq40rx5wde11ykfjy117zi51].[player_id]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calc (FG%)  (copy)_166633194427838474]' derivation='User' name='[usr:Calc (FG%)  (copy)_166633194427838474:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1699iq40rx5wde11ykfjy117zi51].[player_id]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_166633194426298371]' derivation='User' name='[usr:Calculation_166633194426298371:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1699iq40rx5wde11ykfjy117zi51].[player_id]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_166633194426298371:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (FG\%)  (copy)_166633194426802181:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_2P\%)  (copy)_166633194427600904:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (FG\%)  (copy)_166633194427838474:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_FG\%) (copy)_166633194426679300:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_2P\%)  (copy)_166633194427224071:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (2P\%)  (copy)_166633194427719689:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_FT\%)  (copy)_166633194428145675:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_166633194426298371:qk:2]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (FG\%)  (copy)_166633194426802181:qk:2]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_2P\%)  (copy)_166633194427600904:qk:2]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (FG\%)  (copy)_166633194427838474:qk:2]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_FG\%) (copy)_166633194426679300:qk:2]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_2P\%)  (copy)_166633194427224071:qk:2]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (2P\%)  (copy)_166633194427719689:qk:2]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calc (C_FT\%)  (copy)_166633194428145675:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:3pa:qk]' included-values='in-range'>
            <min>1.0</min>
            <max>8.0999999999999996</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_3pa:qk]' included-values='in-range'>
            <min>1.0</min>
            <max>10.300000000000001</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_g:qk]' included-values='in-range'>
            <min>25</min>
            <max>146</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]' included-values='in-range'>
            <min>50</min>
            <max>833</max>
          </filter>
          <manual-sort column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:pos:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;C&quot;</bucket>
              <bucket>&quot;C-F&quot;</bucket>
              <bucket>&quot;F&quot;</bucket>
              <bucket>&quot;F-C&quot;</bucket>
              <bucket>&quot;F-G&quot;</bucket>
              <bucket>&quot;G&quot;</bucket>
              <bucket>&quot;G-F&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_3pa:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:3pa:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' field-type='quantitative' max='1.0515137614678898' min='-0.051513761467889906' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='1' field='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:pos:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.053977899253368378' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:pos:nk]' />
              <lod column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.031988948583602905' />
                <format attr='mark-transparency' value='126' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:pos:nk]' />
              <path column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.031988948583602905' />
                <format attr='mark-color' value='#666666' />
                <format attr='mark-transparency' value='132' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values] + [federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values])</rows>
        <cols>[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{1AFB11AB-0419-44D8-85BE-A8A797EE022C}' />
    </worksheet>
    <worksheet name='Playmaking (AST)'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='Ast Per Minute (NBA)' datatype='real' name='[Ast Per Minute (C)  (copy)_1054968220059107335]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ast])/AVG([mp])' />
            </column>
            <column caption='Percent Change (ORB)' datatype='real' name='[Percent Change (DRB) (copy)_166633194496200733]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([orb]/[mp])-[c_orb]/[c_mp])/([c_orb]/[c_mp])*100' />
            </column>
            <column caption='Percent Change (Reb)' datatype='real' name='[Percent Change (Points) (copy)_166633194292793345]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Reb Per Minute (C) (copy)_1054968220058873862]-[Points Per Minute (copy)_1054968220058288131])/[Points Per Minute (copy)_1054968220058288131]*100' />
            </column>
            <column caption='Percent Change (Ast)' datatype='real' name='[Percent Change (Reb) (copy)_166633194295468034]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ast Per Minute (C)  (copy)_1054968220059107335]-[Reb Per Minute (C) (copy)_1054968220058558468])/[Reb Per Minute (C) (copy)_1054968220058558468]*100' />
            </column>
            <column caption='Percent Change (DRB)' datatype='real' name='[Percent Change (Reb) (copy)_166633194495496218]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([drb]/[mp])-[c_drb]/[c_mp])/([c_drb]/[c_mp])*100' />
            </column>
            <column caption='Reb Per Minute (C)' datatype='real' name='[Points Per Minute (copy)_1054968220058288131]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_trb])/AVG([c_mp])' />
            </column>
            <column caption='Ast Per Minute (C) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058558468]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_ast])/AVG([c_mp])' />
            </column>
            <column caption='Reb Per Minute (NBA) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058873862]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([trb])/AVG([mp])' />
            </column>
            <column caption='Ast' datatype='real' name='[ast]' role='measure' type='quantitative' />
            <column caption='C Ast' datatype='real' name='[c_ast]' role='measure' type='quantitative' />
            <column caption='C Drb' datatype='real' name='[c_drb]' role='measure' type='quantitative' />
            <column caption='C Mp' datatype='real' name='[c_mp]' role='measure' type='quantitative' />
            <column caption='C Orb' datatype='real' name='[c_orb]' role='measure' type='quantitative' />
            <column caption='C Trb' datatype='real' name='[c_trb]' role='measure' type='quantitative' />
            <column caption='Drb' datatype='real' name='[drb]' role='measure' type='quantitative' />
            <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
            <column caption='Mp' datatype='real' name='[mp]' role='measure' type='quantitative' />
            <column-instance column='[g]' derivation='None' name='[none:g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player_id]' derivation='None' name='[none:player_id:nk]' pivot='key' type='nominal' />
            <column caption='Orb' datatype='real' name='[orb]' role='measure' type='quantitative' />
            <column datatype='string' name='[player_id]' role='dimension' type='nominal' />
            <column-instance column='[Percent Change (DRB) (copy)_166633194496200733]' derivation='Sum' name='[sum:Percent Change (DRB) (copy)_166633194496200733:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194495496218]' derivation='Sum' name='[sum:Percent Change (Reb) (copy)_166633194495496218:qk]' pivot='key' type='quantitative' />
            <column caption='Trb' datatype='real' name='[trb]' role='measure' type='quantitative' />
            <column-instance column='[Percent Change (Points) (copy)_166633194292793345]' derivation='User' name='[usr:Percent Change (Points) (copy)_166633194292793345:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194295468034]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Reb Per Minute (C) (copy)_1054968220058558468]' derivation='User' name='[usr:Reb Per Minute (C) (copy)_1054968220058558468:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]' included-values='in-range'>
            <min>50</min>
            <max>833</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (DRB) (copy)_166633194496200733:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (Reb) (copy)_166633194495496218:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (DRB) (copy)_166633194496200733:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (Reb) (copy)_166633194495496218:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' />
              <lod column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='165' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='5' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]</rows>
        <cols>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Reb Per Minute (C) (copy)_1054968220058558468:qk]</cols>
      </table>
      <simple-id uuid='{916667C3-0E29-49BF-887C-F29C7C3D9C19}' />
    </worksheet>
    <worksheet name='Playmaking (Blocks)'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='2P' datatype='real' name='[2p]' role='measure' type='quantitative' />
            <column caption='Ast Per Minute (NBA)' datatype='real' name='[Ast Per Minute (C)  (copy)_1054968220059107335]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ast])/AVG([mp])' />
            </column>
            <column caption='Blocks Per Minute (C)  ' datatype='real' name='[Ast Per Minute (C)  (copy)_166633194469158927]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_blk])/AVG([c_mp])' />
            </column>
            <column caption='Blocks Per Minute (NBA)' datatype='real' name='[Blocks Per Minute (NBA)  (copy)_166633194488737814]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([2p])/AVG([mp])' />
            </column>
            <column caption='Blk % Change ' datatype='real' name='[Percent Change (Ast) (copy)_166633194469371920]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Blocks Per Minute (NBA)  (copy)_166633194488737814]-[Ast Per Minute (C)  (copy)_166633194469158927])/[Ast Per Minute (C)  (copy)_166633194469158927]*100' />
            </column>
            <column caption='Percent Change (ORB)' datatype='real' name='[Percent Change (DRB) (copy)_166633194496200733]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([orb]/[mp])-[c_orb]/[c_mp])/([c_orb]/[c_mp])*100' />
            </column>
            <column caption='Percent Change (Reb)' datatype='real' name='[Percent Change (Points) (copy)_166633194292793345]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Reb Per Minute (C) (copy)_1054968220058873862]-[Points Per Minute (copy)_1054968220058288131])/[Points Per Minute (copy)_1054968220058288131]*100' />
            </column>
            <column caption='Percent Change (Ast)' datatype='real' name='[Percent Change (Reb) (copy)_166633194295468034]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ast Per Minute (C)  (copy)_1054968220059107335]-[Reb Per Minute (C) (copy)_1054968220058558468])/[Reb Per Minute (C) (copy)_1054968220058558468]*100' />
            </column>
            <column caption='Percent Change (DRB)' datatype='real' name='[Percent Change (Reb) (copy)_166633194495496218]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([drb]/[mp])-[c_drb]/[c_mp])/([c_drb]/[c_mp])*100' />
            </column>
            <column caption='Reb Per Minute (C)' datatype='real' name='[Points Per Minute (copy)_1054968220058288131]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_trb])/AVG([c_mp])' />
            </column>
            <column caption='Ast Per Minute (C) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058558468]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_ast])/AVG([c_mp])' />
            </column>
            <column caption='Reb Per Minute (NBA) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058873862]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([trb])/AVG([mp])' />
            </column>
            <column caption='Ast' datatype='real' name='[ast]' role='measure' type='quantitative' />
            <column caption='C Ast' datatype='real' name='[c_ast]' role='measure' type='quantitative' />
            <column caption='C Blk' datatype='real' name='[c_blk]' role='measure' type='quantitative' />
            <column caption='C Drb' datatype='real' name='[c_drb]' role='measure' type='quantitative' />
            <column caption='C Mp' datatype='real' name='[c_mp]' role='measure' type='quantitative' />
            <column caption='C Orb' datatype='real' name='[c_orb]' role='measure' type='quantitative' />
            <column caption='C Trb' datatype='real' name='[c_trb]' role='measure' type='quantitative' />
            <column caption='Drb' datatype='real' name='[drb]' role='measure' type='quantitative' />
            <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
            <column caption='Mp' datatype='real' name='[mp]' role='measure' type='quantitative' />
            <column-instance column='[g]' derivation='None' name='[none:g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player_id]' derivation='None' name='[none:player_id:nk]' pivot='key' type='nominal' />
            <column caption='Orb' datatype='real' name='[orb]' role='measure' type='quantitative' />
            <column datatype='string' name='[player_id]' role='dimension' type='nominal' />
            <column-instance column='[Percent Change (DRB) (copy)_166633194496200733]' derivation='Sum' name='[sum:Percent Change (DRB) (copy)_166633194496200733:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194495496218]' derivation='Sum' name='[sum:Percent Change (Reb) (copy)_166633194495496218:qk]' pivot='key' type='quantitative' />
            <column caption='Trb' datatype='real' name='[trb]' role='measure' type='quantitative' />
            <column-instance column='[Ast Per Minute (C)  (copy)_166633194469158927]' derivation='User' name='[usr:Ast Per Minute (C)  (copy)_166633194469158927:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Ast) (copy)_166633194469371920]' derivation='User' name='[usr:Percent Change (Ast) (copy)_166633194469371920:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Points) (copy)_166633194292793345]' derivation='User' name='[usr:Percent Change (Points) (copy)_166633194292793345:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194295468034]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]' included-values='in-range'>
            <min>50</min>
            <max>833</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (DRB) (copy)_166633194496200733:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (Reb) (copy)_166633194495496218:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Ast) (copy)_166633194469371920:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (DRB) (copy)_166633194496200733:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (Reb) (copy)_166633194495496218:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Ast) (copy)_166633194469371920:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' palette='red_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Ast) (copy)_166633194469371920:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Ast) (copy)_166633194469371920:qk]' />
              <lod column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='165' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='5' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Ast) (copy)_166633194469371920:qk]</rows>
        <cols>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Ast Per Minute (C)  (copy)_166633194469158927:qk]</cols>
      </table>
      <simple-id uuid='{0989273E-D5E3-484E-BBAA-E2870B75ECCC}' />
    </worksheet>
    <worksheet name='Playmaking (Steals)'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='Ast Per Minute (NBA)' datatype='real' name='[Ast Per Minute (C)  (copy)_1054968220059107335]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ast])/AVG([mp])' />
            </column>
            <column caption='Percent Change (ORB)' datatype='real' name='[Percent Change (DRB) (copy)_166633194496200733]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([orb]/[mp])-[c_orb]/[c_mp])/([c_orb]/[c_mp])*100' />
            </column>
            <column caption='Percent Change (Stl)' datatype='real' name='[Percent Change (ORB) (copy)_166633194500960289]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([stl]/[mp])-[c_stl]/[c_mp])/([c_stl]/[c_mp])*100' />
            </column>
            <column caption='Percent Change (Reb)' datatype='real' name='[Percent Change (Points) (copy)_166633194292793345]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Reb Per Minute (C) (copy)_1054968220058873862]-[Points Per Minute (copy)_1054968220058288131])/[Points Per Minute (copy)_1054968220058288131]*100' />
            </column>
            <column caption='Percent Change (Ast)' datatype='real' name='[Percent Change (Reb) (copy)_166633194295468034]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ast Per Minute (C)  (copy)_1054968220059107335]-[Reb Per Minute (C) (copy)_1054968220058558468])/[Reb Per Minute (C) (copy)_1054968220058558468]*100' />
            </column>
            <column caption='Percent Change (DRB)' datatype='real' name='[Percent Change (Reb) (copy)_166633194495496218]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([drb]/[mp])-[c_drb]/[c_mp])/([c_drb]/[c_mp])*100' />
            </column>
            <column caption='Reb Per Minute (C)' datatype='real' name='[Points Per Minute (copy)_1054968220058288131]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_trb])/AVG([c_mp])' />
            </column>
            <column caption='Ast Per Minute (C) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058558468]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_ast])/AVG([c_mp])' />
            </column>
            <column caption='Reb Per Minute (NBA) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058873862]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([trb])/AVG([mp])' />
            </column>
            <column caption='Stl Per Minute (C)' datatype='real' name='[Reb Per Minute (C) (copy)_166633194500448287]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_stl])/AVG([c_mp])' />
            </column>
            <column caption='Ast' datatype='real' name='[ast]' role='measure' type='quantitative' />
            <column caption='C Ast' datatype='real' name='[c_ast]' role='measure' type='quantitative' />
            <column caption='C Drb' datatype='real' name='[c_drb]' role='measure' type='quantitative' />
            <column caption='C Mp' datatype='real' name='[c_mp]' role='measure' type='quantitative' />
            <column caption='C Orb' datatype='real' name='[c_orb]' role='measure' type='quantitative' />
            <column caption='C Stl' datatype='real' name='[c_stl]' role='measure' type='quantitative' />
            <column caption='C Trb' datatype='real' name='[c_trb]' role='measure' type='quantitative' />
            <column caption='Drb' datatype='real' name='[drb]' role='measure' type='quantitative' />
            <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
            <column caption='Mp' datatype='real' name='[mp]' role='measure' type='quantitative' />
            <column-instance column='[g]' derivation='None' name='[none:g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player_id]' derivation='None' name='[none:player_id:nk]' pivot='key' type='nominal' />
            <column caption='Orb' datatype='real' name='[orb]' role='measure' type='quantitative' />
            <column datatype='string' name='[player_id]' role='dimension' type='nominal' />
            <column caption='Stl' datatype='real' name='[stl]' role='measure' type='quantitative' />
            <column-instance column='[Percent Change (DRB) (copy)_166633194496200733]' derivation='Sum' name='[sum:Percent Change (DRB) (copy)_166633194496200733:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (ORB) (copy)_166633194500960289]' derivation='Sum' name='[sum:Percent Change (ORB) (copy)_166633194500960289:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194495496218]' derivation='Sum' name='[sum:Percent Change (Reb) (copy)_166633194495496218:qk]' pivot='key' type='quantitative' />
            <column caption='Trb' datatype='real' name='[trb]' role='measure' type='quantitative' />
            <column-instance column='[Percent Change (Points) (copy)_166633194292793345]' derivation='User' name='[usr:Percent Change (Points) (copy)_166633194292793345:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194295468034]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Reb Per Minute (C) (copy)_166633194500448287]' derivation='User' name='[usr:Reb Per Minute (C) (copy)_166633194500448287:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]' included-values='in-range'>
            <min>50</min>
            <max>833</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (DRB) (copy)_166633194496200733:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (Reb) (copy)_166633194495496218:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (DRB) (copy)_166633194496200733:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (Reb) (copy)_166633194495496218:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' palette='red_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (ORB) (copy)_166633194500960289:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (ORB) (copy)_166633194500960289:qk]' />
              <lod column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='165' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='5' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (ORB) (copy)_166633194500960289:qk]</rows>
        <cols>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Reb Per Minute (C) (copy)_166633194500448287:qk]</cols>
      </table>
      <simple-id uuid='{3805F291-980D-4B0A-B638-5D3C6F0A5F1E}' />
    </worksheet>
    <worksheet name='Playmaking (TO)'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='TO Per Minute (C)' datatype='real' name='[2P Per Minute (C)  (copy)_166633194503729186]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_tov])/AVG([c_mp])' />
            </column>
            <column caption='2P' datatype='real' name='[2p]' role='measure' type='quantitative' />
            <column caption='Ast Per Minute (NBA)' datatype='real' name='[Ast Per Minute (C)  (copy)_1054968220059107335]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ast])/AVG([mp])' />
            </column>
            <column caption='Blocks Per Minute (C)  ' datatype='real' name='[Ast Per Minute (C)  (copy)_166633194469158927]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_blk])/AVG([c_mp])' />
            </column>
            <column caption='Blocks Per Minute (NBA)' datatype='real' name='[Blocks Per Minute (NBA)  (copy)_166633194488737814]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([2p])/AVG([mp])' />
            </column>
            <column caption='Blk % Change ' datatype='real' name='[Percent Change (Ast) (copy)_166633194469371920]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Blocks Per Minute (NBA)  (copy)_166633194488737814]-[Ast Per Minute (C)  (copy)_166633194469158927])/[Ast Per Minute (C)  (copy)_166633194469158927]*100' />
            </column>
            <column caption='Percent Change (ORB)' datatype='real' name='[Percent Change (DRB) (copy)_166633194496200733]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([orb]/[mp])-[c_orb]/[c_mp])/([c_orb]/[c_mp])*100' />
            </column>
            <column caption='Percent Change (Reb)' datatype='real' name='[Percent Change (Points) (copy)_166633194292793345]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Reb Per Minute (C) (copy)_1054968220058873862]-[Points Per Minute (copy)_1054968220058288131])/[Points Per Minute (copy)_1054968220058288131]*100' />
            </column>
            <column caption='Percent Change (Ast)' datatype='real' name='[Percent Change (Reb) (copy)_166633194295468034]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ast Per Minute (C)  (copy)_1054968220059107335]-[Reb Per Minute (C) (copy)_1054968220058558468])/[Reb Per Minute (C) (copy)_1054968220058558468]*100' />
            </column>
            <column caption='Percent Change (DRB)' datatype='real' name='[Percent Change (Reb) (copy)_166633194495496218]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([drb]/[mp])-[c_drb]/[c_mp])/([c_drb]/[c_mp])*100' />
            </column>
            <column caption='Percent Change (TO) ' datatype='real' name='[Percent Change (Stl) (copy)_166633194504069155]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([tov]/[mp])-[c_tov]/[c_mp])/([c_tov]/[c_mp])*100' />
            </column>
            <column caption='Reb Per Minute (C)' datatype='real' name='[Points Per Minute (copy)_1054968220058288131]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_trb])/AVG([c_mp])' />
            </column>
            <column caption='Ast Per Minute (C) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058558468]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_ast])/AVG([c_mp])' />
            </column>
            <column caption='Reb Per Minute (NBA) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058873862]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([trb])/AVG([mp])' />
            </column>
            <column caption='Ast' datatype='real' name='[ast]' role='measure' type='quantitative' />
            <column caption='C Ast' datatype='real' name='[c_ast]' role='measure' type='quantitative' />
            <column caption='C Blk' datatype='real' name='[c_blk]' role='measure' type='quantitative' />
            <column caption='C Drb' datatype='real' name='[c_drb]' role='measure' type='quantitative' />
            <column caption='C Mp' datatype='real' name='[c_mp]' role='measure' type='quantitative' />
            <column caption='C Orb' datatype='real' name='[c_orb]' role='measure' type='quantitative' />
            <column caption='C Tov' datatype='real' name='[c_tov]' role='measure' type='quantitative' />
            <column caption='C Trb' datatype='real' name='[c_trb]' role='measure' type='quantitative' />
            <column caption='Drb' datatype='real' name='[drb]' role='measure' type='quantitative' />
            <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
            <column caption='Mp' datatype='real' name='[mp]' role='measure' type='quantitative' />
            <column-instance column='[g]' derivation='None' name='[none:g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player_id]' derivation='None' name='[none:player_id:nk]' pivot='key' type='nominal' />
            <column caption='Orb' datatype='real' name='[orb]' role='measure' type='quantitative' />
            <column datatype='string' name='[player_id]' role='dimension' type='nominal' />
            <column-instance column='[Percent Change (DRB) (copy)_166633194496200733]' derivation='Sum' name='[sum:Percent Change (DRB) (copy)_166633194496200733:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194495496218]' derivation='Sum' name='[sum:Percent Change (Reb) (copy)_166633194495496218:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Stl) (copy)_166633194504069155]' derivation='Sum' name='[sum:Percent Change (Stl) (copy)_166633194504069155:qk]' pivot='key' type='quantitative' />
            <column caption='Tov' datatype='real' name='[tov]' role='measure' type='quantitative' />
            <column caption='Trb' datatype='real' name='[trb]' role='measure' type='quantitative' />
            <column-instance column='[2P Per Minute (C)  (copy)_166633194503729186]' derivation='User' name='[usr:2P Per Minute (C)  (copy)_166633194503729186:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Ast) (copy)_166633194469371920]' derivation='User' name='[usr:Percent Change (Ast) (copy)_166633194469371920:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Points) (copy)_166633194292793345]' derivation='User' name='[usr:Percent Change (Points) (copy)_166633194292793345:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194295468034]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]' included-values='in-range'>
            <min>50</min>
            <max>833</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (DRB) (copy)_166633194496200733:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (Reb) (copy)_166633194495496218:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Ast) (copy)_166633194469371920:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (DRB) (copy)_166633194496200733:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (Reb) (copy)_166633194495496218:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Ast) (copy)_166633194469371920:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' palette='red_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Ast) (copy)_166633194469371920:qk]' palette='red_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (Stl) (copy)_166633194504069155:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (Stl) (copy)_166633194504069155:qk]' />
              <lod column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='165' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='5' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (Stl) (copy)_166633194504069155:qk]</rows>
        <cols>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:2P Per Minute (C)  (copy)_166633194503729186:qk]</cols>
      </table>
      <simple-id uuid='{95ACF526-DCA1-4D27-8120-5E62BE7F1CBC}' />
    </worksheet>
    <worksheet name='Rebounding (Reb)'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='Percent Change (ORB)' datatype='real' name='[Percent Change (DRB) (copy)_166633194496200733]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([orb]/[mp])-[c_orb]/[c_mp])/([c_orb]/[c_mp])*100' />
            </column>
            <column caption='Percent Change (Reb)' datatype='real' name='[Percent Change (Points) (copy)_166633194292793345]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Reb Per Minute (C) (copy)_1054968220058873862]-[Points Per Minute (copy)_1054968220058288131])/[Points Per Minute (copy)_1054968220058288131]*100' />
            </column>
            <column caption='Percent Change (DRB)' datatype='real' name='[Percent Change (Reb) (copy)_166633194495496218]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([drb]/[mp])-[c_drb]/[c_mp])/([c_drb]/[c_mp])*100' />
            </column>
            <column caption='Reb Per Minute (C)' datatype='real' name='[Points Per Minute (copy)_1054968220058288131]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_trb])/AVG([c_mp])' />
            </column>
            <column caption='Reb Per Minute (NBA) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058873862]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([trb])/AVG([mp])' />
            </column>
            <column caption='C Drb' datatype='real' name='[c_drb]' role='measure' type='quantitative' />
            <column caption='C Mp' datatype='real' name='[c_mp]' role='measure' type='quantitative' />
            <column caption='C Orb' datatype='real' name='[c_orb]' role='measure' type='quantitative' />
            <column caption='C Trb' datatype='real' name='[c_trb]' role='measure' type='quantitative' />
            <column caption='Drb' datatype='real' name='[drb]' role='measure' type='quantitative' />
            <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
            <column caption='Mp' datatype='real' name='[mp]' role='measure' type='quantitative' />
            <column-instance column='[g]' derivation='None' name='[none:g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player_id]' derivation='None' name='[none:player_id:nk]' pivot='key' type='nominal' />
            <column caption='Orb' datatype='real' name='[orb]' role='measure' type='quantitative' />
            <column datatype='string' name='[player_id]' role='dimension' type='nominal' />
            <column-instance column='[Percent Change (DRB) (copy)_166633194496200733]' derivation='Sum' name='[sum:Percent Change (DRB) (copy)_166633194496200733:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194495496218]' derivation='Sum' name='[sum:Percent Change (Reb) (copy)_166633194495496218:qk]' pivot='key' type='quantitative' />
            <column caption='Trb' datatype='real' name='[trb]' role='measure' type='quantitative' />
            <column-instance column='[Percent Change (Points) (copy)_166633194292793345]' derivation='User' name='[usr:Percent Change (Points) (copy)_166633194292793345:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Points Per Minute (copy)_1054968220058288131]' derivation='User' name='[usr:Points Per Minute (copy)_1054968220058288131:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (Reb) (copy)_166633194495496218:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (DRB) (copy)_166633194496200733:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]' included-values='in-range'>
            <min>50</min>
            <max>833</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (DRB) (copy)_166633194496200733:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (Reb) (copy)_166633194495496218:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (DRB) (copy)_166633194496200733:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (Reb) (copy)_166633194495496218:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' />
              <lod column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='165' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='5' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]</rows>
        <cols>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Points Per Minute (copy)_1054968220058288131:qk]</cols>
      </table>
      <simple-id uuid='{3FA6258C-47B8-491A-B2C5-8E560C8E8C26}' />
    </worksheet>
    <worksheet name='SOS and Percent Change'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='Ast Per Minute (NBA)' datatype='real' name='[Ast Per Minute (C)  (copy)_1054968220059107335]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ast])/AVG([mp])' />
            </column>
            <column caption='Percent Change (Points)' datatype='real' name='[Calculation_1054968220053663744]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Points Per Minute (C) (copy)_1054968220058722309]-[Calculation_1054968220057976834])/[Calculation_1054968220057976834]*100' />
            </column>
            <column caption='Points Per Minute (C)' datatype='real' name='[Calculation_1054968220057976834]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_pts])/AVG([c_mp])' />
            </column>
            <column caption='Percent Change (Reb)' datatype='real' name='[Percent Change (Points) (copy)_166633194292793345]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Reb Per Minute (C) (copy)_1054968220058873862]-[Points Per Minute (copy)_1054968220058288131])/[Points Per Minute (copy)_1054968220058288131]*100' />
            </column>
            <column caption='Percent Change (Ast)' datatype='real' name='[Percent Change (Reb) (copy)_166633194295468034]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ast Per Minute (C)  (copy)_1054968220059107335]-[Reb Per Minute (C) (copy)_1054968220058558468])/[Reb Per Minute (C) (copy)_1054968220058558468]*100' />
            </column>
            <column caption='Points Per Minute (NBA)' datatype='real' name='[Points Per Minute (C) (copy)_1054968220058722309]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([pts])/AVG([mp])' />
            </column>
            <column caption='Reb Per Minute (C)' datatype='real' name='[Points Per Minute (copy)_1054968220058288131]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_trb])/AVG([c_mp])' />
            </column>
            <column caption='Ast Per Minute (C) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058558468]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_ast])/AVG([c_mp])' />
            </column>
            <column caption='Reb Per Minute (NBA) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058873862]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([trb])/AVG([mp])' />
            </column>
            <column caption='Ast' datatype='real' name='[ast]' role='measure' type='quantitative' />
            <column caption='C Ast' datatype='real' name='[c_ast]' role='measure' type='quantitative' />
            <column caption='C Mp' datatype='real' name='[c_mp]' role='measure' type='quantitative' />
            <column caption='C Pts' datatype='real' name='[c_pts]' role='measure' type='quantitative' />
            <column caption='C Sos' datatype='real' name='[c_sos]' role='measure' type='quantitative' />
            <column caption='C Trb' datatype='real' name='[c_trb]' role='measure' type='quantitative' />
            <column datatype='real' name='[college_ws_game]' role='measure' type='quantitative' />
            <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
            <column caption='Mp' datatype='real' name='[mp]' role='measure' type='quantitative' />
            <column-instance column='[g]' derivation='None' name='[none:g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player_id]' derivation='None' name='[none:player_id:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[player_id]' role='dimension' type='nominal' />
            <column caption='Pts' datatype='real' name='[pts]' role='measure' type='quantitative' />
            <column-instance column='[c_sos]' derivation='Sum' name='[sum:c_sos:qk]' pivot='key' type='quantitative' />
            <column-instance column='[college_ws_game]' derivation='Sum' name='[sum:college_ws_game:qk]' pivot='key' type='quantitative' />
            <column caption='Trb' datatype='real' name='[trb]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1054968220053663744]' derivation='User' name='[usr:Calculation_1054968220053663744:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Points) (copy)_166633194292793345]' derivation='User' name='[usr:Percent Change (Points) (copy)_166633194292793345:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194295468034]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]' included-values='in-range'>
            <min>50</min>
            <max>833</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:college_ws_game:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:college_ws_game:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' />
              <lod column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.8790607452392578' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='165' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='5' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]</rows>
        <cols>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_sos:qk]</cols>
      </table>
      <simple-id uuid='{3F276391-6FC5-4FA8-8F35-A3679205648D}' />
    </worksheet>
    <worksheet name='Scoring (3P)'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='2P' datatype='real' name='[2p]' role='measure' type='quantitative' />
            <column caption='3P' datatype='real' name='[3p]' role='measure' type='quantitative' />
            <column caption='Ast Per Minute (NBA)' datatype='real' name='[Ast Per Minute (C)  (copy)_1054968220059107335]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ast])/AVG([mp])' />
            </column>
            <column caption='2p  Per Minute (NBA) ' datatype='real' name='[Ast Per Minute (NBA) (copy)_166633194469085198]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([2p])/AVG([mp])' />
            </column>
            <column caption='FT Per Minute (C) ' datatype='real' name='[Blocks Per Minute (C)   (copy)_166633194487799825]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_ft])/AVG([c_mp])' />
            </column>
            <column caption='3P Per Minute (C) ' datatype='real' name='[Blocks Per Minute (C)   (copy)_166633194488463379]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_3p])/AVG([c_mp])' />
            </column>
            <column caption='2P Per Minute (C) ' datatype='real' name='[Blocks Per Minute (C)   (copy)_166633194488737813]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_2p])/AVG([c_mp])' />
            </column>
            <column caption='FT Per Minute (NBA) ' datatype='real' name='[Blocks Per Minute (NBA)  (copy)_166633194487799826]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ft])/AVG([mp])' />
            </column>
            <column caption='3P Per Minute (NBA)' datatype='real' name='[Blocks Per Minute (NBA)  (copy)_166633194488463380]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([3p])/AVG([mp])' />
            </column>
            <column caption='Percent Change (Points)' datatype='real' name='[Calculation_1054968220053663744]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Points Per Minute (C) (copy)_1054968220058722309]-[Calculation_1054968220057976834])/[Calculation_1054968220057976834]*100' />
            </column>
            <column caption='Points Per Minute (C)' datatype='real' name='[Calculation_1054968220057976834]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_pts])/AVG([c_mp])' />
            </column>
            <column caption='Percent Change (Reb)' datatype='real' name='[Percent Change (Points) (copy)_166633194292793345]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Reb Per Minute (C) (copy)_1054968220058873862]-[Points Per Minute (copy)_1054968220058288131])/[Points Per Minute (copy)_1054968220058288131]*100' />
            </column>
            <column caption='Percent Change (Ast)' datatype='real' name='[Percent Change (Reb) (copy)_166633194295468034]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ast Per Minute (C)  (copy)_1054968220059107335]-[Reb Per Minute (C) (copy)_1054968220058558468])/[Reb Per Minute (C) (copy)_1054968220058558468]*100' />
            </column>
            <column caption='Percent Change (FT)' datatype='real' name='[Percent Change (Reb) (copy)_166633194488909847]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Blocks Per Minute (NBA)  (copy)_166633194487799826]-[Blocks Per Minute (C)   (copy)_166633194487799825])/[Blocks Per Minute (C)   (copy)_166633194487799825]*100' />
            </column>
            <column caption='Percent Change (3P)' datatype='real' name='[Percent Change (Reb) (copy)_166633194489098264]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Blocks Per Minute (NBA)  (copy)_166633194488463380]-[Blocks Per Minute (C)   (copy)_166633194488463379])/[Blocks Per Minute (C)   (copy)_166633194488463379]*100' />
            </column>
            <column caption='Percent Change (2P) ' datatype='real' name='[Percent Change (Reb) (copy)_166633194489249817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ast Per Minute (NBA) (copy)_166633194469085198]-[Blocks Per Minute (C)   (copy)_166633194488737813])/[Blocks Per Minute (C)   (copy)_166633194488737813]*100' />
            </column>
            <column caption='Points Per Minute (NBA)' datatype='real' name='[Points Per Minute (C) (copy)_1054968220058722309]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([pts])/AVG([mp])' />
            </column>
            <column caption='Reb Per Minute (C)' datatype='real' name='[Points Per Minute (copy)_1054968220058288131]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_trb])/AVG([c_mp])' />
            </column>
            <column caption='Ast Per Minute (C) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058558468]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_ast])/AVG([c_mp])' />
            </column>
            <column caption='Reb Per Minute (NBA) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058873862]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([trb])/AVG([mp])' />
            </column>
            <column caption='Ast' datatype='real' name='[ast]' role='measure' type='quantitative' />
            <column caption='C 2P' datatype='real' name='[c_2p]' role='measure' type='quantitative' />
            <column caption='C 3P' datatype='real' name='[c_3p]' role='measure' type='quantitative' />
            <column caption='C 3Pa' datatype='real' name='[c_3pa]' role='measure' type='quantitative' />
            <column caption='C Ast' datatype='real' name='[c_ast]' role='measure' type='quantitative' />
            <column caption='C Ft' datatype='real' name='[c_ft]' role='measure' type='quantitative' />
            <column caption='C Mp' datatype='real' name='[c_mp]' role='measure' type='quantitative' />
            <column caption='C Pts' datatype='real' name='[c_pts]' role='measure' type='quantitative' />
            <column caption='C Trb' datatype='real' name='[c_trb]' role='measure' type='quantitative' />
            <column datatype='real' name='[college_ws_game]' role='measure' type='quantitative' />
            <column caption='Ft' datatype='real' name='[ft]' role='measure' type='quantitative' />
            <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
            <column caption='Mp' datatype='real' name='[mp]' role='measure' type='quantitative' />
            <column-instance column='[c_3pa]' derivation='None' name='[none:c_3pa:qk]' pivot='key' type='quantitative' />
            <column-instance column='[g]' derivation='None' name='[none:g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player_id]' derivation='None' name='[none:player_id:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[player_id]' role='dimension' type='nominal' />
            <column caption='Pts' datatype='real' name='[pts]' role='measure' type='quantitative' />
            <column-instance column='[college_ws_game]' derivation='Sum' name='[sum:college_ws_game:qk]' pivot='key' type='quantitative' />
            <column caption='Trb' datatype='real' name='[trb]' role='measure' type='quantitative' />
            <column-instance column='[Blocks Per Minute (C)   (copy)_166633194488463379]' derivation='User' name='[usr:Blocks Per Minute (C)   (copy)_166633194488463379:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1054968220053663744]' derivation='User' name='[usr:Calculation_1054968220053663744:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Points) (copy)_166633194292793345]' derivation='User' name='[usr:Percent Change (Points) (copy)_166633194292793345:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194295468034]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194488909847]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194488909847:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194489098264]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194489098264:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194489249817]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194489249817:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489249817:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489098264:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194488909847:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489249817:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489098264:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194488909847:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_3pa:qk]' included-values='in-range'>
            <min>1.0</min>
            <max>10.300000000000001</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]' included-values='in-range'>
            <min>50</min>
            <max>833</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:college_ws_game:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194488909847:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489098264:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489249817:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_3pa:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:college_ws_game:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194488909847:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489098264:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489249817:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' />
              <lod column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='165' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='5' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]</rows>
        <cols>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Blocks Per Minute (C)   (copy)_166633194488463379:qk]</cols>
      </table>
      <simple-id uuid='{5C6979BD-63D7-4D62-9F20-2C5A94222FFA}' />
    </worksheet>
    <worksheet name='Scoring (GP)'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='2P' datatype='real' name='[2p]' role='measure' type='quantitative' />
            <column caption='3P' datatype='real' name='[3p]' role='measure' type='quantitative' />
            <column caption='Ast Per Minute (NBA)' datatype='real' name='[Ast Per Minute (C)  (copy)_1054968220059107335]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ast])/AVG([mp])' />
            </column>
            <column caption='2p  Per Minute (NBA) ' datatype='real' name='[Ast Per Minute (NBA) (copy)_166633194469085198]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([2p])/AVG([mp])' />
            </column>
            <column caption='FT Per Minute (C) ' datatype='real' name='[Blocks Per Minute (C)   (copy)_166633194487799825]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_ft])/AVG([c_mp])' />
            </column>
            <column caption='3P Per Minute (C) ' datatype='real' name='[Blocks Per Minute (C)   (copy)_166633194488463379]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_3p])/AVG([c_mp])' />
            </column>
            <column caption='2P Per Minute (C) ' datatype='real' name='[Blocks Per Minute (C)   (copy)_166633194488737813]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_2p])/AVG([c_mp])' />
            </column>
            <column caption='FT Per Minute (NBA) ' datatype='real' name='[Blocks Per Minute (NBA)  (copy)_166633194487799826]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ft])/AVG([mp])' />
            </column>
            <column caption='3P Per Minute (NBA)' datatype='real' name='[Blocks Per Minute (NBA)  (copy)_166633194488463380]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([3p])/AVG([mp])' />
            </column>
            <column caption='Percent Change (Points)' datatype='real' name='[Calculation_1054968220053663744]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Points Per Minute (C) (copy)_1054968220058722309]-[Calculation_1054968220057976834])/[Calculation_1054968220057976834]*100' />
            </column>
            <column caption='Points Per Minute (C)' datatype='real' name='[Calculation_1054968220057976834]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_pts])/AVG([c_mp])' />
            </column>
            <column caption='Percent Change (Reb)' datatype='real' name='[Percent Change (Points) (copy)_166633194292793345]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Reb Per Minute (C) (copy)_1054968220058873862]-[Points Per Minute (copy)_1054968220058288131])/[Points Per Minute (copy)_1054968220058288131]*100' />
            </column>
            <column caption='Percent Change (Ast)' datatype='real' name='[Percent Change (Reb) (copy)_166633194295468034]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ast Per Minute (C)  (copy)_1054968220059107335]-[Reb Per Minute (C) (copy)_1054968220058558468])/[Reb Per Minute (C) (copy)_1054968220058558468]*100' />
            </column>
            <column caption='Percent Change (FT)' datatype='real' name='[Percent Change (Reb) (copy)_166633194488909847]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Blocks Per Minute (NBA)  (copy)_166633194487799826]-[Blocks Per Minute (C)   (copy)_166633194487799825])/[Blocks Per Minute (C)   (copy)_166633194487799825]*100' />
            </column>
            <column caption='Percent Change (3P)' datatype='real' name='[Percent Change (Reb) (copy)_166633194489098264]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Blocks Per Minute (NBA)  (copy)_166633194488463380]-[Blocks Per Minute (C)   (copy)_166633194488463379])/[Blocks Per Minute (C)   (copy)_166633194488463379]*100' />
            </column>
            <column caption='Percent Change (2P) ' datatype='real' name='[Percent Change (Reb) (copy)_166633194489249817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ast Per Minute (NBA) (copy)_166633194469085198]-[Blocks Per Minute (C)   (copy)_166633194488737813])/[Blocks Per Minute (C)   (copy)_166633194488737813]*100' />
            </column>
            <column caption='Points Per Minute (NBA)' datatype='real' name='[Points Per Minute (C) (copy)_1054968220058722309]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([pts])/AVG([mp])' />
            </column>
            <column caption='Reb Per Minute (C)' datatype='real' name='[Points Per Minute (copy)_1054968220058288131]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_trb])/AVG([c_mp])' />
            </column>
            <column caption='Ast Per Minute (C) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058558468]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_ast])/AVG([c_mp])' />
            </column>
            <column caption='Reb Per Minute (NBA) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058873862]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([trb])/AVG([mp])' />
            </column>
            <column caption='Ast' datatype='real' name='[ast]' role='measure' type='quantitative' />
            <column caption='C 2P' datatype='real' name='[c_2p]' role='measure' type='quantitative' />
            <column caption='C 3P' datatype='real' name='[c_3p]' role='measure' type='quantitative' />
            <column caption='C 3Pa' datatype='real' name='[c_3pa]' role='measure' type='quantitative' />
            <column caption='C Ast' datatype='real' name='[c_ast]' role='measure' type='quantitative' />
            <column caption='C Ft' datatype='real' name='[c_ft]' role='measure' type='quantitative' />
            <column caption='C G' datatype='integer' name='[c_g]' role='measure' type='quantitative' />
            <column caption='C Mp' datatype='real' name='[c_mp]' role='measure' type='quantitative' />
            <column caption='C Pts' datatype='real' name='[c_pts]' role='measure' type='quantitative' />
            <column caption='C Trb' datatype='real' name='[c_trb]' role='measure' type='quantitative' />
            <column datatype='real' name='[college_ws_game]' role='measure' type='quantitative' />
            <column caption='Ft' datatype='real' name='[ft]' role='measure' type='quantitative' />
            <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
            <column caption='Mp' datatype='real' name='[mp]' role='measure' type='quantitative' />
            <column-instance column='[c_3pa]' derivation='None' name='[none:c_3pa:qk]' pivot='key' type='quantitative' />
            <column-instance column='[g]' derivation='None' name='[none:g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player_id]' derivation='None' name='[none:player_id:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[player_id]' role='dimension' type='nominal' />
            <column caption='Pts' datatype='real' name='[pts]' role='measure' type='quantitative' />
            <column-instance column='[c_g]' derivation='Sum' name='[sum:c_g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[college_ws_game]' derivation='Sum' name='[sum:college_ws_game:qk]' pivot='key' type='quantitative' />
            <column caption='Trb' datatype='real' name='[trb]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1054968220053663744]' derivation='User' name='[usr:Calculation_1054968220053663744:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Points) (copy)_166633194292793345]' derivation='User' name='[usr:Percent Change (Points) (copy)_166633194292793345:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194295468034]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194488909847]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194488909847:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194489098264]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194489098264:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194489249817]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194489249817:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489249817:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489098264:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194488909847:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489249817:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489098264:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194488909847:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_3pa:qk]' included-values='in-range'>
            <min>1.0</min>
            <max>10.300000000000001</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]' included-values='in-range'>
            <min>50</min>
            <max>833</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:college_ws_game:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194488909847:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489098264:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489249817:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_3pa:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:college_ws_game:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194488909847:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489098264:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489249817:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' />
              <lod column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='165' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='5' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]</rows>
        <cols>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_g:qk]</cols>
      </table>
      <simple-id uuid='{4164FA47-07CF-4B96-9050-FA6FA9935572}' />
    </worksheet>
    <worksheet name='Scoring (MP)'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='2P' datatype='real' name='[2p]' role='measure' type='quantitative' />
            <column caption='3P' datatype='real' name='[3p]' role='measure' type='quantitative' />
            <column caption='Ast Per Minute (NBA)' datatype='real' name='[Ast Per Minute (C)  (copy)_1054968220059107335]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ast])/AVG([mp])' />
            </column>
            <column caption='2p  Per Minute (NBA) ' datatype='real' name='[Ast Per Minute (NBA) (copy)_166633194469085198]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([2p])/AVG([mp])' />
            </column>
            <column caption='FT Per Minute (C) ' datatype='real' name='[Blocks Per Minute (C)   (copy)_166633194487799825]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_ft])/AVG([c_mp])' />
            </column>
            <column caption='3P Per Minute (C) ' datatype='real' name='[Blocks Per Minute (C)   (copy)_166633194488463379]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_3p])/AVG([c_mp])' />
            </column>
            <column caption='2P Per Minute (C) ' datatype='real' name='[Blocks Per Minute (C)   (copy)_166633194488737813]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_2p])/AVG([c_mp])' />
            </column>
            <column caption='FT Per Minute (NBA) ' datatype='real' name='[Blocks Per Minute (NBA)  (copy)_166633194487799826]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ft])/AVG([mp])' />
            </column>
            <column caption='3P Per Minute (NBA)' datatype='real' name='[Blocks Per Minute (NBA)  (copy)_166633194488463380]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([3p])/AVG([mp])' />
            </column>
            <column caption='Percent Change (Points)' datatype='real' name='[Calculation_1054968220053663744]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Points Per Minute (C) (copy)_1054968220058722309]-[Calculation_1054968220057976834])/[Calculation_1054968220057976834]*100' />
            </column>
            <column caption='Points Per Minute (C)' datatype='real' name='[Calculation_1054968220057976834]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_pts])/AVG([c_mp])' />
            </column>
            <column caption='Percent Change (Reb)' datatype='real' name='[Percent Change (Points) (copy)_166633194292793345]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Reb Per Minute (C) (copy)_1054968220058873862]-[Points Per Minute (copy)_1054968220058288131])/[Points Per Minute (copy)_1054968220058288131]*100' />
            </column>
            <column caption='Percent Change (Ast)' datatype='real' name='[Percent Change (Reb) (copy)_166633194295468034]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ast Per Minute (C)  (copy)_1054968220059107335]-[Reb Per Minute (C) (copy)_1054968220058558468])/[Reb Per Minute (C) (copy)_1054968220058558468]*100' />
            </column>
            <column caption='Percent Change (FT)' datatype='real' name='[Percent Change (Reb) (copy)_166633194488909847]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Blocks Per Minute (NBA)  (copy)_166633194487799826]-[Blocks Per Minute (C)   (copy)_166633194487799825])/[Blocks Per Minute (C)   (copy)_166633194487799825]*100' />
            </column>
            <column caption='Percent Change (3P)' datatype='real' name='[Percent Change (Reb) (copy)_166633194489098264]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Blocks Per Minute (NBA)  (copy)_166633194488463380]-[Blocks Per Minute (C)   (copy)_166633194488463379])/[Blocks Per Minute (C)   (copy)_166633194488463379]*100' />
            </column>
            <column caption='Percent Change (2P) ' datatype='real' name='[Percent Change (Reb) (copy)_166633194489249817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ast Per Minute (NBA) (copy)_166633194469085198]-[Blocks Per Minute (C)   (copy)_166633194488737813])/[Blocks Per Minute (C)   (copy)_166633194488737813]*100' />
            </column>
            <column caption='Points Per Minute (NBA)' datatype='real' name='[Points Per Minute (C) (copy)_1054968220058722309]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([pts])/AVG([mp])' />
            </column>
            <column caption='Reb Per Minute (C)' datatype='real' name='[Points Per Minute (copy)_1054968220058288131]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_trb])/AVG([c_mp])' />
            </column>
            <column caption='Ast Per Minute (C) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058558468]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_ast])/AVG([c_mp])' />
            </column>
            <column caption='Reb Per Minute (NBA) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058873862]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([trb])/AVG([mp])' />
            </column>
            <column caption='Ast' datatype='real' name='[ast]' role='measure' type='quantitative' />
            <column caption='C 2P' datatype='real' name='[c_2p]' role='measure' type='quantitative' />
            <column caption='C 3P' datatype='real' name='[c_3p]' role='measure' type='quantitative' />
            <column caption='C 3Pa' datatype='real' name='[c_3pa]' role='measure' type='quantitative' />
            <column caption='C Ast' datatype='real' name='[c_ast]' role='measure' type='quantitative' />
            <column caption='C Ft' datatype='real' name='[c_ft]' role='measure' type='quantitative' />
            <column caption='C Mp' datatype='real' name='[c_mp]' role='measure' type='quantitative' />
            <column caption='C Pts' datatype='real' name='[c_pts]' role='measure' type='quantitative' />
            <column caption='C Trb' datatype='real' name='[c_trb]' role='measure' type='quantitative' />
            <column datatype='real' name='[college_ws_game]' role='measure' type='quantitative' />
            <column caption='Ft' datatype='real' name='[ft]' role='measure' type='quantitative' />
            <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
            <column caption='Mp' datatype='real' name='[mp]' role='measure' type='quantitative' />
            <column-instance column='[c_3pa]' derivation='None' name='[none:c_3pa:qk]' pivot='key' type='quantitative' />
            <column-instance column='[g]' derivation='None' name='[none:g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player_id]' derivation='None' name='[none:player_id:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[player_id]' role='dimension' type='nominal' />
            <column caption='Pts' datatype='real' name='[pts]' role='measure' type='quantitative' />
            <column-instance column='[c_mp]' derivation='Sum' name='[sum:c_mp:qk]' pivot='key' type='quantitative' />
            <column-instance column='[college_ws_game]' derivation='Sum' name='[sum:college_ws_game:qk]' pivot='key' type='quantitative' />
            <column caption='Trb' datatype='real' name='[trb]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1054968220053663744]' derivation='User' name='[usr:Calculation_1054968220053663744:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Points) (copy)_166633194292793345]' derivation='User' name='[usr:Percent Change (Points) (copy)_166633194292793345:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194295468034]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194488909847]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194488909847:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194489098264]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194489098264:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194489249817]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194489249817:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489249817:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489098264:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194488909847:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489249817:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489098264:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194488909847:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_3pa:qk]' included-values='in-range'>
            <min>1.0</min>
            <max>10.300000000000001</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]' included-values='in-range'>
            <min>50</min>
            <max>833</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:college_ws_game:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194488909847:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489098264:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489249817:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_3pa:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:college_ws_game:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194488909847:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489098264:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489249817:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' />
              <lod column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='165' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='5' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]</rows>
        <cols>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:c_mp:qk]</cols>
      </table>
      <simple-id uuid='{007857F8-B30A-4D6D-9F8D-FB91159470F5}' />
    </worksheet>
    <worksheet name='Scoring (PPG)'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='2P' datatype='real' name='[2p]' role='measure' type='quantitative' />
            <column caption='3P' datatype='real' name='[3p]' role='measure' type='quantitative' />
            <column caption='Ast Per Minute (NBA)' datatype='real' name='[Ast Per Minute (C)  (copy)_1054968220059107335]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ast])/AVG([mp])' />
            </column>
            <column caption='2p  Per Minute (NBA) ' datatype='real' name='[Ast Per Minute (NBA) (copy)_166633194469085198]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([2p])/AVG([mp])' />
            </column>
            <column caption='FT Per Minute (C) ' datatype='real' name='[Blocks Per Minute (C)   (copy)_166633194487799825]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_ft])/AVG([c_mp])' />
            </column>
            <column caption='3P Per Minute (C) ' datatype='real' name='[Blocks Per Minute (C)   (copy)_166633194488463379]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_3p])/AVG([c_mp])' />
            </column>
            <column caption='2P Per Minute (C) ' datatype='real' name='[Blocks Per Minute (C)   (copy)_166633194488737813]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_2p])/AVG([c_mp])' />
            </column>
            <column caption='FT Per Minute (NBA) ' datatype='real' name='[Blocks Per Minute (NBA)  (copy)_166633194487799826]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([ft])/AVG([mp])' />
            </column>
            <column caption='3P Per Minute (NBA)' datatype='real' name='[Blocks Per Minute (NBA)  (copy)_166633194488463380]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([3p])/AVG([mp])' />
            </column>
            <column caption='Percent Change (Points)' datatype='real' name='[Calculation_1054968220053663744]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Points Per Minute (C) (copy)_1054968220058722309]-[Calculation_1054968220057976834])/[Calculation_1054968220057976834]*100' />
            </column>
            <column caption='Points Per Minute (C)' datatype='real' name='[Calculation_1054968220057976834]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_pts])/AVG([c_mp])' />
            </column>
            <column caption='Percent Change (Reb)' datatype='real' name='[Percent Change (Points) (copy)_166633194292793345]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Reb Per Minute (C) (copy)_1054968220058873862]-[Points Per Minute (copy)_1054968220058288131])/[Points Per Minute (copy)_1054968220058288131]*100' />
            </column>
            <column caption='Percent Change (Ast)' datatype='real' name='[Percent Change (Reb) (copy)_166633194295468034]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ast Per Minute (C)  (copy)_1054968220059107335]-[Reb Per Minute (C) (copy)_1054968220058558468])/[Reb Per Minute (C) (copy)_1054968220058558468]*100' />
            </column>
            <column caption='Percent Change (FT)' datatype='real' name='[Percent Change (Reb) (copy)_166633194488909847]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Blocks Per Minute (NBA)  (copy)_166633194487799826]-[Blocks Per Minute (C)   (copy)_166633194487799825])/[Blocks Per Minute (C)   (copy)_166633194487799825]*100' />
            </column>
            <column caption='Percent Change (3P)' datatype='real' name='[Percent Change (Reb) (copy)_166633194489098264]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Blocks Per Minute (NBA)  (copy)_166633194488463380]-[Blocks Per Minute (C)   (copy)_166633194488463379])/[Blocks Per Minute (C)   (copy)_166633194488463379]*100' />
            </column>
            <column caption='Percent Change (2P) ' datatype='real' name='[Percent Change (Reb) (copy)_166633194489249817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Ast Per Minute (NBA) (copy)_166633194469085198]-[Blocks Per Minute (C)   (copy)_166633194488737813])/[Blocks Per Minute (C)   (copy)_166633194488737813]*100' />
            </column>
            <column caption='Points Per Minute (NBA)' datatype='real' name='[Points Per Minute (C) (copy)_1054968220058722309]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([pts])/AVG([mp])' />
            </column>
            <column caption='Reb Per Minute (C)' datatype='real' name='[Points Per Minute (copy)_1054968220058288131]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_trb])/AVG([c_mp])' />
            </column>
            <column caption='Ast Per Minute (C) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058558468]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([c_ast])/AVG([c_mp])' />
            </column>
            <column caption='Reb Per Minute (NBA) ' datatype='real' name='[Reb Per Minute (C) (copy)_1054968220058873862]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([trb])/AVG([mp])' />
            </column>
            <column caption='Ast' datatype='real' name='[ast]' role='measure' type='quantitative' />
            <column caption='C 2P' datatype='real' name='[c_2p]' role='measure' type='quantitative' />
            <column caption='C 3P' datatype='real' name='[c_3p]' role='measure' type='quantitative' />
            <column caption='C 3Pa' datatype='real' name='[c_3pa]' role='measure' type='quantitative' />
            <column caption='C Ast' datatype='real' name='[c_ast]' role='measure' type='quantitative' />
            <column caption='C Ft' datatype='real' name='[c_ft]' role='measure' type='quantitative' />
            <column caption='C Mp' datatype='real' name='[c_mp]' role='measure' type='quantitative' />
            <column caption='C Pts' datatype='real' name='[c_pts]' role='measure' type='quantitative' />
            <column caption='C Trb' datatype='real' name='[c_trb]' role='measure' type='quantitative' />
            <column datatype='real' name='[college_ws_game]' role='measure' type='quantitative' />
            <column caption='Ft' datatype='real' name='[ft]' role='measure' type='quantitative' />
            <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
            <column caption='Mp' datatype='real' name='[mp]' role='measure' type='quantitative' />
            <column-instance column='[c_3pa]' derivation='None' name='[none:c_3pa:qk]' pivot='key' type='quantitative' />
            <column-instance column='[g]' derivation='None' name='[none:g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player_id]' derivation='None' name='[none:player_id:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[player_id]' role='dimension' type='nominal' />
            <column caption='Pts' datatype='real' name='[pts]' role='measure' type='quantitative' />
            <column-instance column='[college_ws_game]' derivation='Sum' name='[sum:college_ws_game:qk]' pivot='key' type='quantitative' />
            <column caption='Trb' datatype='real' name='[trb]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1054968220053663744]' derivation='User' name='[usr:Calculation_1054968220053663744:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1054968220057976834]' derivation='User' name='[usr:Calculation_1054968220057976834:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Points) (copy)_166633194292793345]' derivation='User' name='[usr:Percent Change (Points) (copy)_166633194292793345:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194295468034]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194488909847]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194488909847:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194489098264]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194489098264:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent Change (Reb) (copy)_166633194489249817]' derivation='User' name='[usr:Percent Change (Reb) (copy)_166633194489249817:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489249817:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489098264:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194488909847:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489249817:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489098264:qk]&quot;</bucket>
              <bucket>&quot;[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194488909847:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_3pa:qk]' included-values='in-range'>
            <min>1.0</min>
            <max>10.300000000000001</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]' included-values='in-range'>
            <min>50</min>
            <max>833</max>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:college_ws_game:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194488909847:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489098264:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489249817:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_3pa:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220053663744:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Points) (copy)_166633194292793345:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:college_ws_game:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194488909847:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489098264:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194489249817:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' />
              <lod column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='165' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='5' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1699iq40rx5wde11ykfjy117zi51].[Multiple Values]</rows>
        <cols>[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Calculation_1054968220057976834:qk]</cols>
      </table>
      <simple-id uuid='{220C6C6C-116C-439F-90B0-3D54F681D2BE}' />
    </worksheet>
    <worksheet name='Sheet 17'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column-instance column='[ws]' derivation='Avg' name='[avg:ws:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[lon]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[lat]' derivation='None' name='[none:lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lon]' derivation='None' name='[none:lon:qk]' pivot='key' type='quantitative' />
            <column caption='Ws' datatype='real' name='[ws]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1699iq40rx5wde11ykfjy117zi51].[none:lon:qk]' field-type='quantitative' max='-7019357.1080548912' min='-13522064.582463667' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1699iq40rx5wde11ykfjy117zi51].[none:lat:qk]' field-type='quantitative' max='6347249.3645745907' min='2708031.58140672' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
            <format attr='enabled' id='admin-2-boundaries-bg' value='true' />
            <format attr='enabled' id='admin-2-boundaries' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.37000000476837158' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.1699iq40rx5wde11ykfjy117zi51].[avg:ws:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.2872927188873291' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1699iq40rx5wde11ykfjy117zi51].[none:lat:qk]</rows>
        <cols>[federated.1699iq40rx5wde11ykfjy117zi51].[none:lon:qk]</cols>
      </table>
      <simple-id uuid='{65F73ABB-0481-42C7-8182-65000ED3A65B}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_college_draft' name='federated.1699iq40rx5wde11ykfjy117zi51' />
          </datasources>
          <datasource-dependencies datasource='federated.1699iq40rx5wde11ykfjy117zi51'>
            <column caption='Efg%' datatype='real' name='[efg%]' role='measure' type='quantitative' />
            <column caption='G' datatype='integer' name='[g]' role='measure' type='quantitative' />
            <column caption='Ht' datatype='integer' name='[ht]' role='measure' type='quantitative' />
            <column-instance column='[g]' derivation='None' name='[none:g:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player]' derivation='None' name='[none:player:nk]' pivot='key' type='nominal' />
            <column caption='Player' datatype='string' name='[player]' role='dimension' type='nominal' />
            <column caption='Pts' datatype='real' name='[pts]' role='measure' type='quantitative' />
            <column-instance column='[efg%]' derivation='Sum' name='[sum:efg%:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ht]' derivation='Sum' name='[sum:ht:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pts]' derivation='Sum' name='[sum:pts:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ws]' derivation='Sum' name='[sum:ws:qk]' pivot='key' type='quantitative' />
            <column caption='Ws' datatype='real' name='[ws]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]' included-values='in-range'>
            <min>50</min>
            <max>833</max>
          </filter>
          <filter class='categorical' column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:player:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:player:nk]' />
              <groupfilter function='member' level='[none:player:nk]' member='&quot;Tony Mitchell&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:efg%:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:pts:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:efg%:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:pts:qk]</column>
            <column>[federated.1699iq40rx5wde11ykfjy117zi51].[none:player:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:ws:qk]' />
              <tooltip column='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:ht:qk]' />
              <text column='[federated.1699iq40rx5wde11ykfjy117zi51].[none:player:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.9060773849487305' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:pts:qk]</rows>
        <cols>[federated.1699iq40rx5wde11ykfjy117zi51].[sum:efg%:qk]</cols>
      </table>
      <simple-id uuid='{B5FAFCF4-FB84-4FFC-820A-6DA32F81E934}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='---&gt;'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones />
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='24' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='23' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{377639A4-8936-4ECF-BEE7-BB57D8A62921}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='---&gt; '>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones />
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='24' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='23' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5D6166B6-4948-4698-A9C3-05A9A159C207}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='2000' maxwidth='2000' minheight='2000' minwidth='2000' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='99200' id='7' param='horz' type-v2='layout-flow' w='99200' x='400' y='400'>
            <zone h='99200' id='5' type-v2='layout-basic' w='91200' x='400' y='400' />
            <zone fixed-size='160' h='99200' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='8000' x='91600' y='400'>
              <zone h='5300' id='8' name='Performance by Draft Round' pane-specification-id='2' param='[federated.1699iq40rx5wde11ykfjy117zi51].[none:round:nk]' type-v2='color' w='8000' x='91600' y='400'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='34200' id='3' name='Performance by Draft Round' w='49200' x='1650' y='1650' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='34' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='99200' id='33' param='vert' type-v2='layout-flow' w='99200' x='400' y='400'>
                <zone fixed-size='280' h='34200' id='3' is-fixed='true' name='Performance by Draft Round' w='49200' x='1650' y='1650'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5300' id='8' name='Performance by Draft Round' pane-specification-id='2' param='[federated.1699iq40rx5wde11ykfjy117zi51].[none:round:nk]' type-v2='color' w='8000' x='91600' y='400'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6898C17C-BAEF-4EBC-BE71-FF11FD1826CD}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Average Points by Position'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{C55B94E0-9B0D-4240-997C-A1F28717372F}' />
    </window>
    <window class='worksheet' name='Average Rebounds by Position '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{DF342C73-CAD1-4999-A575-38BDD02D041D}' />
    </window>
    <window class='worksheet' name='Average Assists by Position'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F158EA63-125A-487B-8C1B-B32FCEA00175}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:ws:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{A991C8B3-11EC-4EA2-9815-D7DE1920CA84}' />
    </window>
    <window class='worksheet' name='PER by Pick'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1EC5D8CD-8B71-4E6A-BF04-B89A36D20DF4}' />
    </window>
    <window class='worksheet' name='Performance by Position'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1699iq40rx5wde11ykfjy117zi51].[none:pos:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:3pa:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_3p%:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_3pa:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_g:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:colleges:nk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:draft_year:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:last_college_attended:nk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:pos:nk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:round:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A9A2B4F0-8908-46FE-AD15-4E75129DF9D6}' />
    </window>
    <window class='worksheet' name='Performance by Draft Round'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1699iq40rx5wde11ykfjy117zi51].[none:round:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight field='[federated.1699iq40rx5wde11ykfjy117zi51].[none:round:nk]'>
          <color-one-way>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:3pa:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_3p%:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_3pa:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_g:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:colleges:nk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:draft_year:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:last_college_attended:nk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:pos:nk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:round:nk]</field>
          </color-one-way>
          <bucket-selection>
            <bucket>&quot;lottery&quot;</bucket>
          </bucket-selection>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C62970A8-0EF9-47E7-B7B3-65D9DD3C6D7B}' />
    </window>
    <window class='worksheet' name='College Experience and Percent Change in Stats (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_g:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7A09F587-3AE2-4AC7-BBCA-62536454C639}' />
    </window>
    <window class='worksheet' name='College WS and Percent Change'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_g:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{08BADE9D-5994-44AB-A238-B22C93A1B6EB}' />
    </window>
    <window class='worksheet' name='College PER and Percent Change (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_g:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{35A167BE-9242-461B-9FE2-91E9A9804765}' />
    </window>
    <window class='worksheet' name='SOS and Percent Change'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_g:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BFAD651D-CB1A-44AC-B1AE-9D361DB44EB7}' />
    </window>
    <window class='worksheet' name='College PER and Percent Change (3)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_g:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6A3CA0FA-39DE-45F0-9BB6-5E6837FDC91D}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Performance by Draft Round'>
          <zoom type='entire-view' />
          <highlight field='[federated.1699iq40rx5wde11ykfjy117zi51].[none:round:nk]'>
            <color-one-way>
              <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:round:nk]</field>
            </color-one-way>
            <bucket-selection>
              <bucket>&quot;undrafted&quot;</bucket>
            </bucket-selection>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='8' />
      <simple-id uuid='{7A4C4EE7-19D8-42E5-A634-C838A97E2F05}' />
    </window>
    <window class='worksheet' name='Scoring (PPG)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_3pa:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_g:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C9C72C99-4311-4D3D-AA1C-3AFAEA33959A}' />
    </window>
    <window class='worksheet' name='Scoring (3P)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_3pa:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_g:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3970EF49-699C-4969-A2F9-E207CF6E4045}' />
    </window>
    <window class='dashboard' name='---&gt;'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{5B330403-C570-4404-92C5-C36B81976B9D}' />
    </window>
    <window class='worksheet' name='Rebounding (Reb)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_3pa:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_g:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4ECE6375-CD1E-420D-8A94-235649DAB0F0}' />
    </window>
    <window class='dashboard' name='---&gt; '>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{B3CA7DBA-D1BD-46F9-9BD9-3B955AB27C02}' />
    </window>
    <window class='worksheet' name='Playmaking (AST)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Reb) (copy)_166633194295468034:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_3pa:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_g:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F0EC50F3-D7F7-4386-8A17-F4CD031320C0}' />
    </window>
    <window class='worksheet' name='Playmaking (Steals)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='7' param='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (ORB) (copy)_166633194500960289:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_3pa:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_g:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F9F8F924-3AA0-4272-AFFE-DAC7F5A92620}' />
    </window>
    <window class='worksheet' name='Playmaking (Blocks)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='7' param='[federated.1699iq40rx5wde11ykfjy117zi51].[usr:Percent Change (Ast) (copy)_166633194469371920:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_3pa:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_g:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{07B3DF10-8FD0-4455-AC7E-B571774318BA}' />
    </window>
    <window class='worksheet' name='Playmaking (TO)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='7' param='[federated.1699iq40rx5wde11ykfjy117zi51].[sum:Percent Change (Stl) (copy)_166633194504069155:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_3pa:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_g:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{01DC293D-7562-4C11-9B64-6F55D0E32503}' />
    </window>
    <window class='worksheet' name='Scoring (GP)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_3pa:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_g:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1187461B-C811-4588-B25C-E79E27C403A0}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 17'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1699iq40rx5wde11ykfjy117zi51].[avg:ws:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ikgzap1fqk17n1061gfe0xlpkoh].[none:LATITUDE:nk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[cnt:last_college_attended_full:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:LATITUDE:nk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:last_college_attended:nk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:last_college_attended_full:nk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:player:nk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{16C40321-0F23-48B2-9464-D62AA2C012E4}' />
    </window>
    <window class='worksheet' name='Scoring (MP)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[:Measure Names]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_3pa:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:c_g:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:g:qk]</field>
            <field>[federated.1699iq40rx5wde11ykfjy117zi51].[none:player_id:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{174A8AD7-EB0D-4388-B4FE-B51FE4D113C2}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='---&gt;' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='---&gt; ' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Average Assists by Position' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2deXAc153fP9099wwG90WAOEiAl3hTFHXLtsq2JK+cPVKJyt7YlmvXif9x
      VSqVo2pTm9pK1W5Vkt1aJ5tUsptKyon+idaWjz0sS7JEWqYOUiRIELxAAiAEggCJAeaenpk+
      Xv4YnORARAODOTD9qaI009Pdv1+j369fv/e+7/ckIYTAxqZKkTfz5HZs2ZQ7mxoAiURiM09v
      Y7NhNjUAbMoRwQ/+x5/z/e9/n09nogzfGMXQ0gxeuEgqq5fauaLjKLUDNsXn9sQEDm8tb73x
      f0kmVIINTZwfusm/+Jf/ip622lK7V1TsGqAKcde18a//4A95+tg+7oXCtG3vpsmVZvTOvVK7
      VnSkzewFisfj1NTUbNbpV0UIgSRJtt1NtglUvN0tWQOUqvFdTXZN00RV1aLbzWazZLPZgp2v
      LAMgMjPJwOAQ4ViqKPayqSjnzg0wPTMHwIUzH3J1+CZZ3SyK/aELn3Dl6jVSWaMo9savDXB+
      6DqxZBrTyHDu7Cfcntrk1x9T49TJk9yauANAfO4u5y8MMn57enPtzqNnEpw7d54bI7dYflfL
      MgCuXRvhkQP7qQ/6imJv/MYw7Tt301IfYGxsnEgkipAk5CLV7vFYDCFALtLrRCoRJWtIqIko
      o1cG8bT00tnesslWTaLRGLIE47fGGLx4lZ4d3USjkU22m+P28DUaOrtJxqKYyyKgLAOgc1sT
      g4OXmIsmi2KvraOD0WtXmJ6L09vbjdvtpb9/Jw6lSH8exUX/rl14nMWxJ0kSvX27aG1tpadv
      F6Hxa3w6eXfT7dY2ttDVuY3unl56e9q4cXOce/eK0/Bu7uxg4uZN7s3cW1EDSCLHphgtVSPY
      trv5GIZBJpPB5ytOLb1ANptFCIHb7S7I+RbHATajIaWqakl6RWy7m49pmmSzWUyzOO2kBTRN
      W/H/jeKAXJW4WU+QUjwRbbubT6lqgEwmA1CwGqAs2wA2NsXCDgCbqsYOAJuqxlIAJGNhJqdn
      EOSGpGPhOTRTEI/MMn57CtPQGBsbQzfseQA2lcHa1aDC5NyFIRp9Mu6aehpcOh+f/jXHv/Qy
      hg4zt67y6Zib/r39fHJhiBNH9yOEKMmkGNtu8WyWatJToexak0NLEh6nQjqrI/ncdLY3A3Dn
      05sEO3bB5BiBQAA9O774xzGM4gzvL8c0TdtuEWyWym4hy9XaA0CS6e/dTjipUZ8NEQoHyOBk
      7u4UKC7QVHYdOMDY8E0OHDqILMvIsozDUfwpB4qi2HY3GcMwSmYX2JDdUCjE66+/zquvvmqt
      Bmjv7KZ92ffmhkdzH7ZvW9x24GDduh2zsSkGTU1NBAIBXC6X3QtkU31MT08zPDzM6Ojo1pwQ
      Y9vdfOyRYBubLYA9Kd6m6jCTc6TPvAbYAWBTjRga5twtwH4FsqlyrEkhonPcnrq3KIWIzs2i
      mWDoWcKRGFk1zrXr15mLFWcml43NRrEmhbh4mUafjCfYQINL5+yHH/DoF18mNT3B2FSEdp9G
      xKyn1+cp6VC5bbd4NitRCrH8SMtSCPcyKURHWxMAbdu2M3E3Qve+42xTI5z55CJPPXYYIUTR
      ZwzB0jC9bXfzbZbC7kbL1fJjLUkhdu3YTjip07AghZBczN2dImGqOBSZ0Mw95mbn2L9/36IU
      QlGUdTu6XhRFse1uUbuyLC/aXi+SvPTmb6kGaOvopm3Z9+aGY4ufO7tz/29ta8fGphIQQti9
      QDZVjGkHgE0VY2SydgDYVCdCCEw7AGyqFTOrISmKHQA21YmRVFG8bjsAbKoP09AxDRPJYbEG
      ME0DXV+ai2kaBkLk3qeM+QEKTdPs1SFtyprsrUs4vG4kSbIihRB8/MFpDMPg8BPP4ZOyvP3z
      Nznxwm+SmLzB2N0EnUGZcFbg8NRxcE/vJl6Cjc36EMIkfflXOL0ewNJAmIkmZLqbvIRiGXqa
      vHR1tAKwbXsPk6FL3A3FOPzkCc5+PIBpdmMYBrpe/JUHbbvFsVkqu8C67Wp3hpHcXiQ5DViU
      QrQ21nIvpdGthZiZDRBOplGmp0iYSVQ1xe4d3VweHKK3b8+iDKJasiRUm11JkjAMo+KyQiQv
      v4/30PPol36YO8/aD5XYve/Aii3Nz35+8XNnTx+QyxxhY1OOmOkkeniKQMvLLNQfdi+QTdWg
      Xv0Ad99xJHlJSGcHgE1VIISJevk03keeXrHdDgCbqkC7O47sq0Xx167YbgeATVWQGngH36HP
      P7DdDgCbLY+ZSZGdvIm7Z/8Dv9kBYLPlSQ+fw913FEl5sNPTmhTCMNC0pQEIY14KYRoGmq4j
      zFy6PN0o/rxYG5t8CCFInHsH/6HP5f3dmhTiw9OYhsnBJ57FL2V55+dvcuKFr3L1TG57Q72f
      sO5n364e6gLFzRlpY5MPfeY2yAqO+ta8v69DCuFhNpahZkEKIUw0FLY3esgGu2hOzXBj5FOO
      HdhVVdKAarNbKVKI2Jk38R15fsX+wlwSdFqSQrQ11jKj6nTNSyEiyQzK3RlaG4LMqjrdHpN7
      UYPWlnZbCrHF7VaCFMLUsmRvXaH+S/8Eedn+5rKBMEtSiF0PSCE+N/9pKRNEc4udFcKmPFCv
      ncXdtRfZ5Vl1H7sXyGZLIoQgcfZtah5/6TP3swPAZktiRGYwsxkczds+cz87AGy2JPGP3iRw
      5HNI0mcXcTsAbLYcwtBJDn2I/9AzD93XDgCbLYc6fAFXZz+y5+FjUXYA2Gw5Yqf/juATL65p
      X0sBYBg6WU1b+q7rCLG0XQhBJpOxs0LYlAw9OosensHdvXtN+1uSQpz58AOEaXLg8ZVSiCtn
      cttrgkFMxYHkCHBo7471XoONzbqJn3mHwPHnH9r4XcCyFKKr0cPcfVIIHYXtDR4+uRni5a88
      x9mzA5hmT1VJA6rNbqmlEFoqQfLShw/8Hn7nh9R+6RUiH7+9Yrv/4FNIThewESlEUx2hlLYk
      hUjlpBBtjUHmVIMvPLGPy5cus6Nvry2F2OJ2Sy2FENEwU3/2z/Puc+8v/90D2/r++7s4vC3A
      RqQQe1dOKGh+5nPzn5bkD42tnWs/pY1NibF7gWyqGjsAbKoaOwBsqho7AGyqGjsAbKoaOwBs
      qho7AGyqGktSiEsXz5NUdY6eeAzUCOeHbuKvqUVXI6Szgu72Wm5HTPp2dNMQ9G+i2zY2hcGS
      FGIurtLT6ObOXBpHaJTmnr1MXvsEWQJDjRFuasUjRbgXClMX8FaVNKDa7JZaCiEZxkP2fPA4
      ad7X9UkhkPG7ZCZCKj3BGZRgK3dGLuMNNrKtMcD4xDRNQTchNZeywpZCbG27pZZCSIrykD1X
      svxvtD4phCTx6IknV2xq37Yke+joyq0J1tpqZ4WwqRzsRrBNVWMHgE1VYweATVVjB4BNVWMH
      gE1VYweATVVT/E5rG5tlCCGYmJigrq6OSCTC7Owshw8fRpIkwuEw09PTSJJEc3MzqqrS3Nxc
      UPvWpBAXzpFI6xx97ARSOsy5oZv4A7UYapS0JujuaGJyJkxjazc7OgvrqM3WxDAMTp06xbFj
      xzh16hRdXV0Eg0F6e3t58803UVUVv99PPB5HURRefvllampqCmbfmhQikaan0c1UOI0jNEZL
      zz4mr32CIknoapSPZ5O8+MLTnD1znp5tjRUrDRgbG6OtrY2ZmRmmpqY4cOAAAwMD7Nmzh8bG
      Rq5cucLs7Cx79uwhFArR0tKC3++v2Otdr81C2e3r68MwDI4fP86pU6fo7e1lfHycdDrNxMQE
      X/7yl7l06RIOh4OTJ0/y0ksvlUYKEVguhahtY2rkMr5gE+2NfsZv3+VIcy2DFy7S3Lq9YqUQ
      mqbx7rvv8uKLL+LxeBgZGaGxsZHu7m5+8Ytf8I1vfIP33nuPJ598ko8++ohMJsPAwAAnTpxg
      27ZtFXe966VQUohsNks0GkXTNJqamnjqqadoamoik8nwzW9+k+HhYTo6Oujt7WV0dJSuri4U
      RSmNFOLY/VKI9o7FzwtSiB5LbpUfTqeTvr4+AE6fPs3evXvxeDy8++67fP3rX0dVVX7/93+f
      n/3sZ/T393PhwgV0XWdgYID2dlsGYhWXy8ULL7yw6u979uwBoKamhtbWVjKZTEHt243g+1BV
      lUwmw+TkJLW1tSSTSZxOJ9u3b+f27dtEo1EkSaKjo4MjR45QW1uLw+EgFoshSVKp3a8ohKFh
      TF15cLupI8kPFk2lbU/BfbAD4D68Xi8vvfTZq4osZ6G2AIjH45vh0pZFaCrpj3+wctt8Xtl8
      DxPfC38AjkBBfbADYBWMuXFEKrJim9BUkBUkxbViuxRoQqnrwGZjCCEQpokkF294yg6AVdBu
      /Ar99sDKjQtZr+97Ojl3Po1y+LeL5NkWRggwBWvMa1sQ7JFgC4j5fzaFRwiBqRu5p38R21J2
      AFjBXvdg8xACYRggF7cjwQ6ANSKEAAF2P8/mYGY0ZIej6D1plqQQgxfOzWeFmJdCXMplhTDU
      KJmsTntrPdNxQf9Wzgphd3UWHGGamJqOw+N6+M4FxpIUIny/FKJ3H5PXzyGbBhnNwOHtwpuY
      4e7MXMVnhXhgmScBApG3BjBNga7rFX2967G5UbtiXs5gqBlkl/OhT3/DMDCkEmaFCLgVJmbT
      9AZnkBekEDUNaMkwPkUmo4MiSZimWbFSiAX0+2+GEEirvADJsoTD4ajo67VKIaQQpq7knv6Z
      LM764EP3VxQFc14CURopxGNPrNi0XAqxSNfWXCBDCIFU5AZaNWCoGWS3q2Sj6HYjeK0IYb//
      FxpToCdVFK+7ZC7YAbBG7KVfC09m/BKy21nUkd/7sQNgDeS6QO0AKCTC0FHP/xxn4OGruW8m
      dgBYwFZ7Fo7M2AUczV2WG7OFxg6AtWDa7/+FRJgGqfNv4z38xVK7YgfAWhDCtJ/+BST76VVk
      fx1KsKnUrtgBsCbsGqBgCGGS+Phv8J/4aqldASwNhAlujdwgmtI5sH8f6CpDl68TbGrDSIVJ
      qAY9XS2M3pqks3cXzXVbRwohDBPZUdp31a2CNjWK5PTgbOrATMdK7Y41LdCnd+6xvc7FZCSD
      ErqOt3UHEzcuIAsDTTeYm5vjxFOPcf7cII0nHq1oacDybk/xkDEAWwqxduIf/Azfia+g6/qi
      FMKSzdJJISTk+dQoLekIuPxEZqaQFCda1qDG4yCNkzuTd/D4gltGCrGWLlBbCrE2tJkJTDWO
      p3MXkiRh6tblDCWVQjx2/FFSGQOf2wGOZnw1Ybw1fQhNJZU1qA8GmJ0Ls6On0ZJzZc1nzFG1
      WTtCCGLvv0HNk/+grP6Wlh4bLo8Pl2fZ94b5gu4M4Jkfz2hqKn3LvqAIUVY3rFIxoiH02Wnc
      Ow6W2pUV2L1AD0EYZtFnKW1F4qd/Rs2TX0Uq5oTfNVBe3pQhwihuloKtiJGIkh67jHf3o6V2
      5QHsO/sQhGEgKfafaSPEfv1TAse/hORwltqVB7Dv7EMQ9iDYhjDUJKnLH+E/+oVSu5IXOwA+
      AyHEQ8cAbD6bxNm3CRx7HtlZ/Pm+a8EOgM9C5OYA271A68PUMsQ/fovAidWT35Yai1KIYSJJ
      nYMHHkHoKkOXrxFsbEPWk0xOTtHb2830XILu7q2RFUKYwu4B2gCJT97Fu/sYird8y4JFKcRM
      TgoRTqOEruNr3cntGxd5+uknGLk1CVoKU9dQ0xpmwKxoaYCYT9S0lh4gWwqRbwedyMkf0/rd
      P151n4qUQszG07SmI+D2E7l3B8nhYvLmEB19j+ALQIczyfjtSTpa6ipaGqBLEkJfWw+QLYV4
      kMTgaTy9j+CuW31gtCKlEGrWxOtWkJQW/MEI3kA/hpahw+fD1LNkDXj0cJcl58oVYRjIrvLr
      uisnhK4R+/AXD2wPv/M6gaPPEX3/b1dsDxx7DsVXuDW+NsqGpBC19Q25D86cDkJxuGjeQlII
      oZv2GMBDMDMqd/7i3+T9Tb12/oFtO/70p2UVAPbd/QyEMO0u0C2OHQCrkJsPINldoFscOwBW
      IacBsgv/VscOgFUQum6//1cB9h1eBVM3kErQpWlTXOwAWAWhG0j2RPgtj6UACIemGR2/nVsr
      SxiM3RxmLppgfOwmQ5cukUgmGb5+HTVb/NHQQmOmk8j2K9CWx4IUwuTS1Ru0+B3ca2hFmbtB
      ytHI7cELPP30k5x67ySZRJSefY9w4cIQjx8/lFv4zDQ30f38mKa5YbtmbAbFu7YAWLjOQthd
      D6Wwu2BTWFw2UIglX4Vp8VjTXMrWIaxdrzCXyqK5LMlB3jsshCAyO0M0nnzg8iQJstkMmmEi
      ISGEIHr3FjWtvciAJEsIYS5JiSsQkU1jpuN2F+gasHqLN1IkFg4tZLnKWwOoMzf5T3/2l7R1
      9fMPv/Ud2nyAJPPI7j4iKZ0gSaS2flKTt3jk4BG0dIyDe9tBa2Vk7FMOHz6ILMuL/4rNRu3q
      agzJzALeNe0vSVJFX+96EELk7Fp8Ei/31bTYzSzLMpIkzf+zdr2SLC39jZY92PIGgKummW2t
      zaimk4Zl0ofGlnaWJzwJ9u+e/zS/fL3bx549eyw5Vo6Y8RCSYj/9q4G8YXTxw1+iuptxpKaI
      pIvtUunRw9NIZTqDyaaw5A2A2oZmHOjsPHCc2tKtXlMyjPAUSu3WEfXZrE7eANi+cx/9PR1c
      OvM+8WyxXSo9RjSEEmwutRs2RSBvAJh6lqmpKerbe/BW4WComU4iu0u7dI9NcchbvGVMZmZC
      eDwesjr4q2hOiNAyuQWxHdXTBhBC8MMf/hC/38/MzAyapvHqq69y5coVrl27ht/vZ2pqin37
      9gHwxBNPPOSMlUPeANAzSeJpk67uFqptMNRIRlG8D1+0eStx/fp1YrEYiUSCaDS6OIdX0zQc
      DgeDg4M0NTXx/vvv4/V6aWtro6tra8z6e6B4C2EyMHSNjpZaIpEIywfr5mamGVmQQpgGo/NS
      iFg4xI2RW6Tic1y+eo25WLKIl1BYzPgschks3VNMtm3bxokTJ/B4PPj9fmpqahgYGKCpqQmv
      18vTTz/N888/z+c///mSjHNsJnlqAIntO/YQbOkFWGoDCJOhazdoDeSkEPLsDdKOJi4PDpBO
      xuns6WNqYoxExovT6VwhDyg2G7Grzd5BqWtDZCbXfEylSyECgQD79u1bfMVZTmdn5+Ln7u5u
      jh07BuSyLJimiWlRCrHc1/VKIYQQlgfg1iyFkCSJU3//I/7qf/2A9z86SzZP9olsJo2+cBFC
      4PT4cWbmkBv7ONTfysWLlytWBqGHp1Dq20rtRnlgsZBtNptRovK2AV76nd8l8KtfMXT9FvqC
      VUlm/55+wkmdWlmFtn7UO+PsP3QUWU8xE0nR7DUZnwxx5PD+ipUGmJEZnPVtaNNrHwmudCmE
      MHRSb/3Jgz+YJuQ5r+fJ30MOtGxdKcTPf/bXTCcUOjo7VlQRDc1tNCzrHg/27Zr/FKBuXiOx
      O1hvybFyw1RjSJ7yzWS2OQhEKrxyixAgyD8t1LSWlKqcyRsAX/+976FmDfxeT76ftyxC13LZ
      4JxVOPx9P1WSFTtvPZIOT/KHf/QnXLp8mUzlz21ZM2YqhuwLVr0MWgiBME2ogj9D3gBQPDUc
      P9jP1avDS22AKsCIhVBqttACf+tl/p5Xw4MgbwAYqVmGBge5d/ceca3YLpUOfW4KR+O2UruR
      W1ExFiObzXLr1i00LXcTUqkUU1NTaJrG7OwsmUxm8beC2jeMqnj9gVXaAO7adjrbm8k4/TSu
      bU7IlkCfm8LVtbfUbnD16lVOnjzJK6+8QjQa5YMPPuBrX/sar732Gm63G13XcTqd1NXV8fjj
      j+P1Fu4mCSEwdQPFUx1SkLw1wN+88dfMJAS/9+3fxVkdDwJgvgZoKH0NsG/fPnw+H3V1dUxM
      TFBbWwvkXkmSySQ7duwgk8kwMjLCW2+9VdgxFyGQqJ6lYfPWAIak0N3i4b2T7/OF557B5wQQ
      TE1NIwNNbe2gpQhF1VyviTCoq28go8bRkTFx0VQfKOqFFAIzEUX2lt7voaEhDMNgcHAQr9dL
      Q0MDp0+fpq+vj0gkwrFjxwgGgyiKQiQSKahtU9OrKh1M3gD4nVe+iRACTdNYzA4uBDdujtBV
      72LSXY8jdJ1UzU6mbgyRSiZobmkjHk3w2DMnOHd2kCcff7SiFowQuoZpaJiKC1PXLT1VC71A
      xp49ex46tfTQoUOLnxOJxMbszvfrCyEwsxqOwGdLwU3TwJy/XkNYX6hiwdeyXSAjOX2d//PG
      L7l8bYw/+g//kUYPgIQimdyLqrQ3hMETZHZ6AsnppSYgIesqDreLW2Pj+GrqkGW5ohaM0JNh
      lED94nG6hVeAQi6Qod+9hlCjK7aJrIrk9DzQMJVrO1DqOzdsVxi5YBemyVoSAsuyguxwYBgG
      isXXrxULVZTrAhlOfz2ptMZXvvwF3At7SBKPPfYYGc3E7VSQlFaC9XHc3gCSMEilNWoCXmKx
      ODXBypMTG5F7KGWgAtVu/Arj7rXF78KYlxrIDxZM554votR3UijMjIbsrK4ZUPknxX90Et3p
      5+rgJ6SWTYl0ujwE/D6cLjcORSZQU4vToeBwugjW+JEkmdraWuQKbEDps3dwNnWU2o0VmLqB
      qRt5C3+hEUJgZrLIruoKgLxX29q1i+OeNJ3bvkhzlcwM1Gan8Ow8XGo3FjF1HTOjofg8xemR
      mVf3rmVRwK1E3qttrPVy7dJ5/vP3/4K5KkmLos9O4ahvLbUbQK4nxkimUbzuonVHGukssrs6
      +v6Xk2dGmMBQvMRiSb70hWeplhrRVOPIvtK3XYRuoEUTOALeoj6NDTWNYgcAgODixYt0dXUQ
      joax2MtVkQhdQ+gakqu06lcjOoM6dg1nbcByL8dGEJkUwhRVuSBInhlhMkf39xMJhzlzbhCt
      CsRwRhmoQI1khMjf/hdcjQ1F74nJjJ6vGunD/eQNeVdNM7oh+K3feAFPFbwC5RJhlU4Faqpx
      Ij/5PjXPfg1HQ3tRbQshSA+fQamyuR8L5E+Prmfo79vBR59cXDEPc/beFDfHPl3MCjEyfJ3Z
      SJzb46MM3xghHp3j8pXKywqhz9zG2by9JLbNbJq5H/0Z/se+gmt78RMLi6yKyKpV1/+/QH4t
      kJbl7XfeZf8j+8joEHAAwuTy9Zu0BhzcjbejzA6Tcbdw5dJFJCNLS2cvoTu3SGTcOByOisqS
      kJ2ZxN29d8UxVhZ+WG9WCKFlmfvRn+I9+HlcO49aXnCiENkoMrcGcW7fD9MfWLBrIhbsWhwJ
      XpkVwprPZsGyQiwdm7cGCEVTHDv8CGPjt7i/KSaEQMuo6OZSmoqjjz2BOjOOs2UXB/vaGBy8
      sjh5uRLQZ+/kmQewyQNPhs7cj/4cz47D+PY/vS6rhfAwff0Mnt0nLB61ZNnqLV5ZJqwdLM3v
      nzvHRq7+IZPiT598m1DagzdYT2ChbSTJHNi7i0hKp1bJILX3k74zzrbDR4lHQtRs66PBpTNx
      Z5ajR/YvBkAlZEkwU3EcgboVx1gqiBazQgjTYO7H/xVXZz+BEy+tv1BsMBuFELl5v476NjIW
      jpMkCWnepmTxSby8TFjNCiEtGxG3+nC1lBXiH3/7eySic1w4f46UBsH5OeL1Ta0sz/lQs7M/
      9yG4lEVh1+46S46VGmHoCC2D5CnOzB8hBHN/8z+RfTUEn/ntktaSQk3gqC2Pwb9SkfexIUkS
      NXWNPPOFLy0W/lIyNjbGe++9RyQS4eTJk9y5cweAyclJ3n33Xaanp/nwww+JRqOEQiFL5zZT
      cWRvjeU8M+tBCEH473+A0LLUv/Ttkr8iqsNnStLwLicqYuSjoaGB2dlZXn/9dYLBID/96U8B
      8Pl86LrOa6+9xujoKG+88QbXr1+3pOXXi9gFGn3vDbJ3J2j8zX9Wcs2NEIL0jfNVnwWvIvq+
      DMOgrq5uMRDS6TRzc3OcPXsWr9fLd7/7XX784x+TSqUYHx+3tE6ZNnMbR0NhC0Fi8AO0eytz
      i+qRENFTP6HhK98kcvIni9s93bvx9h8sqP21ILQMZjKKo64FYVRR5oP7qIgAmJ2dxe12c+DA
      AQYHB/nWt77F1NQUzc3NxGIxVFXl2WefJRgMMjY2htO59gUN9NAdXB07C+pv+K3/R+LsL/P+
      dvd///GK7w0vv1qSAMiMXMC949DDd9ziVEQA9Pf309+fa3A/++yzANTX50/BeOTIEeLx+JrP
      rc1M4jv4zMadrCCEEKSGfk3wuX9UaldKTtkHgBEaxYzdXblxoevtvoarFGjC0dJv7fzxMEpN
      ZecztYyuoYUmcTQXbjZZpWIpAEJ37xBJ6ezs7QLTYOTmDeqaO0jHZkhlBds727h161O6evvw
      ewqzrpI2cR59dNko5cIK9HkG2hzbj1kKAGGaiGwaucqS4aZHLuDuOVCUnq9yZ+0BIEyuDI/Q
      FnBwN5aTQmjuFq4OXUQys7R09HJlYIAdBw9w8eIQjx8/VBgpxH09OkLk/pOvF0VgTRpgJKLg
      9s1rm1buvyFJgoVeqIVjC2J3jSSHTuM//uK6JQmllEIsHCtb9dmKFGL1s+RW19CyKrrIpccQ
      QnD0+OOooXHCaRNjPq1e4aQQy84hxJrS9q3VrhGbw7FqOnfrvi/atTKY+8B3K+sS3Gd3LZgm
      2t1PcW9fqimt36cCSSGsjuayrFxZNrzyPAusvQaQZA4+sotw0qBuXgqRWZRCzBJs7+eR9gZG
      b01w9PCBwkkhVpT/XNbi1RI3SUiLiyisxa4xO4mzcVvefdcjhViya13OsD6sXS9Aevwq7s5d
      yMtSgwhhsSAWSgqxDjnDuqUQq9i11Aaoa2xdXAgDIJBPCrFrF5uFmc1lLSvUCKo2M4mjubwy
      QWw2yYun8FdZr9dnUTGtIGGauTSMBZy2p81M4mwpzTyAUiBMg/TNQdxd1S1/WE7FBICRziI5
      HQXVz+iREI5gQ8HOV+5kJm7gautBclTRyucPoSICQJgmZrawWcuEaWKmU8jemptHJegAAAKx
      SURBVIKds9xJDX2A7/BzpXajrKiIADDUDIrbVdCnv6kmkZyuomZfKCVCCNThAXy7j5XalbKi
      /ANACAw1g1zgrAVGbA4lUFlzFzaCdm8CR10LkrM6sz+sRtkHgJ5Ukd3OgmvntVB1NYAT50/i
      O/hUqd0oOywFQEZNEo7mhGZCCMKzITJabjAsHA6jZ9NMTU2RSFmZYLc6Qs+SGRvE4S/8bK3s
      9Kc4q6QLVAhBcvA0vr3HS+1K2WFBCiE4+8k5fA4J6ciTSJFxRmZ00tdH2NlRz+nBMY711jGt
      13KooTBpxtM3P0Eykkhy4QNAC03i3XWk4OctR/TZaWSPH8VXPQ3+tWKhW0VgIlMfcBJLaTjj
      MWqbeknN3eHqjQiKrlLf9RQ1qTkuDF7l8WP7N7ZiimmSuvBLvP2PYt69vDYPxdpXatFm7yEF
      G1fdbyMrxFg5VpjmCh8sHSvMNV1vbOBX+I58bvV9LK78vuVXiMmLJNHd0UIkqdORmUFq2YE6
      NkrXzj30dLYxNjaKyCa4F4qyc2fvhleISY+cx9nchez3s9bBdkla20otQgiEmsBVU4e0yn4b
      WSHGSntFkuUVvmpWjpXkh16vEAJ18DTt//Tfo6y2j2FN0LblV4jJj0T3jl10L9vSeHgpn35v
      7w4A6ps2Pr1QmCbJM39H7YvfQR97f8Pnux8znURSlFUL/1bCiEcACSVQW2pXypKyLAHZ29eR
      A/U46lrZjCX2jFgYObD1JsFkZyYRGXXFtsTA+7i27SBz++aK7Uqw8TOUsNVD2QWAEILEx39L
      8HOvbJoNfXYaZ3Pp1wMuNFP/7d+SunI272+zP/mrFd+bX/keTb/1nWK4VdaU3TiANn0LhNjU
      ZLXZ6XFcrdUzBmCzOmUVAEII4qd/TODEb2yqnezdCZytXZtqw6Yy+P/7S6/UlbheYQAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Average Points by Position' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Average Rebounds by Position ' width='192'>
      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
      EoCiqvn/MLMxQ9zguBYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='College Experience and Percent Change in Stats (2)' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='College PER and Percent Change (2)' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='College PER and Percent Change (3)' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='College WS and Percent Change' width='192'>
      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
      RnZIAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      +NYlAMdo8gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='PER by Pick' width='192'>
      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
      ig7jAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Performance by Draft Round' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Performance by Position' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Playmaking (AST)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Playmaking (Blocks)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAASdUlEQVR4nO3d+3NU533H8ffznLP3i6TVFSHEHQOxHceJHQeb2EnsZMa9jJN2knT6Q6b/
      UH/o9Idm0sx0pp2mbhKnSZ00Nydp7LaOHWODCQ4GyyDAIEBCEtr7Oc/THxYJbC3Ssqwe7XK+
      rx8YZrVnvw/L+ejcnvM9ylprESKidKc+qN0cWWvvalnXy/XKWDejZi9+Px0LgDHG+bJhGDpd
      DnprrK5r3k0ANuv7Ua3sApnSLG+dvsJIIUu5bkh7IcW6wgvLxDIFJrYMNz5MqbYGYoxB6zvP
      ouvloPGf3M6/czPG6rrm8qrUS9+P38obA6OJ6zr1EMrFEsn+DKmYgWQeTA2tNdZaPM+740Es
      r1DtLBsEAb7f0j+hI8tZazHG9MRYN6Pm8taxnRVys76flkZqtU/Mj5FNJ0imkqTjPvhJdFgj
      mcm3VVyIbtBSdBLpHPft3w/A8PAwAIMbNyYhnOnYQbAQvUgCICJNAiAiTQIgIk0CICJNAiAi
      TQIgIs1ZAKy1XP71a0z94/epLy65KivEmtxtAYzhwo9+xdzrbzN/9KSzskKspb1JFO3Qmomv
      PMPS1Dn6H9rvrKwQa3EWAKUUw4c/yfDhT7oqKcS65CBYRJoEQESaBEBEmrMA1OYWeP9b32X2
      f464KinEupwFYP7ICeaPnODii79xVVKIdTk7CzTwqfspX5ghd2C3q5JCrMtZAGL9ObZ/4zlX
      5YRoSUsBsGGNU6fPMLFtgmuLJQYyPqVAo4MS8WyBbCq+0eMUYkO01BalOjvNsRnDSEZhjcVq
      hTIhaA+sZXJyUtqibFBNaYuyMcstL9vaLlBqgHTtjyzQTxDUGEj7FAONDq4Tzw5KW5QNrClt
      UTZmuZVlW3ljIp3jYw890lYRIbqZXAgTkSYBEJEmARCRJgEQkSYBEJEmARCRJgEQkSYBEJEm
      ARCRJgEQkSYBEJEmARCRJgEQkSYBEJEmARCRJgEQkeYsAKU/vseFf/hXyu9NuyopxLqcdYWY
      /+3rlE6cxkunSO2edFVWiDW56wv0zBPodJKBpx5zVVKIdbXWFsVapqamGOzPcWWxwkDKoxho
      vKBELFtgdGhg3c9I7ZwgtXPirgcsRCe1FIDy9TkuzS6SjHuEgaESaLSpYWNJauUljOnDGEML
      HVaaandZYwxBEDhbDhq/DHplrK5rLn8vy90hXNS82++ntV0g7ZNJaLQfJ6gvoZOaUqjRVWmL
      stE1pS3Kxiy3smwrb0xn+3jo4x8HYMuWtmoJ0ZXkOoCINAmAiDQJgIg0CYCINAmAiDQJgIg0
      CYCINAmAiDQJgIg0CYCINAmAiDQJgIg0CYCINAmAiDQJgIg0CYCINAmAiDQJgIg0Z21RPspa
      S/mNY+BrEvcf2KxhiIhruS3KG0eOsH18lA/mihQyPqVAo4MS8WyB7RN3fqNwcOky89//T1CK
      oYlxvKHBO/4MIe5WSwGYu3iGmavzZHL9FHIpjFKkVIhK9mFNHWPMnbc2yeeI7dgGvg/plNOW
      GNIWZWOW68W2KMq2+L+5uLiIrwyXrhUppH2KoYdXLxLLDTLYlyUMw7bbovRKq5FeGutm1Lxn
      26IA5PN5AHbl+gFo/DnUVmEhuoWcBRKRJgEQkSYBEJEmARCRJgEQkSYBEJHmLADWGGyt7qqc
      EC1xEgBrLYvf+T6zf/v31M9/4KKkEC1xswWwluDiJWyxRHjtmpOSQrTCyWxQpTV93/grwquz
      xO/b66KkEC1xNh3aHx7CH5apE6K7yFkgEWkSABFpEgARaRIAEWkSABFpEgARae6mQlhL5cib
      VI8ea+ueWiE2grPrAOGlGYr/8SLK9/C3bcMrDLgqLcRttRSAWnmJUydP4ueH0EqRVHWKdYUX
      lollCuzYtnZbFGstpV+8RPXIm3hbxlCJeEcGL8TdaikAfjyJ72l8T7M4v0CikCetDHh90Epb
      FGupnX4PG9SxlTJhtYZJJFZ+fMctVW5ZTtqidE/NXmyL0lIA6tUyKpFlIJcGC/l04mZjrL4C
      WmustWu2C8n95ZehXCK2fz+xW3Z/rLUopXqi1Yi0RVlbL7ZFabkv0HrW6wtkrcUuFVGpJOqW
      AffSStVLY92Mmr0YAGcHwUopVC7rqpwQLZHrACLSJAAi0iQAItIkACLSJAAi0iQAItIkACLS
      nFwHsNZQf+soeB6xBx5AKeWirBDrchIAc+Uq5Z/9FFupkBsfxxuS7hCiOzjZBdL9/WAMZm6O
      +tG3XJQUoiVOAqDicRKHP4u/Ywcqm3NRUoiWODoGsCQeeYT4gw+ibjxrTIhu4GQLEE5Ps/St
      b1L97W/kAFh0FTfdoRcXoFolmJqi/O/fofb6ay7KCrEuJwHw992HyqShXCKYnqb+5hEXZYVY
      l5vToAvzUCqB1sQOHMQ/cNBFWSHW5SQAemiY+OEnwdPEDt4PyaSLskKsq6VdIGtCFhevY8KA
      YqlCUK9SqdaolkvUg3Dd5ZXWxB/9NAQBxW9/k/pbsgskukNLW4CgVuXMqRPo3DAEdTJJTS0A
      ZQO8eJpdOyZX7pddSzg3i63VMHNzH3pvK8s2sxnL9cpYN6OmMQalVE99Py0FwGCJx3wq9ZCk
      rwGNVhalPJSi5TYh8Sc/j79nH3rb5IcGIZ3i7h3LXT56RWt9gfwYg+M7KfTnWCrXSMc1NaNQ
      YQ0vkVlpi7JuN4B0Gm/vvg+9tLzyt9NJwBjjdLnl3za9MNbNqgm98X+5vGxLAfD8OMNDBQD6
      cjEAGn/Kwazobc7vBzDXFwkvnMPa9vbbhOgkp92hbblM9YXnqb7wPOHUe65KC3FbzhpjmfPT
      VH/yQ8zlGfTwKCqVclVaiNtyFgB7fRFqNbydu0n+xddRqbSr0kLclrMAePsPkkhnUIUhWflF
      13DXG1R7eDt2uSonREuaHgS/c/QVfvD8z6k4HIitVQmn38fW6w6riqhrGoBMJs9ibZGw6m5l
      rL38K6ovvkD9d69g6zUJgnCiaQBmZubpT2neOPq2s4GobB48H7Sm+m//RPV7/4ytVp3VF9HU
      9BhgZHiA0xfm+cKDH+tYIWstVKsQi6GaPGAi9ughYg88hK1WqB47Ap6GoA63PEpJiE5rGoDZ
      uQV2Tm4lkezcymfeP031Jz/A27ufxJf+fNXPlVKQzkAqTeK5r4HnoTLyQA2xsZoGYHCoj6PH
      L3WsiDWG2s9fxLx/GpXOrPlepRRqbLxjtYVYS9MAKD+FrRXp2GwdpdBbJ7D1GvGnn+3Upwpx
      11YFwFrL3OUrjE5u69hEIaUU8We/DPU6KilTIET3WLWOL10+x5VinaWl6x2u5BGePE7l239H
      eFYmwonusCoAtVKRgbGt+NZ0bhcIGg/L/ukPCU/+geDo7zv5yUK0bdUuUGHHfsKZD1AjD9PR
      E5BKEXv8c4TvniD22Gc7+clCtK3JFmCRq5c+4Ec//TXr93u4M7ZWBa0xly9hZi93+NOFuHOr
      tgDVxWucOHOFQ4/cz/Kt6rXyElPvnyXTN0ClFpBPKIp1hReWiWULjI8Mrl/JWsJjbxBePIeZ
      nkJv20Xiq99onPsXYpOsCkB2aIyHH/LYuX1i5bVYIkkum8WYkHq1Ri2WJKZCSKQJqyWMGcAY
      s2Z3B3PkVUgm8XbvB6WxqTShUhCG6y572880hiAInC0H7Xex2Iyxuq65/L2021JlM76fVQFQ
      fgI/XOKll17hyacPEwNK87PMFSsMD/SBqhLTlrLx0dUS8WxhpSuE12SKAzQuhAWnTqBicWKH
      n0bv2AsKVCy+0kbjdsuuJQgCfP/OZ3S3u9xyV4heGOtm1Fxe8dvp0rBp389HXywtXOX98zPc
      unHIFEZ5oDAKwNhYG5WUIvbE09irM+gde1HxeFsDFqLTVm8BsFSqNeodnI6slMLbvgu2yw0x
      orus2lbNnbtAqVikXjd0cjKytRZzZUbO/oiusmoL0L91K2NLFSBGR3dUFheo/+R7AKjRcVQy
      hX/4GbiLDmRC3K3VZ4EKI3zmMyOdrxSPQzoNlQrm7HtgLP4nPg35/s7XEqJFzn79qlSa+HN/
      TfyrfwNKQb2KuTbrqrwQTTnrCgE3T3t6O/Zgrs6se2+AEBvNaQCgcUbI/8KfQlBHJZKNiyfW
      YsslSKZ6qrW26H2bcgSqPA+VuNlZOjz6OvUX/gXzztHNGI6IsK44BWOL1yEMsMWlzR6KiBjn
      u0DNeI8cRu++DzUi9wILt7piC6DiMYgnsYvXsOWSPDJJOON0C2BrtZVJcB96fWGe8Oc/wM5f
      Q+X78T51CO/Ax10OTUSUuwdklEvUX3ye+o+/27gx5lbxBKQyoBTWGjkWEM642wLU61Atg9IQ
      BI2V/gaVShP7s69DUMNem0WNbHE2LBFt7gKQy+N/8TmoVaHJ8wFULIb1fczM29jjR/APfb7R
      L1SIDeRuKoRS2AtnCV56kfD1l7HN7hoyBjN1Ent1BnP5oquhiQhzexBcXMJcnMYszKHHJlCT
      H7k/QGv8x57Czl1Fb5N7B8TGcxoA75OPY69dbRzkNpkHpJRCbd0OW7e7HJaIMLeT4eJx/C99
      BcIAFZe252LztRSARluUM2T7B1lcKjOY8SkGGh00boofHx1quaDyPFjjpnIb1DEn34ZYAr33
      oEyOExuqpQDEEkmy2RzVWkA+FaNqVaMtSjJDWCtjjFm/tcnSInZpETW6tXE/wC1WlrUW88sf
      Yo6/gRodxxsdh0zuth8pbVG6q+Y90RalmdL8HPPFCkP9eeaLFQppn6Lx8aolYrnB1tqivPIL
      KF5HH/r8hw5wb22LYo3BloqoMEAPjeHl8ih9+62FtEXprpr3RFuUZjKFEe4vNG6TbKcrCkqh
      8n3YerVxxfd2b9O68Rzh8UnU0MiaK78QneDkIFgphffEMxCE6/YE0nsPggnRk3tcDE1EnNMH
      ZRO/zS5StUJ46g+okS2o4S2o2StgO9qcXYimumI6tD17GvPuccIj/4c5c/PvQmy0rrghRm2Z
      gJkLqC3b0FsmsBenUVu2bfawRAR0RwBy/XhPNR6eZ63Fe+xzcOOeAWstdvYySmtsaQk7P4u+
      78FV9xQI0Y6uCMAyuzBH8PLPsHNX0HsO4h96Gq4vEP7mx5gbIWBgCJXrR22Xg2Rx95wcA9j5
      OcKjv8Muzq/5PnP5InbuCnbhGpRLjRfj8cbWoF4D7aEHR1DDbZ2MFWIVJ1sA886b2IvnMLUa
      3iOHm77HWovK5tG7D6DHtqG2TgKgkmn8Z7+GPXsK/Bh6+55VV5KFaJeb6wDb90Ktunr6862u
      L2Be/RVojXr4ECp586YZFYuh9hx0MFIRNU4CoMcnYXxy7Tct3xfseeDHXAxLiO45CFbJFN7T
      zzW6RniNYdkwuNFCUZ4uLzZGV1wIW6Z8/+bKbw3mf39J+IsXsLMzmzwyca9y1xbFWszx3xP+
      94+xS4urf16tYI6/jr10/sYLYCslCIJGPyEhNoC7XSBrseemoFbBzl1e1fHBnpvCnD4Bx15r
      XBF+9Cm8J74EpSIUhp0NU0SLu10gpdAPP4468AnU+Op7ftXYVtTQGBSvY995E3vybVQqgxoc
      kbvCxIZxNxtUKRjd2rgjrNnPs33ox7+I0Ro79cfGBTAhNpizANiFOez0adSOfahc8+eCKaXQ
      jz4Fe+9ftdtja9XGjTUyB0h0kLMAmJPHYOZ847TmJx6/7fuUH8MOjsDlD7D5AVQ6iy0XMS//
      F1TLqF0HUPtkMpzoDGcB0JN7MPUaamL9hlf23BT27dcg14/35J9AGEK9ip05jzUhOpmGnfc5
      GLW417UUgKBa4vT0JfJJTTHQxG2FYl3jhWVimQK7tjffr7+VGptAZ/NQXMQa05jZ2YQNA6jX
      sLUKOtfXeDGTQx9+Fnv2FPaDM5g/vIGeuwJrbEmEaEVLAfATafqyKeKe5cKVKwwP9ZPRBnQf
      2KC1tijWYl/9JZSLjV2gsZtTI25ti2J/9xK8ewzy/Zjhccxyy4t0Dg48DPkB7NFXMeWitEXp
      spr3bFuUenmJ+fl5hoeHGR4eYSgXpxh6ePViS21R4MaK01fAGoPO5lG+v/L6rW1RTL2G9WOo
      RBKd61t538rnbNsNuT7I5Bu9RKUtStfU7MW2KMp26HlEYRiuu2LYShn77jHU6FbU6ETjtY+s
      VLZSalz8yvej1pkUJ32BuqtmLwbAbXfoi2ex56ewVy/h3QjAR6lkGpKrnx+w7mebEC5fbAQn
      nb3boYqIcDoZTo1shaEx1AacwbHnpjBvvoI58krHP1vcu9x2h87k8B793LrvMxfOYKfeQe97
      cOXKsTUGO/UOeD56x75Vd4WpTLZx7JBvfpFNiGb+H/AKDnfjB1hwAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Playmaking (Steals)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Playmaking (TO)' width='192'>
      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
      4/H/Ac45V+mZQn0sAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Rebounding (Reb)' width='192'>
      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
      jO4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='SOS and Percent Change' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Scoring (3P)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Scoring (GP)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Scoring (MP)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAMeUlEQVR4nO3d244cVxUG4H9X16lPM/Z4PJaNYyeQmMRBSAgJLpC4QoKHQuIhuOcREOIC
      wRVCQoJchAikiJDYcbAdG4/lOfS5DnsvLqq75+hJVWu6XTPr/6SRT7Om9vb0P1VrV/duIyIC
      IqW88/gii2RoFTUislBNVZzLxZ3/uQTAOVe5xlq7kpqqY1vVuKrWLPIAqOtcFqlxzi1l/ucS
      AKKLigEg1RgAUo0BINUYAFKNASDVGABSjQEg1RgAUo0BINUYAFKNASDVGABSjQEg1RgAUo0B
      INUqBWBvdxd5nuDpsxeYDHvYfrW/rHERrYQp+5pgyRN89PdPsHXnJmLnsC8eYuNw985dWGth
      jKl0YOccPK/aCWgVNXUd1+zbVOX/ua5zWaRmWfP3y36x3t4erMuQpin2eyN015sYJIDneRAR
      NBqN0gMDgDzP4fulD79QjYjAGFNpbKsY1yI1s5d2VnnQ1HUui9TMfsie9/xLj2B98wZ+8tMb
      pQ9OdBGwCSbVGABSjQEg1RgAUo0BINUYAFKNASDVGABSjQEg1RgAUo0BINUYAFKNASDVGABS
      jQEg1RgAUo0BINUYAFKNASDVGABSrfSL4vPJEA8ePcbm5iZe7g1wfT1GPxG889atZY6PaKlK
      B6ARteDZMXZ7I4jNMUwtfAiccwu9i7dzDnmer6SmythWOa4qNbM5zLZHqcu4VlWzrPmXDkA6
      HkD8CK0oRDoewkOEcSbcF2hFNdwX6A3vCxS1uvju+x8CAG7fvll6EER1xiaYVGMASDUGgFRj
      AEg1BoBUYwBINQaAVGMASDUGgFRjAEg1BoBUYwBINQaAVGMASDUGgFRjAEg1BoBUYwBINQaA
      VGMASLVK+wJ9/sUXiLrXMNjvY+NqE4OJ4IN7317m+IiWqnQAvLCJwAeG4xS3NzrYFoN2zH2B
      VlXDfYHe8L5AeTKCNFq4e+Matl/1cOtKjF7CfYFWVcN9gd7wvkBhs4N79+4BANbXrxS/lh4K
      UT2xCSbVGABSjQEg1RgAUo0BINUYAFKNASDVGABSjQEg1RgAUo0BINUYAFKNASDVGABSjQEg
      1RgAUo0BINUYAFKNASDVSgdARDAajuBsjv5gCJtnSNJsmWMjWrrSL4q36RjPnj5EkoVotGJE
      yDDOBB/cexciUmm7CgC1ranzuIBq24LUdS6L1Cxr/qUDIDZD3uji5rUmvnzwX2BrE0HjYL+d
      qvsCrapGRBaqqWrZNYt8/UXr6lizrPmXDoDxI6y1QsStLu6+9x6udGKMs2Lfnap778wGtuya
      2eSr1tRxLovsC1TXuSxaU3VfoDLHKB0AP4xx69YtAECr1QIABFHpsRDVEleBSDUGgFRjAEg1
      BoBUYwBINQaAVGMASDUGgFRjAEg1BoBUYwBINQaAVGMASDUGgFRjAEg1BoBUYwBINQaAVGMA
      SLXSAXA2w5cPH2I8GuKrx19juL+D59uvljk2oqUzUnK/CZunePXyObb3clxvNbAjHlrG4a23
      7sBaC2NMpQM75yq9wn9VNXUd1+zbVOX/ua5zWaRmWfMvvStENtjFo2d7uLm5jue7A6xfaWIw
      EXiet9AWF3mew/dLH36hGhGpvGXLKsa1SM0i26LUdS6L1Mx+yJ73/EuPIL5yAz/+4Q0AwJ27
      pcdAVGtsgkk1BoBUYwBINQaAVGMASDUGgFRjAEg1BoBUYwBINQaAVGMASDUGgFRjAEg1BoBU
      OzUAey+/xn8ePEa1tz4munhODcDTpw/w5z/8BemqR0O0Yqe+IGZr6228c8+i2mu8iC6eE2cA
      Zy0mSQJxlpdAdOmdCEAy3MeTZ/+DFYNqL3MnunhOBKC5toFmmOPRvx/xDECX3okeYNLfRX/s
      4Xs/+hDBob932QTbu0O0fIPmxgZ2X74ERLC1tbXC4RKdrxMBEAiiMMJgkMAC80bYC2KI3YNr
      ePj040/Q3ryGEALnHJxzKLm90JxzDnmer6SmythWOa4qNbM5zLZHqcu4VlWzrPmf2BjLWQt4
      HrxjGxDlyQifP/wKW1tb2O+PsHW1jX4C3LpxDdba2u4L5JzjvkBLHNeqala2L5D3mgeLH7Vw
      //59AMDmZvF33dJDIaonPhWCVGMASDUGgFRjAEg1BoBUYwBINQaAVGMASDUGgFRjAEg1BoBU
      YwBINQaAVGMASDUGgFRjAEg1BoBUYwBINQaAVCsdABHBaDSGuBz7+33k6QSD0XiZYyNautIv
      y5c8wdPnL9CJDIb9CVwUwFiH9979znz3hSpWUTP7fGPK73FX17lU/fqLHKPONYtsi1LmGOUv
      gYyHdDxEmllY5wAIXLWtgN6IKg/+Orss81gWSfrIH38MN3xVqa78xizG4FvfuoV2u4M0y9AM
      faS2+MZU3a8FKJK87JrZT4AqNasY1yI1szPZZZjLIjUicub8sxefwW1/AUz24b//s9LHKB0A
      rxHg6tWrAIAwLDZNbAZnVRCtTmPjbbjRHhrX361UV207L6Ka8tZuILr/8+p1SxgL0YXBAJBq
      53MJJA6Tf/wWXrwGRB2YqA0TdYqPIIbxI8CPuZJBtXNuPUD+9T+BLAHEHv0HzwcaPkwjgola
      QNCC11yHBE24eG0alFlguoAfwfhh8SsDQ0t2PgEwHtq/+CXEZkA2gqQjyLgHSYeQZAiZFL93
      kz6QDmGHryDZBNYmwJHd2Q3gNYBGAONHRTDCDkzchYk6kKAJaa7BRMWfTdgqghLEMA0uSVF1
      53YGMEEME8RAfPam6SICiIVNJvBgIdkYkgyKj8kAkg6KwCRDSDqCG+0AveeQPAHyBEff7sAA
      Db8ITBDDBG2YuDMNSLs4o4QtyOxMEzZh/BgIIhiPC2D0BpZBjTGA8YEghuf7QHP9zM8XEcDl
      gM2QpxN4dlIEJZmFZAiZ9Ochcv1tYPcJJE8Be+ydjo0HNALA84vARN1pYDrFmSbqQMIWEHdh
      4rWD/iWIYQzXCy6j2v8YNMYUD9pGAOOFaPgbwBmZEXGAzQGXw2UTuHEPJhtNL8dmZ5p+cZk2
      6cHtPZueXSaAK/qXbH7wxrR/CYGweXBmmV6WeVEHiNoQvwXXWi+C4ods+C+Q2gegKmM8wA8B
      hPCCJhCvn/kWSeLs/Awj2QT5uAcvG04DMj2zHDrLuNEOJJsGRg6eaJUChxr+ECZqTxv+tfnZ
      5aDh7xaLAGELJoiKswy9EZcuAFUZr1E03n4EE3XgxVde+75SRf/iirDYDEiLM0s+2oeXjw+d
      XU42/MgTAGc1/AfhOB4WE3WAIAb8GBI22fCfI/UBqKLoX4rAHG745TVvxjZr+GEzSJ4eNPyT
      Huy4B5NPDhr+pA833AH2nxeBOd6/HG74/fggHHHnYKUsbM9XzEwQA14A8dpFyOlUDMASzRt+
      z4cJmkcafnNKaA43/GKzeTAk6cMlxWUYZn1MOpw2/I+LwLhjbwd6vOGPD51ZDi0tz0MzW8VT
      9pDQNduaO9LwA0cCc9rbpM4bfptBbHqoZxkVoRn3gPRgpWze8GeTU25YNgAvKHqYsHXoXsvx
      peUOvKg7bfgj4IL3LwzABTZv+P0QBm2gdfXIvx9/n9zjDX/RrwzmK2KSHPQuZzX8AIqG3/OL
      Va+wjSw+vEJ2dGnZRJ3pDcv6NfwMgCLHG350Nk98ziw0r2v4i4AM4CbFpRjSIdy4Vywp919M
      A/PNDT/CNvLZZVjcPXHWgR+u5A4/A0Cnel3Df1o7ned5sdTsLOAySJ5BstG84Z9flh1q+GW0
      A9t7TcNvvEOBKRp+TC+9DgJztOE3QbMIdsWGnwGgc1H0L9P7IEETaK6d+fl5nqNhZLpClkz7
      loNl5MN39yUdQPovke88md6wfE3DP3tKzOyyK+zARh2Y5loRmLA9vcNfPH8MfsQA0JtjZg/a
      sHWifznO2hzGWRjJiyXleUD686Z/fod/3IMbP4PkE9jstP6laPhNw68egGSwj0fPd3Bzs4v+
      RHD75vWqX4JoAWb6dJio6BG+ITDiLGyWoAEp7r/MGv5kNH0e2QCSDKsHYG9vD8Yz2BuMYcTB
      ueJDpNoeKc455Hn+zZ94DjVVxrbKcVWpWWRfnLrOZZGaheZvfMDzgEYExFcAAGb6MVM5AO1u
      Fy9ePkFwtYskFXieBxE58/k2pzm+RLeMmtlWGlXGtopxLVJz2n2AOoxrVTXW2srbwpQ5RuUA
      dNY38P0fbFQtI6olPsmdLgVJxkg/+whuuF+pjgGgS2Hyt99h9PtfY/yn31SqYwDoUvh0N8Wv
      /vgv/PXZsFLd/wFayVqtNtJeqAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Scoring (PPG)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 17' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      RJ5hhRR6PvwAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
